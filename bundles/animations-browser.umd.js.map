{"version":3,"file":"animations-browser.umd.js","sources":["../../../../packages/animations/browser/src/render/web_animations/web_animations_driver.ts","../../../../packages/animations/browser/src/render/web_animations/web_animations_player.ts","../../../../packages/animations/browser/src/render/noop_animation_engine.ts","../../../../packages/animations/browser/src/render/dom_animation_engine_next.ts","../../../../packages/animations/browser/src/render/transition_animation_engine.ts","../../../../packages/animations/browser/src/render/timeline_animation_engine.ts","../../../../packages/animations/browser/src/dsl/animation_trigger.ts","../../../../packages/animations/browser/src/dsl/animation_transition_factory.ts","../../../../packages/animations/browser/src/dsl/animation_transition_instruction.ts","../../../../packages/animations/browser/src/dsl/style_normalization/web_animations_style_normalizer.ts","../../../../packages/animations/browser/src/dsl/style_normalization/animation_style_normalizer.ts","../../../../packages/animations/browser/src/dsl/animation.ts","../../../../packages/animations/browser/src/dsl/animation_timeline_builder.ts","../../../../packages/animations/browser/src/dsl/element_instruction_map.ts","../../../../packages/animations/browser/src/dsl/animation_timeline_instruction.ts","../../../../packages/animations/browser/src/dsl/animation_ast_builder.ts","../../../../packages/animations/browser/src/dsl/animation_transition_expr.ts","../../../../packages/animations/browser/src/dsl/animation_dsl_visitor.ts","../../../../packages/animations/browser/src/dsl/animation_ast.ts","../../../../packages/animations/browser/src/render/shared.ts","../../../../packages/animations/browser/src/util.ts","../../../../packages/animations/browser/src/animation_engine.ts","../../../../packages/animations/browser/src/render/animation_driver.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AnimationPlayer, ɵStyleData} from '@angular/animations';\n\nimport {AnimationDriver} from '../animation_driver';\n\nimport {WebAnimationsPlayer} from './web_animations_player';\nexport class WebAnimationsDriver implements AnimationDriver {\n/**\n * @param {?} element\n * @param {?} prop\n * @param {?=} defaultValue\n * @return {?}\n */\ncomputeStyle(element: any, prop: string, defaultValue?: string): string {\n    return /** @type {?} */(( ( /** @type {?} */((window.getComputedStyle(element) as any)))[prop] as string));\n  }\n/**\n * @param {?} element\n * @param {?} keyframes\n * @param {?} duration\n * @param {?} delay\n * @param {?} easing\n * @param {?=} previousPlayers\n * @return {?}\n */\nanimate(\n      element: any, keyframes: ɵStyleData[], duration: number, delay: number, easing: string,\n      previousPlayers: AnimationPlayer[] = []): WebAnimationsPlayer {\n    const /** @type {?} */ fill = delay == 0 ? 'both' : 'forwards';\n    const /** @type {?} */ playerOptions: {[key: string]: string | number} = {duration, delay, fill};\n\n    // we check for this to avoid having a null|undefined value be present\n    // for the easing (which results in an error for certain browsers #9752)\n    if (easing) {\n      playerOptions['easing'] = easing;\n    }\n\n    const /** @type {?} */ previousWebAnimationPlayers = /** @type {?} */(( <WebAnimationsPlayer[]>previousPlayers.filter(\n        player => { return player instanceof WebAnimationsPlayer; })));\n    return new WebAnimationsPlayer(element, keyframes, playerOptions, previousWebAnimationPlayers);\n  }\n}\n/**\n * @return {?}\n */\nexport function supportsWebAnimations() {\n  return typeof Element !== 'undefined' && typeof( /** @type {?} */((<any>Element))).prototype['animate'] === 'function';\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AnimationPlayer} from '@angular/animations';\n\nimport {copyStyles, eraseStyles, setStyles} from '../../util';\n\nimport {DOMAnimation} from './dom_animation';\nexport class WebAnimationsPlayer implements AnimationPlayer {\nprivate _onDoneFns: Function[] = [];\nprivate _onStartFns: Function[] = [];\nprivate _onDestroyFns: Function[] = [];\nprivate _player: DOMAnimation;\nprivate _duration: number;\nprivate _delay: number;\nprivate _initialized = false;\nprivate _finished = false;\nprivate _started = false;\nprivate _destroyed = false;\nprivate _finalKeyframe: {[key: string]: string | number};\npublic time = 0;\npublic parentPlayer: AnimationPlayer = null;\npublic previousStyles: {[styleName: string]: string | number};\npublic currentSnapshot: {[styleName: string]: string | number} = {};\n/**\n * @param {?} element\n * @param {?} keyframes\n * @param {?} options\n * @param {?=} previousPlayers\n */\nconstructor(\npublic element: any,\npublic keyframes: {[key: string]: string | number}[],\npublic options: {[key: string]: string | number},\nprivate previousPlayers: WebAnimationsPlayer[] = []) {\n    this._duration = <number>options['duration'];\n    this._delay = <number>options['delay'] || 0;\n    this.time = this._duration + this._delay;\n\n    this.previousStyles = {};\n    previousPlayers.forEach(player => {\n      let styles = player.currentSnapshot;\n      Object.keys(styles).forEach(prop => this.previousStyles[prop] = styles[prop]);\n    });\n  }\n/**\n * @return {?}\n */\nprivate _onFinish() {\n    if (!this._finished) {\n      this._finished = true;\n      this._onDoneFns.forEach(fn => fn());\n      this._onDoneFns = [];\n    }\n  }\n/**\n * @return {?}\n */\ninit(): void {\n    if (this._initialized) return;\n    this._initialized = true;\n\n    const /** @type {?} */ keyframes = this.keyframes.map(styles => copyStyles(styles, false));\n    const /** @type {?} */ previousStyleProps = Object.keys(this.previousStyles);\n    if (previousStyleProps.length) {\n      let /** @type {?} */ startingKeyframe = keyframes[0];\n      let /** @type {?} */ missingStyleProps: string[] = [];\n      previousStyleProps.forEach(prop => {\n        if (!startingKeyframe.hasOwnProperty(prop)) {\n          missingStyleProps.push(prop);\n        }\n        startingKeyframe[prop] = this.previousStyles[prop];\n      });\n\n      if (missingStyleProps.length) {\n        const /** @type {?} */ self = this;\n        // tslint:disable-next-line\n        for (var /** @type {?} */ i = 1; i < keyframes.length; i++) {\n          let /** @type {?} */ kf = keyframes[i];\n          missingStyleProps.forEach(function(prop) {\n            kf[prop] = _computeStyle(self.element, prop);\n          });\n        }\n      }\n    }\n\n    this._player = this._triggerWebAnimation(this.element, keyframes, this.options);\n    this._finalKeyframe = keyframes.length ? keyframes[keyframes.length - 1] : {};\n\n    // this is required so that the player doesn't start to animate right away\n    if (this._delay) {\n      this._resetDomPlayerState();\n    } else {\n      this._player.pause();\n    }\n    this._player.addEventListener('finish', () => this._onFinish());\n  }\n/**\n * \\@internal\n * @param {?} element\n * @param {?} keyframes\n * @param {?} options\n * @return {?}\n */\n_triggerWebAnimation(element: any, keyframes: any[], options: any): DOMAnimation {\n    // jscompiler doesn't seem to know animate is a native property because it's not fully\n    // supported yet across common browsers (we polyfill it for Edge/Safari) [CL #143630929]\n    return /** @type {?} */(( element['animate'](keyframes, options) as DOMAnimation));\n  }\n/**\n * @return {?}\n */\nget domPlayer() { return this._player; }\n/**\n * @param {?} fn\n * @return {?}\n */\nonStart(fn: () => void): void { this._onStartFns.push(fn); }\n/**\n * @param {?} fn\n * @return {?}\n */\nonDone(fn: () => void): void { this._onDoneFns.push(fn); }\n/**\n * @param {?} fn\n * @return {?}\n */\nonDestroy(fn: () => void): void { this._onDestroyFns.push(fn); }\n/**\n * @return {?}\n */\nplay(): void {\n    this.init();\n    if (!this.hasStarted()) {\n      this._onStartFns.forEach(fn => fn());\n      this._onStartFns = [];\n      this._started = true;\n    }\n    this._player.play();\n  }\n/**\n * @return {?}\n */\npause(): void {\n    this.init();\n    this._player.pause();\n  }\n/**\n * @return {?}\n */\nfinish(): void {\n    this.init();\n    this._onFinish();\n    this._player.finish();\n  }\n/**\n * @return {?}\n */\nreset(): void {\n    this._resetDomPlayerState();\n    this._destroyed = false;\n    this._finished = false;\n    this._started = false;\n  }\n/**\n * @return {?}\n */\nprivate _resetDomPlayerState() {\n    if (this._player) {\n      this._player.cancel();\n    }\n  }\n/**\n * @return {?}\n */\nrestart(): void {\n    this.reset();\n    this.play();\n  }\n/**\n * @return {?}\n */\nhasStarted(): boolean { return this._started; }\n/**\n * @return {?}\n */\ndestroy(): void {\n    if (!this._destroyed) {\n      this._resetDomPlayerState();\n      this._onFinish();\n      this._destroyed = true;\n      this._onDestroyFns.forEach(fn => fn());\n      this._onDestroyFns = [];\n    }\n  }\n/**\n * @param {?} p\n * @return {?}\n */\nsetPosition(p: number): void { this._player.currentTime = p * this.time; }\n/**\n * @return {?}\n */\ngetPosition(): number { return this._player.currentTime / this.time; }\n/**\n * @return {?}\n */\nget totalTime(): number { return this._delay + this._duration; }\n/**\n * @return {?}\n */\nbeforeDestroy() {\n    const /** @type {?} */ styles: {[key: string]: string | number} = {};\n    if (this.hasStarted()) {\n      Object.keys(this._finalKeyframe).forEach(prop => {\n        if (prop != 'offset') {\n          styles[prop] =\n              this._finished ? this._finalKeyframe[prop] : _computeStyle(this.element, prop);\n        }\n      });\n    }\n    this.currentSnapshot = styles;\n  }\n}\n\nfunction WebAnimationsPlayer_tsickle_Closure_declarations() {\n/** @type {?} */\nWebAnimationsPlayer.prototype._onDoneFns;\n/** @type {?} */\nWebAnimationsPlayer.prototype._onStartFns;\n/** @type {?} */\nWebAnimationsPlayer.prototype._onDestroyFns;\n/** @type {?} */\nWebAnimationsPlayer.prototype._player;\n/** @type {?} */\nWebAnimationsPlayer.prototype._duration;\n/** @type {?} */\nWebAnimationsPlayer.prototype._delay;\n/** @type {?} */\nWebAnimationsPlayer.prototype._initialized;\n/** @type {?} */\nWebAnimationsPlayer.prototype._finished;\n/** @type {?} */\nWebAnimationsPlayer.prototype._started;\n/** @type {?} */\nWebAnimationsPlayer.prototype._destroyed;\n/** @type {?} */\nWebAnimationsPlayer.prototype._finalKeyframe;\n/** @type {?} */\nWebAnimationsPlayer.prototype.time;\n/** @type {?} */\nWebAnimationsPlayer.prototype.parentPlayer;\n/** @type {?} */\nWebAnimationsPlayer.prototype.previousStyles;\n/** @type {?} */\nWebAnimationsPlayer.prototype.currentSnapshot;\n/** @type {?} */\nWebAnimationsPlayer.prototype.element;\n/** @type {?} */\nWebAnimationsPlayer.prototype.keyframes;\n/** @type {?} */\nWebAnimationsPlayer.prototype.options;\n/** @type {?} */\nWebAnimationsPlayer.prototype.previousPlayers;\n}\n\n/**\n * @param {?} element\n * @param {?} prop\n * @return {?}\n */\nfunction _computeStyle(element: any, prop: string): string {\n  return ( /** @type {?} */((<any>window.getComputedStyle(element))))[prop];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AnimationEvent, AnimationMetadataType, AnimationPlayer, AnimationStateMetadata, AnimationTriggerMetadata, ɵStyleData} from '@angular/animations';\n\nimport {AnimationEngine} from '../animation_engine';\nimport {AnimationTriggerAst} from '../dsl/animation_ast';\nimport {buildAnimationAst} from '../dsl/animation_ast_builder';\nimport {buildTrigger} from '../dsl/animation_trigger';\nimport {copyStyles, eraseStyles, normalizeStyles, setStyles} from '../util';\n\ninterface ListenerTuple {\n  eventPhase: string;\n  triggerName: string;\n  namespacedName: string;\n  callback: (event: any) => any;\n  doRemove?: boolean;\n}\n\ninterface ChangeTuple {\n  element: any;\n  namespacedName: string;\n  triggerName: string;\n  oldValue: string;\n  newValue: string;\n}\n\nconst /** @type {?} */ DEFAULT_STATE_VALUE = 'void';\nconst /** @type {?} */ DEFAULT_STATE_STYLES = '*';\nexport class NoopAnimationEngine extends AnimationEngine {\nprivate _listeners = new Map<any, ListenerTuple[]>();\nprivate _changes: ChangeTuple[] = [];\nprivate _flaggedRemovals = new Set<any>();\nprivate _onDoneFns: (() => any)[] = [];\nprivate _triggerStyles: {[triggerName: string]: {[stateName: string]: ɵStyleData}} =\n      Object.create(null);\npublic onRemovalComplete = (element: any, context: any) => {};\n/**\n * @param {?} componentId\n * @param {?} namespaceId\n * @param {?} hostElement\n * @param {?} name\n * @param {?} metadata\n * @return {?}\n */\nregisterTrigger(\n      componentId: string, namespaceId: string, hostElement: any, name: string,\n      metadata: AnimationTriggerMetadata): void {\n    name = name || metadata.name;\n    name = namespaceId + '#' + name;\n    if (this._triggerStyles[name]) {\n      return;\n    }\n\n    const /** @type {?} */ errors: any[] = [];\n    const /** @type {?} */ ast = /** @type {?} */(( buildAnimationAst(metadata, errors) as AnimationTriggerAst));\n    const /** @type {?} */ trigger = buildTrigger(name, ast);\n    this._triggerStyles[name] = trigger.states;\n  }\n/**\n * @param {?} namespaceId\n * @param {?} element\n * @param {?} parent\n * @param {?} insertBefore\n * @return {?}\n */\nonInsert(namespaceId: string, element: any, parent: any, insertBefore: boolean): void {}\n/**\n * @param {?} namespaceId\n * @param {?} element\n * @param {?} context\n * @return {?}\n */\nonRemove(namespaceId: string, element: any, context: any): void {\n    this.onRemovalComplete(element, context);\n    if (element['nodeType'] == 1) {\n      this._flaggedRemovals.add(element);\n    }\n  }\n/**\n * @param {?} namespaceId\n * @param {?} element\n * @param {?} property\n * @param {?} value\n * @return {?}\n */\nsetProperty(namespaceId: string, element: any, property: string, value: any): void {\n    if (property.charAt(0) == '@') return;  // TODO\n\n    const /** @type {?} */ namespacedName = namespaceId + '#' + property;\n    const /** @type {?} */ storageProp = makeStorageProp(namespacedName);\n    const /** @type {?} */ oldValue = element[storageProp] || DEFAULT_STATE_VALUE;\n    this._changes.push( /** @type {?} */((\n        <ChangeTuple>{element, oldValue, newValue: value, triggerName: property, namespacedName})));\n\n    const /** @type {?} */ triggerStateStyles = this._triggerStyles[namespacedName] || {};\n    const /** @type {?} */ fromStateStyles =\n        triggerStateStyles[oldValue] || triggerStateStyles[DEFAULT_STATE_STYLES];\n    if (fromStateStyles) {\n      eraseStyles(element, fromStateStyles);\n    }\n\n    element[storageProp] = value;\n    this._onDoneFns.push(() => {\n      const /** @type {?} */ toStateStyles = triggerStateStyles[value] || triggerStateStyles[DEFAULT_STATE_STYLES];\n      if (toStateStyles) {\n        setStyles(element, toStateStyles);\n      }\n    });\n  }\n/**\n * @param {?} namespaceId\n * @param {?} element\n * @param {?} eventName\n * @param {?} eventPhase\n * @param {?} callback\n * @return {?}\n */\nlisten(\n      namespaceId: string, element: any, eventName: string, eventPhase: string,\n      callback: (event: any) => any): () => any {\n    if (eventName.charAt(0) == '@') return;  // TODO\n\n    let /** @type {?} */ listeners = this._listeners.get(element);\n    if (!listeners) {\n      this._listeners.set(element, listeners = []);\n    }\n\n    const /** @type {?} */ tuple = /** @type {?} */(( <ListenerTuple>{\n      namespacedName: namespaceId + '#' + eventName,\n      triggerName: eventName, eventPhase, callback\n    }));\n    listeners.push(tuple);\n\n    return () => tuple.doRemove = true;\n  }\n/**\n * @return {?}\n */\nflush(): void {\n    const /** @type {?} */ onStartCallbacks: (() => any)[] = [];\n    const /** @type {?} */ onDoneCallbacks: (() => any)[] = [];\n/**\n * @param {?} listener\n * @param {?} data\n * @return {?}\n */\nfunction handleListener(listener: ListenerTuple, data: ChangeTuple) {\n      const /** @type {?} */ phase = listener.eventPhase;\n      const /** @type {?} */ event = makeAnimationEvent(\n          data.element, data.triggerName, data.oldValue, data.newValue, phase, 0);\n      if (phase == 'start') {\n        onStartCallbacks.push(() => listener.callback(event));\n      } else if (phase == 'done') {\n        onDoneCallbacks.push(() => listener.callback(event));\n      }\n    }\n\n    this._changes.forEach(change => {\n      const /** @type {?} */ element = change.element;\n      const /** @type {?} */ listeners = this._listeners.get(element);\n      if (listeners) {\n        listeners.forEach(listener => {\n          if (listener.namespacedName == change.namespacedName) {\n            handleListener(listener, change);\n          }\n        });\n      }\n    });\n\n    // upon removal ALL the animation triggers need to get fired\n    this._flaggedRemovals.forEach(element => {\n      const /** @type {?} */ listeners = this._listeners.get(element);\n      if (listeners) {\n        listeners.forEach(listener => {\n          const /** @type {?} */ triggerName = listener.triggerName;\n          const /** @type {?} */ namespacedName = listener.namespacedName;\n          const /** @type {?} */ storageProp = makeStorageProp(namespacedName);\n          handleListener(listener, /** @type {?} */(( <ChangeTuple>{\n            element,\n            triggerName,\n            namespacedName: listener.namespacedName,\n            oldValue: element[storageProp] || DEFAULT_STATE_VALUE,\n            newValue: DEFAULT_STATE_VALUE\n          })));\n        });\n      }\n    });\n\n    // remove all the listeners after everything is complete\n    Array.from(this._listeners.keys()).forEach(element => {\n      const /** @type {?} */ listenersToKeep = this._listeners.get(element).filter(l => !l.doRemove);\n      if (listenersToKeep.length) {\n        this._listeners.set(element, listenersToKeep);\n      } else {\n        this._listeners.delete(element);\n      }\n    });\n\n    onStartCallbacks.forEach(fn => fn());\n    onDoneCallbacks.forEach(fn => fn());\n    this._flaggedRemovals.clear();\n    this._changes = [];\n\n    this._onDoneFns.forEach(doneFn => doneFn());\n    this._onDoneFns = [];\n  }\n/**\n * @return {?}\n */\nget players(): AnimationPlayer[] { return []; }\n/**\n * @param {?} namespaceId\n * @return {?}\n */\ndestroy(namespaceId: string) {}\n}\n\nfunction NoopAnimationEngine_tsickle_Closure_declarations() {\n/** @type {?} */\nNoopAnimationEngine.prototype._listeners;\n/** @type {?} */\nNoopAnimationEngine.prototype._changes;\n/** @type {?} */\nNoopAnimationEngine.prototype._flaggedRemovals;\n/** @type {?} */\nNoopAnimationEngine.prototype._onDoneFns;\n/** @type {?} */\nNoopAnimationEngine.prototype._triggerStyles;\n/** @type {?} */\nNoopAnimationEngine.prototype.onRemovalComplete;\n}\n\n/**\n * @param {?} element\n * @param {?} triggerName\n * @param {?} fromState\n * @param {?} toState\n * @param {?} phaseName\n * @param {?} totalTime\n * @return {?}\n */\nfunction makeAnimationEvent(\n    element: any, triggerName: string, fromState: string, toState: string, phaseName: string,\n    totalTime: number): AnimationEvent {\n  return /** @type {?} */(( <AnimationEvent>{element, triggerName, fromState, toState, phaseName, totalTime}));\n}\n/**\n * @param {?} property\n * @return {?}\n */\nfunction makeStorageProp(property: string): string {\n  return '_@_' + property;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AnimationMetadata, AnimationPlayer, AnimationTriggerMetadata} from '@angular/animations';\n\nimport {AnimationEngine} from '../animation_engine';\nimport {AnimationTriggerAst} from '../dsl/animation_ast';\nimport {buildAnimationAst} from '../dsl/animation_ast_builder';\nimport {AnimationTrigger, buildTrigger} from '../dsl/animation_trigger';\nimport {AnimationStyleNormalizer} from '../dsl/style_normalization/animation_style_normalizer';\n\nimport {AnimationDriver} from './animation_driver';\nimport {TimelineAnimationEngine} from './timeline_animation_engine';\nimport {TransitionAnimationEngine} from './transition_animation_engine';\nexport class DomAnimationEngine implements AnimationEngine {\nprivate _transitionEngine: TransitionAnimationEngine;\nprivate _timelineEngine: TimelineAnimationEngine;\nprivate _triggerCache: {[key: string]: AnimationTrigger} = {};\npublic onRemovalComplete = (element: any, context: any) => {};\n/**\n * @param {?} driver\n * @param {?} normalizer\n */\nconstructor(driver: AnimationDriver, normalizer: AnimationStyleNormalizer) {\n    this._transitionEngine = new TransitionAnimationEngine(driver, normalizer);\n    this._timelineEngine = new TimelineAnimationEngine(driver, normalizer);\n\n    this._transitionEngine.onRemovalComplete =\n        (element: any, context: any) => { this.onRemovalComplete(element, context); }\n  }\n/**\n * @param {?} componentId\n * @param {?} namespaceId\n * @param {?} hostElement\n * @param {?} name\n * @param {?} metadata\n * @return {?}\n */\nregisterTrigger(\n      componentId: string, namespaceId: string, hostElement: any, name: string,\n      metadata: AnimationTriggerMetadata): void {\n    const /** @type {?} */ cacheKey = componentId + '-' + name;\n    let /** @type {?} */ trigger = this._triggerCache[cacheKey];\n    if (!trigger) {\n      const /** @type {?} */ errors: any[] = [];\n      const /** @type {?} */ ast = /** @type {?} */(( buildAnimationAst( /** @type {?} */((metadata as AnimationMetadata)), errors) as AnimationTriggerAst));\n      if (errors.length) {\n        throw new Error(\n            `The animation trigger \"${name}\" has failed to build due to the following errors:\\n - ${errors.join(\"\\n - \")}`);\n      }\n      trigger = buildTrigger(name, ast);\n      this._triggerCache[cacheKey] = trigger;\n    }\n\n    this._transitionEngine.register(namespaceId, hostElement, name, trigger);\n  }\n/**\n * @param {?} namespaceId\n * @param {?} context\n * @return {?}\n */\ndestroy(namespaceId: string, context: any) {\n    this._transitionEngine.destroy(namespaceId, context);\n  }\n/**\n * @param {?} namespaceId\n * @param {?} element\n * @param {?} parent\n * @param {?} insertBefore\n * @return {?}\n */\nonInsert(namespaceId: string, element: any, parent: any, insertBefore: boolean): void {\n    this._transitionEngine.insertNode(namespaceId, element, parent, insertBefore);\n  }\n/**\n * @param {?} namespaceId\n * @param {?} element\n * @param {?} context\n * @return {?}\n */\nonRemove(namespaceId: string, element: any, context: any): void {\n    this._transitionEngine.removeNode(namespaceId, element, context);\n  }\n/**\n * @param {?} namespaceId\n * @param {?} element\n * @param {?} property\n * @param {?} value\n * @return {?}\n */\nsetProperty(namespaceId: string, element: any, property: string, value: any): boolean {\n    // @@property\n    if (property.charAt(0) == '@') {\n      const [id, action] = parseCustomCommand(property);\n      const /** @type {?} */ args = /** @type {?} */(( value as any[]));\n      this._timelineEngine.command(id, element, action, args);\n      return false;\n    }\n    return this._transitionEngine.trigger(namespaceId, element, property, value);\n  }\n/**\n * @param {?} namespaceId\n * @param {?} element\n * @param {?} eventName\n * @param {?} eventPhase\n * @param {?} callback\n * @return {?}\n */\nlisten(\n      namespaceId: string, element: any, eventName: string, eventPhase: string,\n      callback: (event: any) => any): () => any {\n    // @@listen\n    if (eventName.charAt(0) == '@') {\n      const [id, action] = parseCustomCommand(eventName);\n      return this._timelineEngine.listen(id, element, action, callback);\n    }\n    return this._transitionEngine.listen(namespaceId, element, eventName, eventPhase, callback);\n  }\n/**\n * @return {?}\n */\nflush(): void { this._transitionEngine.flush(); }\n/**\n * @return {?}\n */\nget players(): AnimationPlayer[] {\n    return ( /** @type {?} */((this._transitionEngine.players as AnimationPlayer[])))\n        .concat( /** @type {?} */((this._timelineEngine.players as AnimationPlayer[])));\n  }\n}\n\nfunction DomAnimationEngine_tsickle_Closure_declarations() {\n/** @type {?} */\nDomAnimationEngine.prototype._transitionEngine;\n/** @type {?} */\nDomAnimationEngine.prototype._timelineEngine;\n/** @type {?} */\nDomAnimationEngine.prototype._triggerCache;\n/** @type {?} */\nDomAnimationEngine.prototype.onRemovalComplete;\n}\n\n/**\n * @param {?} command\n * @return {?}\n */\nfunction parseCustomCommand(command: string): [string, string] {\n  const /** @type {?} */ separatorPos = command.indexOf(':');\n  const /** @type {?} */ id = command.substring(1, separatorPos);\n  const /** @type {?} */ action = command.substr(separatorPos + 1);\n  return [id, action];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AUTO_STYLE, AnimationPlayer, NoopAnimationPlayer, PRE_STYLE, ɵStyleData} from '@angular/animations';\n\nimport {AnimationTimelineInstruction} from '../dsl/animation_timeline_instruction';\nimport {AnimationTransitionFactory} from '../dsl/animation_transition_factory';\nimport {AnimationTransitionInstruction} from '../dsl/animation_transition_instruction';\nimport {AnimationTrigger} from '../dsl/animation_trigger';\nimport {ElementInstructionMap} from '../dsl/element_instruction_map';\nimport {AnimationStyleNormalizer} from '../dsl/style_normalization/animation_style_normalizer';\nimport {ENTER_CLASSNAME, LEAVE_CLASSNAME, LEAVE_SELECTOR, NG_ANIMATING_CLASSNAME, NG_TRIGGER_CLASSNAME, NG_TRIGGER_SELECTOR, eraseStyles, iteratorToArray, setStyles} from '../util';\n\nimport {AnimationDriver} from './animation_driver';\nimport {getOrSetAsInMap, listenOnPlayer, makeAnimationEvent, normalizeKeyframes, optimizeGroupPlayer} from './shared';\n\nconst /** @type {?} */ EMPTY_PLAYER_ARRAY: AnimationPlayer[] = [];\n\ninterface TriggerListener {\n  name: string;\n  phase: string;\n  callback: (event: any) => any;\n}\n\nexport interface QueueInstruction {\n  element: any;\n  triggerName: string;\n  fromState: StateValue;\n  toState: StateValue;\n  transition: AnimationTransitionFactory;\n  player: TransitionAnimationPlayer;\n  isFallbackTransition: boolean;\n}\nexport class StateValue {\npublic value: string;\npublic data: {[key: string]: any};\n/**\n * @param {?} input\n */\nconstructor(input: any) {\n    const isObj = input && input.hasOwnProperty('value');\n    const value = isObj ? input['value'] : input;\n    this.value = normalizeTriggerValue(value);\n    this.data = isObj ? input : {value: value};\n  }\n/**\n * @param {?} values\n * @return {?}\n */\nabsorbValues(values: {[key: string]: any}) {\n    Object.keys(values).forEach(prop => {\n      if (this.data[prop] == null) {\n        this.data[prop] = values[prop];\n      }\n    });\n  }\n}\n\nfunction StateValue_tsickle_Closure_declarations() {\n/** @type {?} */\nStateValue.prototype.value;\n/** @type {?} */\nStateValue.prototype.data;\n}\n\n\nexport const /** @type {?} */ VOID_VALUE = 'void';\nexport const /** @type {?} */ DEFAULT_STATE_VALUE = new StateValue(VOID_VALUE);\nexport const /** @type {?} */ DELETED_STATE_VALUE = new StateValue('DELETED');\n\nconst /** @type {?} */ POTENTIAL_ENTER_CLASSNAME = ENTER_CLASSNAME + '-temp';\nconst /** @type {?} */ POTENTIAL_ENTER_SELECTOR = '.' + POTENTIAL_ENTER_CLASSNAME;\nexport class AnimationTransitionNamespace {\npublic players: TransitionAnimationPlayer[] = [];\nprivate _triggers: {[triggerName: string]: AnimationTrigger} = {};\nprivate _queue: QueueInstruction[] = [];\nprivate _elementListeners = new Map<any, TriggerListener[]>();\nprivate _hostClassName: string;\n/**\n * @param {?} id\n * @param {?} hostElement\n * @param {?} _engine\n */\nconstructor(\npublic id: string,\npublic hostElement: any,\nprivate _engine: TransitionAnimationEngine) {\n    this._hostClassName = 'ng-tns-' + id;\n  }\n/**\n * @param {?} element\n * @param {?} name\n * @param {?} phase\n * @param {?} callback\n * @return {?}\n */\nlisten(element: any, name: string, phase: string, callback: (event: any) => boolean): () => any {\n    if (!this._triggers.hasOwnProperty(name)) {\n      throw new Error(\n          `Unable to listen on the animation trigger event \"${phase}\" because the animation trigger \"${name}\" doesn\\'t exist!`);\n    }\n\n    if (phase == null || phase.length == 0) {\n      throw new Error(\n          `Unable to listen on the animation trigger \"${name}\" because the provided event is undefined!`);\n    }\n\n    if (!isTriggerEventValid(phase)) {\n      throw new Error(\n          `The provided animation trigger event \"${phase}\" for the animation trigger \"${name}\" is not supported!`);\n    }\n\n    const /** @type {?} */ listeners = getOrSetAsInMap(this._elementListeners, element, []);\n    const /** @type {?} */ data = {name, phase, callback};\n    listeners.push(data);\n\n    const /** @type {?} */ triggersWithStates = getOrSetAsInMap(this._engine.statesByElement, element, {});\n    if (!triggersWithStates.hasOwnProperty(name)) {\n      element.classList.add(NG_TRIGGER_CLASSNAME);\n      element.classList.add(NG_TRIGGER_CLASSNAME + '-' + name);\n      triggersWithStates[name] = null;\n    }\n\n    return () => {\n      // the event listener is removed AFTER the flush has occurred such\n      // that leave animations callbacks can fire (otherwise if the node\n      // is removed in between then the listeners would be deregistered)\n      this._engine.afterFlush(() => {\n        const /** @type {?} */ index = listeners.indexOf(data);\n        if (index >= 0) {\n          listeners.splice(index, 1);\n        }\n\n        if (!this._triggers[name]) {\n          delete triggersWithStates[name];\n        }\n      });\n    };\n  }\n/**\n * @param {?} name\n * @param {?} ast\n * @return {?}\n */\nregister(name: string, ast: AnimationTrigger): boolean {\n    if (this._triggers[name]) {\n      // throw\n      return false;\n    } else {\n      this._triggers[name] = ast;\n      return true;\n    }\n  }\n/**\n * @param {?} name\n * @return {?}\n */\nprivate _getTrigger(name: string) {\n    const /** @type {?} */ trigger = this._triggers[name];\n    if (!trigger) {\n      throw new Error(`The provided animation trigger \"${name}\" has not been registered!`);\n    }\n    return trigger;\n  }\n/**\n * @param {?} element\n * @param {?} triggerName\n * @param {?} value\n * @param {?=} defaultToFallback\n * @return {?}\n */\ntrigger(element: any, triggerName: string, value: any, defaultToFallback = true):\n      TransitionAnimationPlayer {\n    const /** @type {?} */ trigger = this._getTrigger(triggerName);\n    const /** @type {?} */ player = new TransitionAnimationPlayer(this.id, triggerName, element);\n    if (!document.body.contains(element)) {\n      return player;\n    }\n\n    let /** @type {?} */ triggersWithStates = this._engine.statesByElement.get(element);\n    if (!triggersWithStates) {\n      element.classList.add(NG_TRIGGER_CLASSNAME);\n      element.classList.add(NG_TRIGGER_CLASSNAME + '-' + triggerName);\n      this._engine.statesByElement.set(element, triggersWithStates = {});\n    }\n\n    let /** @type {?} */ fromState = triggersWithStates[triggerName];\n    const /** @type {?} */ toState = new StateValue(value);\n\n    const /** @type {?} */ isObj = value && value.hasOwnProperty('value');\n    if (!isObj && fromState) {\n      toState.absorbValues(fromState.data);\n    }\n\n    triggersWithStates[triggerName] = toState;\n\n    if (!fromState) {\n      fromState = DEFAULT_STATE_VALUE;\n    } else if (fromState === DELETED_STATE_VALUE) {\n      return player;\n    }\n\n    const /** @type {?} */ playersOnElement: TransitionAnimationPlayer[] =\n        getOrSetAsInMap(this._engine.playersByElement, element, []);\n    playersOnElement.forEach(player => {\n      // only remove the player if it is queued on the EXACT same trigger/namespace\n      // we only also deal with queued players here because if the animation has\n      // started then we want to keep the player alive until the flush happens\n      // (which is where the previousPlayers are passed into the new palyer)\n      if (player.namespaceId == this.id && player.triggerName == triggerName && player.queued) {\n        player.destroy();\n      }\n    });\n\n    let /** @type {?} */ transition = trigger.matchTransition(fromState.value, toState.value);\n    let /** @type {?} */ isFallbackTransition = false;\n    if (!transition) {\n      if (!defaultToFallback) return null;\n      transition = trigger.fallbackTransition;\n      isFallbackTransition = true;\n    }\n\n    this._engine.totalQueuedPlayers++;\n    this._queue.push(\n        {element, triggerName, transition, fromState, toState, player, isFallbackTransition});\n\n    if (!isFallbackTransition) {\n      element.classList.add(NG_ANIMATING_CLASSNAME);\n    }\n\n    player.onDone(() => {\n      element.classList.remove(NG_ANIMATING_CLASSNAME);\n\n      let /** @type {?} */ index = this.players.indexOf(player);\n      if (index >= 0) {\n        this.players.splice(index, 1);\n      }\n\n      const /** @type {?} */ players = this._engine.playersByElement.get(element);\n      if (players) {\n        let /** @type {?} */ index = players.indexOf(player);\n        if (index >= 0) {\n          players.splice(index, 1);\n        }\n      }\n    });\n\n    this.players.push(player);\n    playersOnElement.push(player);\n\n    return player;\n  }\n/**\n * @param {?} name\n * @return {?}\n */\nderegister(name: string) {\n    delete this._triggers[name];\n\n    this._engine.statesByElement.forEach((stateMap, element) => { delete stateMap[name]; });\n\n    this._elementListeners.forEach((listeners, element) => {\n      this._elementListeners.set(\n          element, listeners.filter(entry => { return entry.name != name; }));\n    });\n  }\n/**\n * @param {?} element\n * @return {?}\n */\nprivate _onElementDestroy(element: any) {\n    this._engine.statesByElement.delete(element);\n    this._elementListeners.delete(element);\n    const /** @type {?} */ elementPlayers = this._engine.playersByElement.get(element);\n    if (elementPlayers) {\n      elementPlayers.forEach(player => player.destroy());\n      this._engine.playersByElement.delete(element);\n    }\n  }\n/**\n * @param {?} rootElement\n * @param {?} context\n * @param {?=} animate\n * @return {?}\n */\nprivate _destroyInnerNodes(rootElement: any, context: any, animate: boolean = false) {\n    listToArray(rootElement.querySelectorAll(NG_TRIGGER_SELECTOR)).forEach(elm => {\n      if (animate && elm.classList.contains(this._hostClassName)) {\n        const /** @type {?} */ innerNs = this._engine.namespacesByHostElement.get(elm);\n\n        // special case for a host element with animations on the same element\n        if (innerNs) {\n          innerNs.removeNode(elm, context, true);\n        }\n\n        this.removeNode(elm, context, true);\n      } else {\n        this._onElementDestroy(elm);\n      }\n    });\n  }\n/**\n * @param {?} element\n * @param {?} context\n * @param {?=} doNotRecurse\n * @return {?}\n */\nremoveNode(element: any, context: any, doNotRecurse?: boolean): void {\n    const /** @type {?} */ engine = this._engine;\n\n    element.classList.add(LEAVE_CLASSNAME);\n    engine.afterFlush(() => element.classList.remove(LEAVE_CLASSNAME));\n\n    if (!doNotRecurse && element.childElementCount) {\n      this._destroyInnerNodes(element, context, true);\n    }\n\n    const /** @type {?} */ triggerStates = engine.statesByElement.get(element);\n    if (triggerStates) {\n      const /** @type {?} */ players: TransitionAnimationPlayer[] = [];\n      Object.keys(triggerStates).forEach(triggerName => {\n        // this check is here in the event that an element is removed\n        // twice (both on the host level and the component level)\n        if (this._triggers[triggerName]) {\n          const /** @type {?} */ player = this.trigger(element, triggerName, VOID_VALUE, false);\n          if (player) {\n            players.push(player);\n          }\n        }\n      });\n\n      if (players.length) {\n        optimizeGroupPlayer(players).onDone(() => {\n          engine.destroyInnerAnimations(element);\n          this._onElementDestroy(element);\n          engine.onRemovalComplete(element, context);\n        });\n\n        return;\n      }\n    }\n\n    // find the player that is animating and make sure that the\n    // removal is delayed until that player has completed\n    let /** @type {?} */ containsPotentialParentTransition = false;\n    if (engine.totalAnimations) {\n      const /** @type {?} */ currentPlayers =\n          engine.players.length ? engine.playersByQueriedElement.get(element) : [];\n\n      // when this `if statement` does not continue forward it means that\n      // a previous animation query has selected the current element and\n      // is animating it. In this situation want to continue fowards and\n      // allow the element to be queued up for animation later.\n      if (currentPlayers && currentPlayers.length) {\n        containsPotentialParentTransition = true;\n      } else {\n        let /** @type {?} */ parent = element;\n        while (parent = parent.parentNode) {\n          const /** @type {?} */ triggers = engine.statesByElement.get(parent);\n          if (triggers) {\n            containsPotentialParentTransition = true;\n            break;\n          }\n        }\n      }\n    }\n\n    // at this stage we know that the element will either get removed\n    // during flush or will be picked up by a parent query. Either way\n    // we need to fire the listeners for this element when it DOES get\n    // removed (once the query parent animation is done or after flush)\n    const /** @type {?} */ listeners = this._elementListeners.get(element);\n    if (listeners) {\n      const /** @type {?} */ visitedTriggers = new Set<string>();\n      listeners.forEach(listener => {\n        const /** @type {?} */ triggerName = listener.name;\n        if (visitedTriggers.has(triggerName)) return;\n        visitedTriggers.add(triggerName);\n\n        const /** @type {?} */ trigger = this._triggers[triggerName];\n        const /** @type {?} */ transition = trigger.fallbackTransition;\n        const /** @type {?} */ fromState = engine.statesByElement.get(element)[triggerName] || DEFAULT_STATE_VALUE;\n        const /** @type {?} */ toState = new StateValue(VOID_VALUE);\n        const /** @type {?} */ player = new TransitionAnimationPlayer(this.id, triggerName, element);\n\n        this._engine.totalQueuedPlayers++;\n        this._queue.push({\n          element,\n          triggerName,\n          transition,\n          fromState,\n          toState,\n          player,\n          isFallbackTransition: true\n        });\n      });\n    }\n\n    // whether or not a parent has an animation we need to delay the deferral of the leave\n    // operation until we have more information (which we do after flush() has been called)\n    if (containsPotentialParentTransition) {\n      engine.queuedRemovals.set(element, () => {\n        engine.destroyInnerAnimations(element);\n        this._onElementDestroy(element);\n        engine.onRemovalComplete(element, context);\n      });\n    } else {\n      // we do this after the flush has occurred such\n      // that the callbacks can be fired\n      engine.afterFlush(() => this._onElementDestroy(element));\n      engine.destroyInnerAnimations(element);\n      engine.onRemovalComplete(element, context);\n    }\n  }\n/**\n * @param {?} element\n * @param {?} parent\n * @return {?}\n */\ninsertNode(element: any, parent: any): void { element.classList.add(this._hostClassName); }\n/**\n * @return {?}\n */\ndrainQueuedTransitions(): QueueInstruction[] {\n    const /** @type {?} */ instructions: QueueInstruction[] = [];\n    this._queue.forEach(entry => {\n      const /** @type {?} */ player = entry.player;\n      if (player.destroyed) return;\n\n      const /** @type {?} */ element = entry.element;\n      const /** @type {?} */ listeners = this._elementListeners.get(element);\n      if (listeners) {\n        listeners.forEach((listener: TriggerListener) => {\n          if (listener.name == entry.triggerName) {\n            const /** @type {?} */ baseEvent = makeAnimationEvent(\n                element, entry.triggerName, entry.fromState.value, entry.toState.value);\n            listenOnPlayer(entry.player, listener.phase, baseEvent, listener.callback);\n          }\n        });\n      }\n\n      if (player.markedForDestroy) {\n        this._engine.afterFlush(() => {\n          // now we can destroy the element properly since the event listeners have\n          // been bound to the player\n          player.destroy();\n        });\n      } else {\n        instructions.push(entry);\n      }\n    });\n\n    this._queue = [];\n\n    return instructions.sort((a, b) => {\n      // if depCount == 0 them move to front\n      // otherwise if a.contains(b) then move back\n      const /** @type {?} */ d0 = a.transition.ast.depCount;\n      const /** @type {?} */ d1 = b.transition.ast.depCount;\n      if (d0 == 0 || d1 == 0) {\n        return d0 - d1;\n      }\n      return a.element.contains(b.element) ? 1 : -1;\n    });\n  }\n/**\n * @param {?} context\n * @return {?}\n */\ndestroy(context: any) {\n    this.players.forEach(p => p.destroy());\n    this._destroyInnerNodes(this.hostElement, context);\n  }\n/**\n * @param {?} element\n * @return {?}\n */\nelementContainsData(element: any): boolean {\n    let /** @type {?} */ containsData = false;\n    if (this._elementListeners.has(element)) containsData = true;\n    containsData =\n        (this._queue.find(entry => entry.element === element) ? true : false) || containsData;\n    return containsData;\n  }\n}\n\nfunction AnimationTransitionNamespace_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationTransitionNamespace.prototype.players;\n/** @type {?} */\nAnimationTransitionNamespace.prototype._triggers;\n/** @type {?} */\nAnimationTransitionNamespace.prototype._queue;\n/** @type {?} */\nAnimationTransitionNamespace.prototype._elementListeners;\n/** @type {?} */\nAnimationTransitionNamespace.prototype._hostClassName;\n/** @type {?} */\nAnimationTransitionNamespace.prototype.id;\n/** @type {?} */\nAnimationTransitionNamespace.prototype.hostElement;\n/** @type {?} */\nAnimationTransitionNamespace.prototype._engine;\n}\n\n\nexport interface QueuedTransition {\n  element: any;\n  instruction: AnimationTransitionInstruction;\n  player: TransitionAnimationPlayer;\n}\nexport class TransitionAnimationEngine {\npublic players: TransitionAnimationPlayer[] = [];\npublic queuedRemovals = new Map<any, () => any>();\npublic newlyInserted = new Set<any>();\npublic newHostElements = new Map<any, AnimationTransitionNamespace>();\npublic playersByElement = new Map<any, TransitionAnimationPlayer[]>();\npublic playersByQueriedElement = new Map<any, TransitionAnimationPlayer[]>();\npublic statesByElement = new Map<any, {[triggerName: string]: StateValue}>();\npublic totalAnimations = 0;\npublic totalQueuedPlayers = 0;\nprivate _namespaceLookup: {[id: string]: AnimationTransitionNamespace} = {};\nprivate _namespaceList: AnimationTransitionNamespace[] = [];\nprivate _flushFns: (() => any)[] = [];\nprivate _whenQuietFns: (() => any)[] = [];\npublic namespacesByHostElement = new Map<any, AnimationTransitionNamespace>();\npublic onRemovalComplete = (element: any, context: any) => {};\n/**\n * @param {?} _driver\n * @param {?} _normalizer\n */\nconstructor(private _driver: AnimationDriver,\nprivate _normalizer: AnimationStyleNormalizer) {}\n/**\n * @return {?}\n */\nget queuedPlayers(): TransitionAnimationPlayer[] {\n    const /** @type {?} */ players: TransitionAnimationPlayer[] = [];\n    this._namespaceList.forEach(ns => {\n      ns.players.forEach(player => {\n        if (player.queued) {\n          players.push(player);\n        }\n      });\n    });\n    return players;\n  }\n/**\n * @param {?} namespaceId\n * @param {?} hostElement\n * @return {?}\n */\ncreateNamespace(namespaceId: string, hostElement: any) {\n    const /** @type {?} */ ns = new AnimationTransitionNamespace(namespaceId, hostElement, this);\n    if (hostElement.parentNode) {\n      this._balanceNamespaceList(ns, hostElement);\n    } else {\n      // defer this later until flush during when the host element has\n      // been inserted so that we know exactly where to place it in\n      // the namespace list\n      this.newHostElements.set(hostElement, ns);\n    }\n    return this._namespaceLookup[namespaceId] = ns;\n  }\n/**\n * @param {?} ns\n * @param {?} hostElement\n * @return {?}\n */\nprivate _balanceNamespaceList(ns: AnimationTransitionNamespace, hostElement: any) {\n    const /** @type {?} */ limit = this._namespaceList.length - 1;\n    if (limit >= 0) {\n      let /** @type {?} */ found = false;\n      for (let /** @type {?} */ i = limit; i >= 0; i--) {\n        const /** @type {?} */ nextNamespace = this._namespaceList[i];\n        if (nextNamespace.hostElement.contains(hostElement)) {\n          this._namespaceList.splice(i + 1, 0, ns);\n          found = true;\n          break;\n        }\n      }\n      if (!found) {\n        this._namespaceList.splice(0, 0, ns);\n      }\n    } else {\n      this._namespaceList.push(ns);\n    }\n\n    this.namespacesByHostElement.set(hostElement, ns);\n    return ns;\n  }\n/**\n * @param {?} namespaceId\n * @param {?} hostElement\n * @param {?} name\n * @param {?} trigger\n * @return {?}\n */\nregister(namespaceId: string, hostElement: any, name: string, trigger: AnimationTrigger) {\n    let /** @type {?} */ ns = this._namespaceLookup[namespaceId];\n    if (!ns) {\n      ns = this.createNamespace(namespaceId, hostElement);\n    }\n    if (ns.register(name, trigger)) {\n      this.totalAnimations++;\n    }\n  }\n/**\n * @param {?} namespaceId\n * @param {?} context\n * @return {?}\n */\ndestroy(namespaceId: string, context: any) {\n    const /** @type {?} */ ns = this._fetchNamespace(namespaceId);\n\n    this.afterFlush(() => {\n      this.namespacesByHostElement.delete(ns.hostElement);\n      delete this._namespaceLookup[namespaceId];\n      const /** @type {?} */ index = this._namespaceList.indexOf(ns);\n      if (index >= 0) {\n        this._namespaceList.splice(index, 1);\n      }\n    });\n\n    this.afterFlushAnimationsDone(() => ns.destroy(context));\n  }\n/**\n * @param {?} id\n * @return {?}\n */\nprivate _fetchNamespace(id: string) {\n    const /** @type {?} */ ns = this._namespaceLookup[id];\n    if (!ns) {\n      // TODO throw\n    }\n    return ns;\n  }\n/**\n * @param {?} namespaceId\n * @param {?} element\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\ntrigger(namespaceId: string, element: any, name: string, value: any): boolean {\n    if (isElementNode(element)) {\n      this._fetchNamespace(namespaceId).trigger(element, name, value);\n      return true;\n    }\n    return false;\n  }\n/**\n * @param {?} namespaceId\n * @param {?} element\n * @param {?} parent\n * @param {?} insertBefore\n * @return {?}\n */\ninsertNode(namespaceId: string, element: any, parent: any, insertBefore: boolean): void {\n    if (!isElementNode(element)) return;\n\n    this._fetchNamespace(namespaceId).insertNode(element, parent);\n\n    // only *directives and host elements are inserted before\n    if (insertBefore) {\n      this.newlyInserted.add(element);\n    }\n  }\n/**\n * @param {?} namespaceId\n * @param {?} element\n * @param {?} context\n * @param {?=} doNotRecurse\n * @return {?}\n */\nremoveNode(namespaceId: string, element: any, context: any, doNotRecurse?: boolean): void {\n    if (!isElementNode(element)) {\n      this.onRemovalComplete(element, context);\n      return;\n    }\n\n    this._fetchNamespace(namespaceId).removeNode(element, context, doNotRecurse);\n  }\n/**\n * @param {?} namespaceId\n * @param {?} element\n * @param {?} name\n * @param {?} phase\n * @param {?} callback\n * @return {?}\n */\nlisten(\n      namespaceId: string, element: any, name: string, phase: string,\n      callback: (event: any) => boolean): () => any {\n    if (isElementNode(element)) {\n      return this._fetchNamespace(namespaceId).listen(element, name, phase, callback);\n    }\n    return () => {};\n  }\n/**\n * @param {?} entry\n * @param {?} subTimelines\n * @return {?}\n */\nprivate _buildInstruction(entry: QueueInstruction, subTimelines: ElementInstructionMap) {\n    return entry.transition.build(\n        entry.element, entry.fromState.value, entry.toState.value, entry.toState.data,\n        subTimelines);\n  }\n/**\n * @param {?} containerElement\n * @return {?}\n */\ndestroyInnerAnimations(containerElement: any) {\n    listToArray(containerElement.querySelectorAll(NG_TRIGGER_SELECTOR)).forEach(element => {\n      const /** @type {?} */ players = this.playersByElement.get(element);\n      if (players) {\n        players.forEach(player => {\n          // special case for when an element is set for destruction, but hasn't started.\n          // in this situation we want to delay the destruction until the flush occurs\n          // so that any event listeners attached to the player are triggered.\n          if (player.queued) {\n            player.markedForDestroy = true;\n          } else {\n            player.destroy();\n          }\n        });\n      }\n      const /** @type {?} */ stateMap = this.statesByElement.get(element);\n      if (stateMap) {\n        Object.keys(stateMap).forEach(triggerName => stateMap[triggerName] = DELETED_STATE_VALUE);\n      }\n    });\n  }\n/**\n * @return {?}\n */\nflush() {\n    let /** @type {?} */ players: AnimationPlayer[] = [];\n    if (this.newHostElements.size) {\n      this.newHostElements.forEach((ns, element) => { this._balanceNamespaceList(ns, element); });\n      this.newHostElements.clear();\n    }\n\n    if (this._namespaceList.length && (this.totalQueuedPlayers || this.queuedRemovals.size)) {\n      players = this._flushAnimations();\n    }\n\n    this.totalQueuedPlayers = 0;\n    this.queuedRemovals.clear();\n    this.newlyInserted.clear();\n    this._flushFns.forEach(fn => fn());\n    this._flushFns = [];\n\n    if (this._whenQuietFns.length) {\n      // we move these over to a variable so that\n      // if any new callbacks are registered in another\n      // flush they do not populate the existing set\n      const /** @type {?} */ quietFns = this._whenQuietFns;\n      this._whenQuietFns = [];\n\n      if (players.length) {\n        optimizeGroupPlayer(players).onDone(() => { quietFns.forEach(fn => fn()); });\n      } else {\n        quietFns.forEach(fn => fn());\n      }\n    }\n  }\n/**\n * @return {?}\n */\nprivate _populateEnterElements() {\n    const /** @type {?} */ allEnterNodes = iteratorToArray(this.newlyInserted.values());\n    allEnterNodes.forEach(element => element.classList.add(POTENTIAL_ENTER_CLASSNAME));\n    const /** @type {?} */ enterNodes = filterNodeClasses(document.body, POTENTIAL_ENTER_SELECTOR);\n    enterNodes.forEach(element => element.classList.add(ENTER_CLASSNAME));\n    allEnterNodes.forEach(element => element.classList.remove(POTENTIAL_ENTER_CLASSNAME));\n    return enterNodes;\n  }\n/**\n * @return {?}\n */\nprivate _flushAnimations(): TransitionAnimationPlayer[] {\n    const /** @type {?} */ subTimelines = new ElementInstructionMap();\n    const /** @type {?} */ skippedPlayers: TransitionAnimationPlayer[] = [];\n    const /** @type {?} */ skippedPlayersMap = new Map<any, AnimationPlayer[]>();\n    const /** @type {?} */ queuedInstructions: QueuedTransition[] = [];\n    const /** @type {?} */ queriedElements = new Map<any, TransitionAnimationPlayer[]>();\n    const /** @type {?} */ allPreStyleElements = new Map<any, Set<string>>();\n    const /** @type {?} */ allPostStyleElements = new Map<any, Set<string>>();\n\n    // this must occur before the instructions are built below such that\n    // the :enter queries match the elements\n    const /** @type {?} */ enterNodes: any[] = this._populateEnterElements();\n\n    for (let /** @type {?} */ i = this._namespaceList.length - 1; i >= 0; i--) {\n      const /** @type {?} */ ns = this._namespaceList[i];\n      ns.drainQueuedTransitions().forEach(entry => {\n        const /** @type {?} */ instruction = this._buildInstruction(entry, subTimelines);\n        const /** @type {?} */ player = entry.player;\n        const /** @type {?} */ element = entry.element;\n\n        // if a unmatched transition is queued to go then it SHOULD NOT render\n        // an animation and cancel the previously running animations.\n        if (entry.isFallbackTransition && !instruction.isRemovalTransition) {\n          skippedPlayers.push(player);\n          return;\n        }\n\n        // this means that if a parent animation uses this animation as a sub trigger\n        // then it will instruct the timeline builder to not add a player delay, but\n        // instead stretch the first keyframe gap up until the animation starts. The\n        // reason this is important is to prevent extra initialization styles from being\n        // required by the user in the animation.\n        instruction.timelines.forEach(tl => tl.stretchStartingKeyframe = true);\n\n        subTimelines.append(element, instruction.timelines);\n\n        const /** @type {?} */ tuple = {instruction, player, element};\n\n        queuedInstructions.push(tuple);\n\n        instruction.queriedElements.forEach(\n            element => getOrSetAsInMap(queriedElements, element, []).push(player));\n\n        instruction.preStyleProps.forEach((stringMap, element) => {\n          const /** @type {?} */ props = Object.keys(stringMap);\n          if (props.length) {\n            let /** @type {?} */ setVal = allPreStyleElements.get(element);\n            if (!setVal) {\n              allPreStyleElements.set(element, setVal = new Set<string>());\n            }\n            props.forEach(prop => setVal.add(prop));\n          }\n        });\n\n        instruction.postStyleProps.forEach((stringMap, element) => {\n          const /** @type {?} */ props = Object.keys(stringMap);\n          let /** @type {?} */ setVal = allPostStyleElements.get(element);\n          if (!setVal) {\n            allPostStyleElements.set(element, setVal = new Set<string>());\n          }\n          props.forEach(prop => setVal.add(prop));\n        });\n      });\n    }\n\n    const /** @type {?} */ allPreviousPlayersMap = new Map<any, TransitionAnimationPlayer[]>();\n    let /** @type {?} */ sortedParentElements: any[] = [];\n    queuedInstructions.forEach(entry => {\n      const /** @type {?} */ element = entry.element;\n      if (subTimelines.has(element)) {\n        sortedParentElements.unshift(element);\n        this._beforeAnimationBuild(\n            entry.player.namespaceId, entry.instruction, allPreviousPlayersMap);\n      }\n    });\n\n    allPreviousPlayersMap.forEach(players => { players.forEach(player => player.destroy()); });\n\n    const /** @type {?} */ leaveNodes: any[] = allPostStyleElements.size ?\n        listToArray(document.body.querySelectorAll(LEAVE_SELECTOR)) :\n        [];\n\n    // PRE STAGE: fill the ! styles\n    const /** @type {?} */ preStylesMap = allPreStyleElements.size ?\n        cloakAndComputeStyles(this._driver, enterNodes, allPreStyleElements, PRE_STYLE) :\n        new Map<any, ɵStyleData>();\n\n    // POST STAGE: fill the * styles\n    const /** @type {?} */ postStylesMap =\n        cloakAndComputeStyles(this._driver, leaveNodes, allPostStyleElements, AUTO_STYLE);\n\n    const /** @type {?} */ rootPlayers: TransitionAnimationPlayer[] = [];\n    const /** @type {?} */ subPlayers: TransitionAnimationPlayer[] = [];\n    queuedInstructions.forEach(entry => {\n      const {element, player, instruction} = entry;\n      // this means that it was never consumed by a parent animation which\n      // means that it is independent and therefore should be set for animation\n      if (subTimelines.has(element)) {\n        const /** @type {?} */ innerPlayer = this._buildAnimation(\n            player.namespaceId, instruction, allPreviousPlayersMap, skippedPlayersMap, preStylesMap,\n            postStylesMap);\n        player.setRealPlayer(innerPlayer);\n\n        let /** @type {?} */ parentHasPriority: any = null;\n        for (let /** @type {?} */ i = 0; i < sortedParentElements.length; i++) {\n          const /** @type {?} */ parent = sortedParentElements[i];\n          if (parent === element) break;\n          if (parent.contains(element)) {\n            parentHasPriority = parent;\n            break;\n          }\n        }\n\n        if (parentHasPriority) {\n          const /** @type {?} */ parentPlayers = this.playersByElement.get(parentHasPriority);\n          if (parentPlayers && parentPlayers.length) {\n            player.parentPlayer = optimizeGroupPlayer(parentPlayers);\n          }\n          skippedPlayers.push(player);\n        } else {\n          rootPlayers.push(player);\n        }\n      } else {\n        eraseStyles(element, instruction.fromStyles);\n        player.onDestroy(() => setStyles(element, instruction.toStyles));\n        subPlayers.push(player);\n      }\n    });\n\n    subPlayers.forEach(player => {\n      const /** @type {?} */ playersForElement = skippedPlayersMap.get(player.element);\n      if (playersForElement && playersForElement.length) {\n        const /** @type {?} */ innerPlayer = optimizeGroupPlayer(playersForElement);\n        player.setRealPlayer(innerPlayer);\n      }\n    });\n\n    rootPlayers.forEach(player => {\n      this.players.push(player);\n      player.onDone(() => {\n        player.destroy();\n\n        const /** @type {?} */ index = this.players.indexOf(player);\n        this.players.splice(index, 1);\n      });\n      player.play();\n    });\n\n    // the reason why we don't actually play the animation is\n    // because all that a skipped player is designed to do is to\n    // fire the start/done transition callback events\n    skippedPlayers.forEach(player => {\n      if (player.parentPlayer) {\n        player.parentPlayer.onDestroy(() => player.destroy());\n      } else {\n        player.destroy();\n      }\n    });\n\n    // run through all of the queued removals and see if they\n    // were picked up by a query. If not then perform the removal\n    // operation right away unless a parent animation is ongoing.\n    this.queuedRemovals.forEach((fn, element) => {\n      const /** @type {?} */ players = queriedElements.get(element);\n      if (players) {\n        optimizeGroupPlayer(players).onDone(fn);\n      } else {\n        let /** @type {?} */ elementPlayers: AnimationPlayer[] = null;\n\n        let /** @type {?} */ parent = element;\n        while (parent = parent.parentNode) {\n          const /** @type {?} */ playersForThisElement = this.playersByElement.get(parent);\n          if (playersForThisElement && playersForThisElement.length) {\n            elementPlayers = playersForThisElement;\n            break;\n          }\n        }\n\n        if (elementPlayers) {\n          optimizeGroupPlayer(elementPlayers).onDone(fn);\n        } else {\n          fn();\n        }\n      }\n    });\n\n    enterNodes.forEach(element => element.classList.remove(ENTER_CLASSNAME));\n\n    return rootPlayers;\n  }\n/**\n * @param {?} namespaceId\n * @param {?} element\n * @return {?}\n */\nelementContainsData(namespaceId: string, element: any) {\n    let /** @type {?} */ containsData = false;\n    if (this.queuedRemovals.has(element)) containsData = true;\n    if (this.newlyInserted.has(element)) containsData = true;\n    if (this.playersByElement.has(element)) containsData = true;\n    if (this.playersByQueriedElement.has(element)) containsData = true;\n    if (this.statesByElement.has(element)) containsData = true;\n    return this._fetchNamespace(namespaceId).elementContainsData(element) || containsData;\n  }\n/**\n * @param {?} callback\n * @return {?}\n */\nafterFlush(callback: () => any) { this._flushFns.push(callback); }\n/**\n * @param {?} callback\n * @return {?}\n */\nafterFlushAnimationsDone(callback: () => any) { this._whenQuietFns.push(callback); }\n/**\n * @param {?} element\n * @param {?} instruction\n * @param {?} isQueriedElement\n * @param {?=} namespaceId\n * @param {?=} triggerName\n * @return {?}\n */\nprivate _getPreviousPlayers(\n      element: string, instruction: AnimationTransitionInstruction, isQueriedElement: boolean,\n      namespaceId?: string, triggerName?: string): TransitionAnimationPlayer[] {\n    let /** @type {?} */ players: TransitionAnimationPlayer[] = [];\n    if (isQueriedElement) {\n      const /** @type {?} */ queriedElementPlayers = this.playersByQueriedElement.get(element);\n      if (queriedElementPlayers) {\n        players = queriedElementPlayers;\n      }\n    } else {\n      const /** @type {?} */ elementPlayers = this.playersByElement.get(element);\n      if (elementPlayers) {\n        const /** @type {?} */ isRemovalAnimation = instruction.toState == VOID_VALUE;\n        elementPlayers.forEach(player => {\n          if (player.queued) return;\n          if (!isRemovalAnimation && player.triggerName != instruction.triggerName) return;\n          players.push(player);\n        });\n      }\n    }\n    if (namespaceId || triggerName) {\n      players = players.filter(player => {\n        if (namespaceId && namespaceId != player.namespaceId) return false;\n        if (triggerName && triggerName != player.triggerName) return false;\n        return true;\n      })\n    }\n    return players;\n  }\n/**\n * @param {?} namespaceId\n * @param {?} instruction\n * @param {?} allPreviousPlayersMap\n * @return {?}\n */\nprivate _beforeAnimationBuild(\n      namespaceId: string, instruction: AnimationTransitionInstruction,\n      allPreviousPlayersMap: Map<any, TransitionAnimationPlayer[]>) {\n    // it's important to do this step before destroying the players\n    // so that the onDone callback below won't fire before this\n    eraseStyles(instruction.element, instruction.fromStyles);\n\n    const /** @type {?} */ triggerName = instruction.triggerName;\n    const /** @type {?} */ rootElement = instruction.element;\n\n    // when a removal animation occurs, ALL previous players are collected\n    // and destroyed (even if they are outside of the current namespace)\n    const /** @type {?} */ targetNameSpaceId: string = instruction.isRemovalTransition ? undefined : namespaceId;\n    const /** @type {?} */ targetTriggerName: string = instruction.isRemovalTransition ? undefined : triggerName;\n\n    instruction.timelines.map(timelineInstruction => {\n      const /** @type {?} */ element = timelineInstruction.element;\n      const /** @type {?} */ isQueriedElement = element !== rootElement;\n      const /** @type {?} */ players = getOrSetAsInMap(allPreviousPlayersMap, element, []);\n      const /** @type {?} */ previousPlayers = this._getPreviousPlayers(\n          element, instruction, isQueriedElement, targetNameSpaceId, targetTriggerName);\n      previousPlayers.forEach(player => {\n        const /** @type {?} */ realPlayer = /** @type {?} */(( player.getRealPlayer() as any));\n        if (realPlayer['beforeDestroy']) {\n          realPlayer['beforeDestroy']();\n        }\n        players.push(player);\n      });\n    });\n  }\n/**\n * @param {?} namespaceId\n * @param {?} instruction\n * @param {?} allPreviousPlayersMap\n * @param {?} skippedPlayersMap\n * @param {?} preStylesMap\n * @param {?} postStylesMap\n * @return {?}\n */\nprivate _buildAnimation(\n      namespaceId: string, instruction: AnimationTransitionInstruction,\n      allPreviousPlayersMap: Map<any, TransitionAnimationPlayer[]>,\n      skippedPlayersMap: Map<any, AnimationPlayer[]>, preStylesMap: Map<any, ɵStyleData>,\n      postStylesMap: Map<any, ɵStyleData>): AnimationPlayer {\n    const /** @type {?} */ triggerName = instruction.triggerName;\n    const /** @type {?} */ rootElement = instruction.element;\n\n    // we first run this so that the previous animation player\n    // data can be passed into the successive animation players\n    const /** @type {?} */ allQueriedPlayers: TransitionAnimationPlayer[] = [];\n    const /** @type {?} */ allConsumedElements = new Set<any>();\n    const /** @type {?} */ allNewPlayers = instruction.timelines.map(timelineInstruction => {\n      const /** @type {?} */ element = timelineInstruction.element;\n      const /** @type {?} */ isQueriedElement = element !== rootElement;\n      let /** @type {?} */ previousPlayers: AnimationPlayer[] = EMPTY_PLAYER_ARRAY;\n      if (!allConsumedElements.has(element)) {\n        allConsumedElements.add(element);\n        const /** @type {?} */ _previousPlayers = allPreviousPlayersMap.get(element);\n        if (_previousPlayers) {\n          previousPlayers = _previousPlayers.map(p => p.getRealPlayer());\n        }\n      }\n      const /** @type {?} */ preStyles = preStylesMap.get(element);\n      const /** @type {?} */ postStyles = postStylesMap.get(element);\n      const /** @type {?} */ keyframes = normalizeKeyframes(\n          this._driver, this._normalizer, element, timelineInstruction.keyframes, preStyles,\n          postStyles);\n      const /** @type {?} */ player = this._buildPlayer(timelineInstruction, keyframes, previousPlayers);\n\n      // this means that this particular player belongs to a sub trigger. It is\n      // important that we match this player up with the corresponding (@trigger.listener)\n      if (timelineInstruction.subTimeline && skippedPlayersMap) {\n        getOrSetAsInMap(skippedPlayersMap, element, []).push(player);\n      }\n\n      if (isQueriedElement) {\n        const /** @type {?} */ wrappedPlayer = new TransitionAnimationPlayer(namespaceId, triggerName, element);\n        wrappedPlayer.setRealPlayer(player);\n        allQueriedPlayers.push(wrappedPlayer);\n      }\n\n      return player;\n    });\n\n    allQueriedPlayers.forEach(player => {\n      getOrSetAsInMap(this.playersByQueriedElement, player.element, []).push(player);\n      player.onDone(\n          () => { deleteOrUnsetInMap(this.playersByQueriedElement, player.element, player); });\n    });\n\n    allConsumedElements.forEach(element => { element.classList.add(NG_ANIMATING_CLASSNAME); });\n\n    const /** @type {?} */ player = optimizeGroupPlayer(allNewPlayers);\n    player.onDone(() => {\n      allConsumedElements.forEach(element => { element.classList.remove(NG_ANIMATING_CLASSNAME); });\n      setStyles(rootElement, instruction.toStyles);\n    });\n    return player;\n  }\n/**\n * @param {?} instruction\n * @param {?} keyframes\n * @param {?} previousPlayers\n * @return {?}\n */\nprivate _buildPlayer(\n      instruction: AnimationTimelineInstruction, keyframes: ɵStyleData[],\n      previousPlayers: AnimationPlayer[]): AnimationPlayer {\n    if (keyframes.length > 0) {\n      return this._driver.animate(\n          instruction.element, keyframes, instruction.duration, instruction.delay,\n          instruction.easing, previousPlayers);\n    }\n\n    // special case for when an empty transition|definition is provided\n    // ... there is no point in rendering an empty animation\n    return new NoopAnimationPlayer();\n  }\n}\n\nfunction TransitionAnimationEngine_tsickle_Closure_declarations() {\n/** @type {?} */\nTransitionAnimationEngine.prototype.players;\n/** @type {?} */\nTransitionAnimationEngine.prototype.queuedRemovals;\n/** @type {?} */\nTransitionAnimationEngine.prototype.newlyInserted;\n/** @type {?} */\nTransitionAnimationEngine.prototype.newHostElements;\n/** @type {?} */\nTransitionAnimationEngine.prototype.playersByElement;\n/** @type {?} */\nTransitionAnimationEngine.prototype.playersByQueriedElement;\n/** @type {?} */\nTransitionAnimationEngine.prototype.statesByElement;\n/** @type {?} */\nTransitionAnimationEngine.prototype.totalAnimations;\n/** @type {?} */\nTransitionAnimationEngine.prototype.totalQueuedPlayers;\n/** @type {?} */\nTransitionAnimationEngine.prototype._namespaceLookup;\n/** @type {?} */\nTransitionAnimationEngine.prototype._namespaceList;\n/** @type {?} */\nTransitionAnimationEngine.prototype._flushFns;\n/** @type {?} */\nTransitionAnimationEngine.prototype._whenQuietFns;\n/** @type {?} */\nTransitionAnimationEngine.prototype.namespacesByHostElement;\n/** @type {?} */\nTransitionAnimationEngine.prototype.onRemovalComplete;\n/** @type {?} */\nTransitionAnimationEngine.prototype._driver;\n/** @type {?} */\nTransitionAnimationEngine.prototype._normalizer;\n}\n\nexport class TransitionAnimationPlayer implements AnimationPlayer {\nprivate _player: AnimationPlayer = new NoopAnimationPlayer();\nprivate _containsRealPlayer = false;\nprivate _queuedCallbacks: {[name: string]: (() => any)[]} = {};\nprivate _destroyed = false;\npublic parentPlayer: AnimationPlayer;\npublic markedForDestroy: boolean = false;\n/**\n * @param {?} namespaceId\n * @param {?} triggerName\n * @param {?} element\n */\nconstructor(public namespaceId: string,\npublic triggerName: string,\npublic element: any) {}\n/**\n * @return {?}\n */\nget queued() { return this._containsRealPlayer == false; }\n/**\n * @return {?}\n */\nget destroyed() { return this._destroyed; }\n/**\n * @param {?} player\n * @return {?}\n */\nsetRealPlayer(player: AnimationPlayer) {\n    if (this._containsRealPlayer) return;\n\n    this._player = player;\n    Object.keys(this._queuedCallbacks).forEach(phase => {\n      this._queuedCallbacks[phase].forEach(\n          callback => { listenOnPlayer(player, phase, null, callback); });\n    });\n    this._queuedCallbacks = {};\n    this._containsRealPlayer = true;\n  }\n/**\n * @return {?}\n */\ngetRealPlayer() { return this._player; }\n/**\n * @param {?} name\n * @param {?} callback\n * @return {?}\n */\nprivate _queueEvent(name: string, callback: (event: any) => any): void {\n    getOrSetAsInMap(this._queuedCallbacks, name, []).push(callback);\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nonDone(fn: () => void): void {\n    if (this.queued) {\n      this._queueEvent('done', fn);\n    }\n    this._player.onDone(fn);\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nonStart(fn: () => void): void {\n    if (this.queued) {\n      this._queueEvent('start', fn);\n    }\n    this._player.onStart(fn);\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nonDestroy(fn: () => void): void {\n    if (this.queued) {\n      this._queueEvent('destroy', fn);\n    }\n    this._player.onDestroy(fn);\n  }\n/**\n * @return {?}\n */\ninit(): void { this._player.init(); }\n/**\n * @return {?}\n */\nhasStarted(): boolean { return this.queued ? false : this._player.hasStarted(); }\n/**\n * @return {?}\n */\nplay(): void { !this.queued && this._player.play(); }\n/**\n * @return {?}\n */\npause(): void { !this.queued && this._player.pause(); }\n/**\n * @return {?}\n */\nrestart(): void { !this.queued && this._player.restart(); }\n/**\n * @return {?}\n */\nfinish(): void { this._player.finish(); }\n/**\n * @return {?}\n */\ndestroy(): void {\n    this._destroyed = true;\n    this._player.destroy();\n  }\n/**\n * @return {?}\n */\nreset(): void { !this.queued && this._player.reset(); }\n/**\n * @param {?} p\n * @return {?}\n */\nsetPosition(p: any): void {\n    if (!this.queued) {\n      this._player.setPosition(p);\n    }\n  }\n/**\n * @return {?}\n */\ngetPosition(): number { return this.queued ? 0 : this._player.getPosition(); }\n/**\n * @return {?}\n */\nget totalTime(): number { return this._player.totalTime; }\n}\n\nfunction TransitionAnimationPlayer_tsickle_Closure_declarations() {\n/** @type {?} */\nTransitionAnimationPlayer.prototype._player;\n/** @type {?} */\nTransitionAnimationPlayer.prototype._containsRealPlayer;\n/** @type {?} */\nTransitionAnimationPlayer.prototype._queuedCallbacks;\n/** @type {?} */\nTransitionAnimationPlayer.prototype._destroyed;\n/** @type {?} */\nTransitionAnimationPlayer.prototype.parentPlayer;\n/** @type {?} */\nTransitionAnimationPlayer.prototype.markedForDestroy;\n/** @type {?} */\nTransitionAnimationPlayer.prototype.namespaceId;\n/** @type {?} */\nTransitionAnimationPlayer.prototype.triggerName;\n/** @type {?} */\nTransitionAnimationPlayer.prototype.element;\n}\n\n/**\n * @param {?} map\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nfunction deleteOrUnsetInMap(map: Map<any, any[]>| {[key: string]: any}, key: any, value: any) {\n  let /** @type {?} */ currentValues: any[];\n  if (map instanceof Map) {\n    currentValues = map.get(key);\n    if (currentValues) {\n      if (currentValues.length) {\n        const /** @type {?} */ index = currentValues.indexOf(value);\n        currentValues.splice(index, 1);\n      }\n      if (currentValues.length == 0) {\n        map.delete(key);\n      }\n    }\n  } else {\n    currentValues = map[key];\n    if (currentValues) {\n      if (currentValues.length) {\n        const /** @type {?} */ index = currentValues.indexOf(value);\n        currentValues.splice(index, 1);\n      }\n      if (currentValues.length == 0) {\n        delete map[key];\n      }\n    }\n  }\n  return currentValues;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction normalizeTriggerValue(value: any): string {\n  switch (typeof value) {\n    case 'boolean':\n      return value ? '1' : '0';\n    default:\n      return value ? value.toString() : null;\n  }\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction isElementNode(node: any) {\n  return node && node['nodeType'] === 1;\n}\n/**\n * @param {?} eventName\n * @return {?}\n */\nfunction isTriggerEventValid(eventName: string): boolean {\n  return eventName == 'start' || eventName == 'done';\n}\n/**\n * @param {?} element\n * @param {?=} value\n * @return {?}\n */\nfunction cloakElement(element: any, value?: string) {\n  const /** @type {?} */ oldValue = element.style.display;\n  element.style.display = value != null ? value : 'none';\n  return oldValue;\n}\n/**\n * @param {?} rootElement\n * @param {?} selector\n * @return {?}\n */\nfunction filterNodeClasses(rootElement: any, selector: string): any[] {\n  const /** @type {?} */ rootElements: any[] = [];\n  let /** @type {?} */ cursor: any = rootElement;\n  let /** @type {?} */ nextCursor = null;\n  do {\n    nextCursor = cursor.querySelector(selector);\n    if (!nextCursor) {\n      cursor = cursor.parentElement;\n      if (!cursor) break;\n      nextCursor = cursor = cursor.nextElementSibling;\n    } else {\n      while (nextCursor && nextCursor.matches(selector)) {\n        rootElements.push(nextCursor);\n        nextCursor = nextCursor.nextElementSibling;\n        if (nextCursor) {\n          cursor = nextCursor;\n        } else {\n          cursor = cursor.parentElement;\n          if (!cursor) break;\n          nextCursor = cursor = cursor.nextElementSibling;\n        }\n      }\n    }\n  } while (nextCursor && nextCursor !== rootElement);\n\n  return rootElements;\n}\n/**\n * @param {?} driver\n * @param {?} elements\n * @param {?} elementPropsMap\n * @param {?} defaultStyle\n * @return {?}\n */\nfunction cloakAndComputeStyles(\n    driver: AnimationDriver, elements: any[], elementPropsMap: Map<any, Set<string>>,\n    defaultStyle: string): Map<any, ɵStyleData> {\n  const /** @type {?} */ cloakVals = elements.map(element => cloakElement(element));\n  const /** @type {?} */ valuesMap = new Map<any, ɵStyleData>();\n\n  elementPropsMap.forEach((props: Set<string>, element: any) => {\n    const /** @type {?} */ styles: ɵStyleData = {};\n    props.forEach(prop => { styles[prop] = driver.computeStyle(element, prop, defaultStyle); });\n    valuesMap.set(element, styles);\n  });\n\n  elements.forEach((element, i) => cloakElement(element, cloakVals[i]));\n  return valuesMap;\n}\n/**\n * @param {?} list\n * @return {?}\n */\nfunction listToArray(list: any): any[] {\n  const /** @type {?} */ arr: any[] = [];\n  arr.push(...( /** @type {?} */((list as any[]))));\n  return arr;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AUTO_STYLE, AnimationMetadata, AnimationPlayer, ɵStyleData} from '@angular/animations';\n\nimport {AnimationAst} from '../dsl/animation_ast';\nimport {buildAnimationAst} from '../dsl/animation_ast_builder';\nimport {buildAnimationTimelines} from '../dsl/animation_timeline_builder';\nimport {AnimationTimelineInstruction} from '../dsl/animation_timeline_instruction';\nimport {ElementInstructionMap} from '../dsl/element_instruction_map';\nimport {AnimationStyleNormalizer} from '../dsl/style_normalization/animation_style_normalizer';\n\nimport {AnimationDriver} from './animation_driver';\nimport {getOrSetAsInMap, listenOnPlayer, makeAnimationEvent, normalizeKeyframes, optimizeGroupPlayer} from './shared';\n\nconst /** @type {?} */ EMPTY_INSTRUCTION_MAP = new ElementInstructionMap();\nexport class TimelineAnimationEngine {\nprivate _animations: {[id: string]: AnimationAst} = {};\nprivate _playersById: {[id: string]: AnimationPlayer} = {};\npublic players: AnimationPlayer[] = [];\n/**\n * @param {?} _driver\n * @param {?} _normalizer\n */\nconstructor(private _driver: AnimationDriver,\nprivate _normalizer: AnimationStyleNormalizer) {}\n/**\n * @param {?} id\n * @param {?} metadata\n * @return {?}\n */\nregister(id: string, metadata: AnimationMetadata|AnimationMetadata[]) {\n    const /** @type {?} */ errors: any[] = [];\n    const /** @type {?} */ ast = buildAnimationAst(metadata, errors);\n    if (errors.length) {\n      throw new Error(\n          `Unable to build the animation due to the following errors: ${errors.join(\"\\n\")}`);\n    } else {\n      this._animations[id] = ast;\n    }\n  }\n/**\n * @param {?} i\n * @param {?} preStyles\n * @param {?} postStyles\n * @return {?}\n */\nprivate _buildPlayer(\n      i: AnimationTimelineInstruction, preStyles: ɵStyleData,\n      postStyles: ɵStyleData): AnimationPlayer {\n    const /** @type {?} */ element = i.element;\n    const /** @type {?} */ keyframes = normalizeKeyframes(\n        this._driver, this._normalizer, element, i.keyframes, preStyles, postStyles);\n    return this._driver.animate(element, keyframes, i.duration, i.delay, i.easing, []);\n  }\n/**\n * @param {?} id\n * @param {?} element\n * @param {?=} locals\n * @return {?}\n */\ncreate(id: string, element: any, locals: {[key: string]: string | number} = {}): AnimationPlayer {\n    const /** @type {?} */ errors: any[] = [];\n    const /** @type {?} */ ast = this._animations[id];\n    let /** @type {?} */ instructions: AnimationTimelineInstruction[];\n\n    const /** @type {?} */ autoStylesMap = new Map<any, ɵStyleData>();\n\n    if (ast) {\n      instructions =\n          buildAnimationTimelines(element, ast, {}, {}, locals, EMPTY_INSTRUCTION_MAP, errors);\n      instructions.forEach(inst => {\n        const /** @type {?} */ styles = getOrSetAsInMap(autoStylesMap, inst.element, {});\n        inst.postStyleProps.forEach(prop => styles[prop] = null);\n      });\n    } else {\n      errors.push('The requested animation doesn\\'t exist or has already been destroyed');\n    }\n\n    if (errors.length) {\n      throw new Error(\n          `Unable to create the animation due to the following errors: ${errors.join(\"\\n\")}`);\n    }\n\n    autoStylesMap.forEach((styles, element) => {\n      Object.keys(styles).forEach(\n          prop => { styles[prop] = this._driver.computeStyle(element, prop, AUTO_STYLE); });\n    });\n\n    const /** @type {?} */ players = instructions.map(i => {\n      const /** @type {?} */ styles = autoStylesMap.get(i.element);\n      return this._buildPlayer(i, {}, styles);\n    });\n    const /** @type {?} */ player = optimizeGroupPlayer(players);\n    this._playersById[id] = player;\n    player.onDestroy(() => this.destroy(id));\n\n    this.players.push(player);\n    return player;\n  }\n/**\n * @param {?} id\n * @return {?}\n */\ndestroy(id: string) {\n    const /** @type {?} */ player = this._getPlayer(id);\n    player.destroy();\n    delete this._playersById[id];\n    const /** @type {?} */ index = this.players.indexOf(player);\n    if (index >= 0) {\n      this.players.splice(index, 1);\n    }\n  }\n/**\n * @param {?} id\n * @return {?}\n */\nprivate _getPlayer(id: string): AnimationPlayer {\n    const /** @type {?} */ player = this._playersById[id];\n    if (!player) {\n      throw new Error(`Unable to find the timeline player referenced by ${id}`);\n    }\n    return player;\n  }\n/**\n * @param {?} id\n * @param {?} element\n * @param {?} eventName\n * @param {?} callback\n * @return {?}\n */\nlisten(id: string, element: string, eventName: string, callback: (event: any) => any):\n      () => void {\n    // triggerName, fromState, toState are all ignored for timeline animations\n    const /** @type {?} */ baseEvent = makeAnimationEvent(element, null, null, null);\n    listenOnPlayer(this._getPlayer(id), eventName, baseEvent, callback);\n    return () => {};\n  }\n/**\n * @param {?} id\n * @param {?} element\n * @param {?} command\n * @param {?} args\n * @return {?}\n */\ncommand(id: string, element: any, command: string, args: any[]): void {\n    if (command == 'register') {\n      this.register(id, /** @type {?} */(( args[0] as AnimationMetadata | AnimationMetadata[])));\n      return;\n    }\n\n    if (command == 'create') {\n      const /** @type {?} */ locals = /** @type {?} */(( (args[0] || {}) as{[key: string]: string | number}));\n      this.create(id, element, locals);\n      return;\n    }\n\n    const /** @type {?} */ player = this._getPlayer(id);\n    switch (command) {\n      case 'play':\n        player.play();\n        break;\n      case 'pause':\n        player.pause();\n        break;\n      case 'reset':\n        player.reset();\n        break;\n      case 'restart':\n        player.restart();\n        break;\n      case 'finish':\n        player.finish();\n        break;\n      case 'init':\n        player.init();\n        break;\n      case 'setPosition':\n        player.setPosition(parseFloat( /** @type {?} */((args[0] as string))));\n        break;\n      case 'destroy':\n        this.destroy(id);\n        break;\n    }\n  }\n}\n\nfunction TimelineAnimationEngine_tsickle_Closure_declarations() {\n/** @type {?} */\nTimelineAnimationEngine.prototype._animations;\n/** @type {?} */\nTimelineAnimationEngine.prototype._playersById;\n/** @type {?} */\nTimelineAnimationEngine.prototype.players;\n/** @type {?} */\nTimelineAnimationEngine.prototype._driver;\n/** @type {?} */\nTimelineAnimationEngine.prototype._normalizer;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵStyleData} from '@angular/animations';\n\nimport {copyStyles} from '../util';\n\nimport {AnimationSequenceAst, AnimationTransitionAst, AnimationTriggerAst} from './animation_ast';\nimport {AnimationTransitionFactory} from './animation_transition_factory';\n/**\n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} ast\n * @return {?}\n */\nexport function buildTrigger(name: string, ast: AnimationTriggerAst): AnimationTrigger {\n  return new AnimationTrigger(name, ast);\n}\n/**\n * \\@experimental Animation support is experimental.\n */\nexport class AnimationTrigger {\npublic transitionFactories: AnimationTransitionFactory[] = [];\npublic fallbackTransition: AnimationTransitionFactory;\npublic states: {[stateName: string]: ɵStyleData} = {};\n/**\n * @param {?} name\n * @param {?} ast\n */\nconstructor(public name: string,\npublic ast: AnimationTriggerAst) {\n    ast.states.forEach(ast => {\n      const obj = this.states[ast.name] = {};\n      ast.style.styles.forEach(styleTuple => {\n        if (typeof styleTuple == 'object') {\n          copyStyles(styleTuple as ɵStyleData, false, obj)\n        }\n      });\n    });\n\n    ast.transitions.forEach(ast => {\n      this.transitionFactories.push(new AnimationTransitionFactory(name, ast, this.states));\n    });\n\n    this.fallbackTransition = createFallbackTransition(name, this.states);\n  }\n/**\n * @return {?}\n */\nget containsQueries() { return this.ast.queryCount > 0; }\n/**\n * @param {?} currentState\n * @param {?} nextState\n * @return {?}\n */\nmatchTransition(currentState: any, nextState: any): AnimationTransitionFactory {\n    return this.transitionFactories.find(f => f.match(currentState, nextState));\n  }\n}\n\nfunction AnimationTrigger_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationTrigger.prototype.transitionFactories;\n/** @type {?} */\nAnimationTrigger.prototype.fallbackTransition;\n/** @type {?} */\nAnimationTrigger.prototype.states;\n/** @type {?} */\nAnimationTrigger.prototype.name;\n/** @type {?} */\nAnimationTrigger.prototype.ast;\n}\n\n/**\n * @param {?} triggerName\n * @param {?} states\n * @return {?}\n */\nfunction createFallbackTransition(\n    triggerName: string, states: {[stateName: string]: ɵStyleData}): AnimationTransitionFactory {\n  const /** @type {?} */ matchers = [(fromState: any, toState: any) => true];\n  const /** @type {?} */ animation = new AnimationSequenceAst([]);\n  const /** @type {?} */ transition = new AnimationTransitionAst(matchers, animation, {});\n  return new AnimationTransitionFactory(triggerName, transition, states);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵStyleData} from '@angular/animations';\n\nimport {getOrSetAsInMap} from '../render/shared';\nimport {iteratorToArray} from '../util';\n\nimport {AnimationTransitionAst} from './animation_ast';\nimport {buildAnimationTimelines} from './animation_timeline_builder';\nimport {TransitionMatcherFn} from './animation_transition_expr';\nimport {AnimationTransitionInstruction, createTransitionInstruction} from './animation_transition_instruction';\nimport {ElementInstructionMap} from './element_instruction_map';\nexport class AnimationTransitionFactory {\n/**\n * @param {?} _triggerName\n * @param {?} ast\n * @param {?} _stateStyles\n */\nconstructor(\nprivate _triggerName: string,\npublic ast: AnimationTransitionAst,\nprivate _stateStyles: {[stateName: string]: ɵStyleData}) {}\n/**\n * @param {?} currentState\n * @param {?} nextState\n * @return {?}\n */\nmatch(currentState: any, nextState: any): boolean {\n    return oneOrMoreTransitionsMatch(this.ast.matchers, currentState, nextState);\n  }\n/**\n * @param {?} element\n * @param {?} currentState\n * @param {?} nextState\n * @param {?=} locals\n * @param {?=} subInstructions\n * @return {?}\n */\nbuild(\n      element: any, currentState: any, nextState: any,\n      locals: {[varName: string]: string | number} = null,\n      subInstructions: ElementInstructionMap = null): AnimationTransitionInstruction {\n    let /** @type {?} */ animationLocals: {[varName: string]: string | number | boolean} = null;\n    if (this.ast.locals) {\n      animationLocals = /** @type {?} */(( (locals || {}) as{[varName: string]: string | number | boolean}));\n      Object.keys(this.ast.locals).forEach(prop => {\n        if (!animationLocals.hasOwnProperty(prop)) {\n          animationLocals[prop] = this.ast.locals[prop];\n        }\n      });\n    }\n\n    const /** @type {?} */ backupStateStyles = this._stateStyles['*'] || {};\n    const /** @type {?} */ currentStateStyles = this._stateStyles[currentState] || backupStateStyles;\n    const /** @type {?} */ nextStateStyles = this._stateStyles[nextState] || backupStateStyles;\n\n    const /** @type {?} */ errors: any[] = [];\n    const /** @type {?} */ timelines = buildAnimationTimelines(\n        element, this.ast.animation, currentStateStyles, nextStateStyles, animationLocals,\n        subInstructions, errors);\n\n    if (errors.length) {\n      const /** @type {?} */ errorMessage = `animation building failed:\\n${errors.join(\"\\n\")}`;\n      throw new Error(errorMessage);\n    }\n\n    const /** @type {?} */ preStyleMap = new Map<any, {[prop: string]: boolean}>();\n    const /** @type {?} */ postStyleMap = new Map<any, {[prop: string]: boolean}>();\n    const /** @type {?} */ queriedElements = new Set<any>();\n    timelines.forEach(tl => {\n      const /** @type {?} */ elm = tl.element;\n      const /** @type {?} */ preProps = getOrSetAsInMap(preStyleMap, elm, {});\n      tl.preStyleProps.forEach(prop => preProps[prop] = true);\n\n      const /** @type {?} */ postProps = getOrSetAsInMap(postStyleMap, elm, {});\n      tl.postStyleProps.forEach(prop => postProps[prop] = true);\n\n      if (elm !== element) {\n        queriedElements.add(elm);\n      }\n    });\n\n    const /** @type {?} */ queriedElementsList = iteratorToArray(queriedElements.values());\n    return createTransitionInstruction(\n        element, this._triggerName, currentState, nextState, nextState === 'void',\n        currentStateStyles, nextStateStyles, timelines, queriedElementsList, preStyleMap,\n        postStyleMap);\n  }\n}\n\nfunction AnimationTransitionFactory_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationTransitionFactory.prototype._triggerName;\n/** @type {?} */\nAnimationTransitionFactory.prototype.ast;\n/** @type {?} */\nAnimationTransitionFactory.prototype._stateStyles;\n}\n\n/**\n * @param {?} matchFns\n * @param {?} currentState\n * @param {?} nextState\n * @return {?}\n */\nfunction oneOrMoreTransitionsMatch(\n    matchFns: TransitionMatcherFn[], currentState: any, nextState: any): boolean {\n  return matchFns.some(fn => fn(currentState, nextState));\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵStyleData} from '@angular/animations';\nimport {AnimationEngineInstruction, AnimationTransitionInstructionType} from '../render/animation_engine_instruction';\nimport {AnimationTimelineInstruction} from './animation_timeline_instruction';\n\nexport interface AnimationTransitionInstruction extends AnimationEngineInstruction {\n  element: any;\n  triggerName: string;\n  isRemovalTransition: boolean;\n  fromState: string;\n  fromStyles: ɵStyleData;\n  toState: string;\n  toStyles: ɵStyleData;\n  timelines: AnimationTimelineInstruction[];\n  queriedElements: any[];\n  preStyleProps: Map<any, {[prop: string]: boolean}>;\n  postStyleProps: Map<any, {[prop: string]: boolean}>;\n}\n/**\n * @param {?} element\n * @param {?} triggerName\n * @param {?} fromState\n * @param {?} toState\n * @param {?} isRemovalTransition\n * @param {?} fromStyles\n * @param {?} toStyles\n * @param {?} timelines\n * @param {?} queriedElements\n * @param {?} preStyleProps\n * @param {?} postStyleProps\n * @return {?}\n */\nexport function createTransitionInstruction(\n    element: any, triggerName: string, fromState: string, toState: string,\n    isRemovalTransition: boolean, fromStyles: ɵStyleData, toStyles: ɵStyleData,\n    timelines: AnimationTimelineInstruction[], queriedElements: any[],\n    preStyleProps: Map<any, {[prop: string]: boolean}>,\n    postStyleProps: Map<any, {[prop: string]: boolean}>): AnimationTransitionInstruction {\n  return {\n    type: AnimationTransitionInstructionType.TransitionAnimation,\n    element,\n    triggerName,\n    isRemovalTransition,\n    fromState,\n    fromStyles,\n    toState,\n    toStyles,\n    timelines,\n    queriedElements,\n    preStyleProps,\n    postStyleProps\n  };\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AnimationStyleNormalizer} from './animation_style_normalizer';\nexport class WebAnimationsStyleNormalizer extends AnimationStyleNormalizer {\n/**\n * @param {?} propertyName\n * @param {?} errors\n * @return {?}\n */\nnormalizePropertyName(propertyName: string, errors: string[]): string {\n    return dashCaseToCamelCase(propertyName);\n  }\n/**\n * @param {?} userProvidedProperty\n * @param {?} normalizedProperty\n * @param {?} value\n * @param {?} errors\n * @return {?}\n */\nnormalizeStyleValue(\n      userProvidedProperty: string, normalizedProperty: string, value: string|number,\n      errors: string[]): string {\n    let /** @type {?} */ unit: string = '';\n    const /** @type {?} */ strVal = value.toString().trim();\n\n    if (DIMENSIONAL_PROP_MAP[normalizedProperty] && value !== 0 && value !== '0') {\n      if (typeof value === 'number') {\n        unit = 'px';\n      } else {\n        const /** @type {?} */ valAndSuffixMatch = value.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n        if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n          errors.push(`Please provide a CSS unit value for ${userProvidedProperty}:${value}`);\n        }\n      }\n    }\n    return strVal + unit;\n  }\n}\n\nconst /** @type {?} */ DIMENSIONAL_PROP_MAP = makeBooleanMap(\n    'width,height,minWidth,minHeight,maxWidth,maxHeight,left,top,bottom,right,fontSize,outlineWidth,outlineOffset,paddingTop,paddingLeft,paddingBottom,paddingRight,marginTop,marginLeft,marginBottom,marginRight,borderRadius,borderWidth,borderTopWidth,borderLeftWidth,borderRightWidth,borderBottomWidth,textIndent'\n        .split(','));\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction makeBooleanMap(keys: string[]): {[key: string]: boolean} {\n  const /** @type {?} */ map: {[key: string]: boolean} = {};\n  keys.forEach(key => map[key] = true);\n  return map;\n}\n\nconst /** @type {?} */ DASH_CASE_REGEXP = /-+([a-z0-9])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nexport function dashCaseToCamelCase(input: string): string {\n  return input.replace(DASH_CASE_REGEXP, (...m: any[]) => m[1].toUpperCase());\n}\n","\n/**\n * \\@experimental Animation support is experimental.\n * @abstract\n */\nexport abstract class AnimationStyleNormalizer {\n/**\n * @abstract\n * @param {?} propertyName\n * @param {?} errors\n * @return {?}\n */\nnormalizePropertyName(propertyName: string, errors: string[]) {}\n/**\n * @abstract\n * @param {?} userProvidedProperty\n * @param {?} normalizedProperty\n * @param {?} value\n * @param {?} errors\n * @return {?}\n */\nnormalizeStyleValue(\n      userProvidedProperty: string, normalizedProperty: string, value: string|number,\n      errors: string[]) {}\n}\n/**\n * \\@experimental Animation support is experimental.\n */\nexport class NoopAnimationStyleNormalizer {\n/**\n * @param {?} propertyName\n * @param {?} errors\n * @return {?}\n */\nnormalizePropertyName(propertyName: string, errors: string[]): string { return propertyName; }\n/**\n * @param {?} userProvidedProperty\n * @param {?} normalizedProperty\n * @param {?} value\n * @param {?} errors\n * @return {?}\n */\nnormalizeStyleValue(\n      userProvidedProperty: string, normalizedProperty: string, value: string|number,\n      errors: string[]): string {\n    return /** @type {?} */(( <any>value));\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AnimationMetadata, ɵStyleData} from '@angular/animations';\nimport {normalizeStyles} from '../util';\nimport {AnimationAst} from './animation_ast';\nimport {buildAnimationAst} from './animation_ast_builder';\nimport {buildAnimationTimelines} from './animation_timeline_builder';\nimport {AnimationTimelineInstruction} from './animation_timeline_instruction';\nimport {ElementInstructionMap} from './element_instruction_map';\nexport class Animation {\nprivate _animationAst: AnimationAst;\n/**\n * @param {?} input\n */\nconstructor(input: AnimationMetadata|AnimationMetadata[]) {\n    const errors: any[] = [];\n    const ast = buildAnimationAst(input, errors);\n    if (errors.length) {\n      const errorMessage = `animation validation failed:\\n${errors.join(\"\\n\")}`;\n      throw new Error(errorMessage);\n    }\n    this._animationAst = ast;\n  }\n/**\n * @param {?} element\n * @param {?} startingStyles\n * @param {?} destinationStyles\n * @param {?} locals\n * @param {?=} subInstructions\n * @return {?}\n */\nbuildTimelines(\n      element: any, startingStyles: ɵStyleData|ɵStyleData[],\n      destinationStyles: ɵStyleData|ɵStyleData[], locals: {[key: string]: any},\n      subInstructions: ElementInstructionMap = null): AnimationTimelineInstruction[] {\n    const /** @type {?} */ start = Array.isArray(startingStyles) ? normalizeStyles(startingStyles) : /** @type {?} */((\n                                                  <ɵStyleData>startingStyles));\n    const /** @type {?} */ dest = Array.isArray(destinationStyles) ? normalizeStyles(destinationStyles) : /** @type {?} */((\n                                                    <ɵStyleData>destinationStyles));\n    const /** @type {?} */ errors: any = [];\n    subInstructions = subInstructions || new ElementInstructionMap();\n    const /** @type {?} */ result = buildAnimationTimelines(\n        element, this._animationAst, start, dest, locals, subInstructions, errors);\n    if (errors.length) {\n      const /** @type {?} */ errorMessage = `animation building failed:\\n${errors.join(\"\\n\")}`;\n      throw new Error(errorMessage);\n    }\n    return result;\n  }\n}\n\nfunction Animation_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimation.prototype._animationAst;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AUTO_STYLE, AnimateTimings, PRE_STYLE, ɵStyleData} from '@angular/animations';\n\nimport {copyObj, copyStyles, interpolateStyleLocals, iteratorToArray, resolveTimingValue} from '../util';\n\nimport {AnimationAnimateAst, AnimationAnimateChildAst, AnimationAst, AnimationAstVisitor, AnimationGroupAst, AnimationKeyframesSequenceAst, AnimationQueryAst, AnimationReferenceAst, AnimationSequenceAst, AnimationStaggerAst, AnimationStateAst, AnimationStyleAst, AnimationTimingAst, AnimationTransitionAst, AnimationTriggerAst, AnimationWaitAst, DynamicAnimationTimingAst} from './animation_ast';\nimport {AnimationTimelineInstruction, createTimelineInstruction} from './animation_timeline_instruction';\nimport {ElementInstructionMap} from './element_instruction_map';\n/**\n * @param {?} rootElement\n * @param {?} ast\n * @param {?=} startingStyles\n * @param {?=} finalStyles\n * @param {?=} locals\n * @param {?=} subInstructions\n * @param {?=} errors\n * @return {?}\n */\nexport function buildAnimationTimelines(\n    rootElement: any, ast: AnimationAst, startingStyles: ɵStyleData = {},\n    finalStyles: ɵStyleData = {}, locals: {[varName: string]: string | number | boolean},\n    subInstructions: ElementInstructionMap, errors: any[]): AnimationTimelineInstruction[] {\n  return new AnimationTimelineBuilderVisitor().buildKeyframes(\n      rootElement, ast, startingStyles, finalStyles, locals, subInstructions, errors);\n}\n\nexport declare type StyleAtTime = {\n  time: number; value: string | number;\n};\n\nconst /** @type {?} */ DEFAULT_NOOP_PREVIOUS_NODE = /** @type {?} */(( <AnimationAst>{}));\nexport class AnimationTimelineContext {\n  parentContext: AnimationTimelineContext = null;\n  currentTimeline: TimelineBuilder;\n  currentAnimateTimings: AnimateTimings;\n  previousNode: AnimationAst = DEFAULT_NOOP_PREVIOUS_NODE;\n  subContextCount = 0;\n  locals: {[varName: string]: string | number | boolean} = null;\n  subInstructions: ElementInstructionMap;\n  currentQueryIndex: number = 0;\n  currentQueryTotal: number = 0;\n  currentStaggerTime: number = 0;\n/**\n * @param {?} element\n * @param {?} subInstructions\n * @param {?} errors\n * @param {?} timelines\n * @param {?=} initialTimeline\n */\nconstructor(\npublic element: any, subInstructions: ElementInstructionMap,\npublic errors: any[],\npublic timelines: TimelineBuilder[], initialTimeline: TimelineBuilder = null) {\n    this.currentTimeline = initialTimeline || new TimelineBuilder(element, 0);\n    timelines.push(this.currentTimeline);\n    this.subInstructions = subInstructions || new ElementInstructionMap();\n  }\n/**\n * @param {?=} element\n * @param {?=} newTime\n * @return {?}\n */\ncreateSubContext(element: any = null, newTime = 0): AnimationTimelineContext {\n    const /** @type {?} */ target = element || this.element;\n    const /** @type {?} */ context = new AnimationTimelineContext(\n        target, this.subInstructions, this.errors, this.timelines,\n        this.currentTimeline.fork(target, newTime));\n    context.previousNode = this.previousNode;\n    context.currentAnimateTimings = this.currentAnimateTimings;\n    context.locals = this.locals ? copyObj(this.locals) : null;\n    context.currentQueryIndex = this.currentQueryIndex;\n    context.currentQueryTotal = this.currentQueryTotal;\n    context.parentContext = this;\n    this.subContextCount++;\n    return context;\n  }\n/**\n * @param {?=} newTime\n * @return {?}\n */\ntransformIntoNewTimeline(newTime = 0) {\n    this.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n    this.currentTimeline = this.currentTimeline.fork(this.element, newTime);\n    this.timelines.push(this.currentTimeline);\n    return this.currentTimeline;\n  }\n/**\n * @param {?} instruction\n * @param {?} timings\n * @return {?}\n */\nappendInstructionToTimeline(instruction: AnimationTimelineInstruction, timings: AnimateTimings):\n      AnimateTimings {\n    const /** @type {?} */ updatedTimings: AnimateTimings = {\n      duration: timings ? timings.duration : instruction.duration,\n      delay: this.currentTimeline.currentTime + (timings ? timings.delay : 0) + instruction.delay,\n      easing: timings ? timings.easing : instruction.easing\n    };\n    const /** @type {?} */ builder = new SubTimelineBuilder(\n        instruction.element, instruction.keyframes, instruction.preStyleProps,\n        instruction.postStyleProps, updatedTimings, instruction.stretchStartingKeyframe);\n    this.timelines.push(builder);\n    return updatedTimings;\n  }\n/**\n * @param {?} time\n * @return {?}\n */\nincrementTime(time: number) {\n    this.currentTimeline.forwardTime(this.currentTimeline.duration + time);\n  }\n}\n\nfunction AnimationTimelineContext_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationTimelineContext.prototype.parentContext;\n/** @type {?} */\nAnimationTimelineContext.prototype.currentTimeline;\n/** @type {?} */\nAnimationTimelineContext.prototype.currentAnimateTimings;\n/** @type {?} */\nAnimationTimelineContext.prototype.previousNode;\n/** @type {?} */\nAnimationTimelineContext.prototype.subContextCount;\n/** @type {?} */\nAnimationTimelineContext.prototype.locals;\n/** @type {?} */\nAnimationTimelineContext.prototype.subInstructions;\n/** @type {?} */\nAnimationTimelineContext.prototype.currentQueryIndex;\n/** @type {?} */\nAnimationTimelineContext.prototype.currentQueryTotal;\n/** @type {?} */\nAnimationTimelineContext.prototype.currentStaggerTime;\n/** @type {?} */\nAnimationTimelineContext.prototype.element;\n/** @type {?} */\nAnimationTimelineContext.prototype.errors;\n/** @type {?} */\nAnimationTimelineContext.prototype.timelines;\n}\n\nexport class AnimationTimelineBuilderVisitor implements AnimationAstVisitor {\n/**\n * @param {?} rootElement\n * @param {?} ast\n * @param {?} startingStyles\n * @param {?} finalStyles\n * @param {?} locals\n * @param {?=} subInstructions\n * @param {?=} errors\n * @return {?}\n */\nbuildKeyframes(\n      rootElement: any, ast: AnimationAst, startingStyles: ɵStyleData, finalStyles: ɵStyleData,\n      locals: {[varName: string]: string | number | boolean},\n      subInstructions: ElementInstructionMap = null,\n      errors: any[]): AnimationTimelineInstruction[] {\n    const /** @type {?} */ context = new AnimationTimelineContext(rootElement, subInstructions, errors, []);\n    if (locals && Object.keys(locals).length == 0) {\n      locals = null;\n    }\n    context.locals = locals;\n    context.currentTimeline.setStyles([startingStyles], null, false, context.errors, locals);\n\n    ast.visit(this, context);\n\n    // this checks to see if an actual animation happened\n    const /** @type {?} */ timelines = context.timelines.filter(timeline => timeline.containsAnimation());\n    if (timelines.length && Object.keys(finalStyles).length) {\n      const /** @type {?} */ tl = timelines[timelines.length - 1];\n      if (!tl.allowOnlyTimelineStyles()) {\n        tl.setStyles([finalStyles], null, false, context.errors, locals);\n      }\n    }\n\n    return timelines.length ? timelines.map(timeline => timeline.buildKeyframes()) :\n                              [createTimelineInstruction(rootElement, [], [], [], 0, 0, '', false)];\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitTrigger(ast: AnimationTriggerAst, context: any): any {\n    // these values are not visited in this AST\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitState(ast: AnimationStateAst, context: any): any {\n    // these values are not visited in this AST\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitTransition(ast: AnimationTransitionAst, context: any): any {\n    // these values are not visited in this AST\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitAnimateChild(ast: AnimationAnimateChildAst, context: any): any {\n    const /** @type {?} */ innerContext = context.createSubContext();\n    innerContext.locals = ast.locals ? copyObj(ast.locals) : context.locals;\n    if (ast.animation) {\n      innerContext.transformIntoNewTimeline();\n      this.visitReference(ast.animation, innerContext);\n      context.transformIntoNewTimeline(innerContext.currentTimeline.currentTime);\n    } else {\n      const /** @type {?} */ elementInstructions = context.subInstructions.consume(context.element);\n      if (elementInstructions) {\n        this._visitSubInstructions(elementInstructions, ast.timings, context);\n      }\n    }\n    context.previousNode = ast;\n  }\n/**\n * @param {?} instructions\n * @param {?} timings\n * @param {?} context\n * @return {?}\n */\nprivate _visitSubInstructions(\n      instructions: AnimationTimelineInstruction[], timings: AnimateTimings,\n      context: AnimationTimelineContext) {\n    if (timings && timings.duration === 0) return;\n    const /** @type {?} */ rootElement = context.element;\n    const /** @type {?} */ startTime = context.currentTimeline.currentTime;\n    let /** @type {?} */ furthestTime = startTime;\n    instructions.forEach(instruction => {\n      const /** @type {?} */ instructionTimings = context.appendInstructionToTimeline(instruction, timings);\n      furthestTime = Math.max(furthestTime, instructionTimings.duration + instructionTimings.delay);\n    });\n\n    // create an animation for the element containing sub animations which contains\n    // keyframes from start to finish to cover the entire animation so the player\n    // for the container element will complete once everything below has finished\n    if (startTime != furthestTime) {\n      // there is no need to set a delay here since it is already known by the inner\n      // timeline start time (it is updated within the appendInstructionToTimeline code)\n      const /** @type {?} */ delay = 0;\n      const /** @type {?} */ parentTimings = {duration: furthestTime - startTime, delay, easing: ''};\n\n      const /** @type {?} */ keyframes = [{offset: 0}, {offset: 1}];\n      const /** @type {?} */ parentInstruction = createTimelineInstruction(\n          rootElement, keyframes, [], [], parentTimings.duration, delay, '', true);\n      context.appendInstructionToTimeline(parentInstruction, parentTimings);\n\n      context.transformIntoNewTimeline(furthestTime);\n    }\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitReference(ast: AnimationReferenceAst, context: AnimationTimelineContext) {\n    // we traverse over all of the DEFAULT local values defined\n    // in the `animation()` declaration. This way if the user has\n    // not provided them in the `animateChild()` call (which is called\n    // just before this then it will substitute them in\n    if (ast.locals) {\n      context.locals = context.locals || {};\n      Object.keys(ast.locals).forEach(varName => {\n        if (!context.locals.hasOwnProperty(varName)) {\n          context.locals[varName] = ast.locals[varName];\n        }\n      });\n    }\n\n    ast.animation.visit(this, context);\n    context.previousNode = ast;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitSequence(ast: AnimationSequenceAst, context: AnimationTimelineContext) {\n    const /** @type {?} */ subContextCount = context.subContextCount;\n    if (context.previousNode instanceof AnimationStyleAst) {\n      context.currentTimeline.forwardFrame();\n      context.currentTimeline.snapshotCurrentStyles();\n      context.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n    }\n\n    ast.steps.forEach(s => s.visit(this, context));\n\n    // this means that some animation function within the sequence\n    // ended up creating a sub timeline (which means the current\n    // timeline cannot overlap with the contents of the sequence)\n    if (context.subContextCount > subContextCount) {\n      context.transformIntoNewTimeline();\n    }\n\n    context.previousNode = ast;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitGroup(ast: AnimationGroupAst, context: AnimationTimelineContext) {\n    const /** @type {?} */ innerTimelines: TimelineBuilder[] = [];\n    let /** @type {?} */ furthestTime = context.currentTimeline.currentTime;\n    ast.steps.forEach(s => {\n      const /** @type {?} */ innerContext = context.createSubContext();\n      s.visit(this, innerContext);\n      furthestTime = Math.max(furthestTime, innerContext.currentTimeline.currentTime);\n      innerTimelines.push(innerContext.currentTimeline);\n    });\n\n    // this operation is run after the AST loop because otherwise\n    // if the parent timeline's collected styles were updated then\n    // it would pass in invalid data into the new-to-be forked items\n    innerTimelines.forEach(\n        timeline => context.currentTimeline.mergeTimelineCollectedStyles(timeline));\n    context.transformIntoNewTimeline(furthestTime);\n    context.previousNode = ast;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitTiming(ast: AnimationTimingAst, context: AnimationTimelineContext): AnimateTimings {\n    if (ast instanceof DynamicAnimationTimingAst) {\n      const /** @type {?} */ strValue = interpolateStyleLocals(ast.value, context.locals, context.errors);\n      return resolveTimingValue(strValue, context.errors);\n    } else {\n      return {duration: ast.duration, delay: ast.delay, easing: ast.easing};\n    }\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitAnimate(ast: AnimationAnimateAst, context: AnimationTimelineContext) {\n    const /** @type {?} */ timings = context.currentAnimateTimings = this.visitTiming(ast.timings, context);\n    if (timings.delay) {\n      context.incrementTime(timings.delay);\n      context.currentTimeline.snapshotCurrentStyles();\n    }\n\n    const /** @type {?} */ style = ast.style;\n    if (style instanceof AnimationKeyframesSequenceAst) {\n      this.visitKeyframeSequence(style, context);\n    } else {\n      context.incrementTime(timings.duration);\n      this.visitStyle( /** @type {?} */((style as AnimationStyleAst)), context);\n    }\n\n    context.currentAnimateTimings = null;\n    context.previousNode = ast;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitStyle(ast: AnimationStyleAst, context: AnimationTimelineContext) {\n    // this is a special case when a style() call is issued directly after\n    // a call to animate(). If the clock is not forwarded by one frame then\n    // the style() calls will be merged into the previous animate() call\n    // which is incorrect.\n    if (!context.currentAnimateTimings && context.previousNode instanceof AnimationAnimateAst) {\n      context.currentTimeline.forwardFrame();\n    }\n\n    const /** @type {?} */ easing =\n        (context.currentAnimateTimings && context.currentAnimateTimings.easing) || ast.easing;\n    this._applyStyles(ast.styles, easing, ast.isEmptyStep, context);\n    context.previousNode = ast;\n  }\n/**\n * @param {?} styles\n * @param {?} easing\n * @param {?} treatAsEmptyStep\n * @param {?} context\n * @return {?}\n */\nprivate _applyStyles(\n      styles: (ɵStyleData|string)[], easing: string, treatAsEmptyStep: boolean,\n      context: AnimationTimelineContext): void {\n    context.currentTimeline.setStyles(\n        styles, easing, treatAsEmptyStep, context.errors, context.locals);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitKeyframeSequence(ast: AnimationKeyframesSequenceAst, context: AnimationTimelineContext) {\n    const /** @type {?} */ startTime = context.currentTimeline.duration;\n    const /** @type {?} */ duration = context.currentAnimateTimings.duration;\n    const /** @type {?} */ innerContext = context.createSubContext();\n    const /** @type {?} */ innerTimeline = innerContext.currentTimeline;\n    innerTimeline.easing = context.currentAnimateTimings.easing;\n\n    ast.styles.forEach(step => {\n      innerTimeline.forwardTime(step.offset * duration);\n      this._applyStyles(step.styles, step.easing, false, innerContext);\n    });\n\n    // this will ensure that the parent timeline gets all the styles from\n    // the child even if the new timeline below is not used\n    context.currentTimeline.mergeTimelineCollectedStyles(innerTimeline);\n\n    // we do this because the window between this timeline and the sub timeline\n    // should ensure that the styles within are exactly the same as they were before\n    context.transformIntoNewTimeline(startTime + duration);\n    context.previousNode = ast;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitQuery(ast: AnimationQueryAst, context: AnimationTimelineContext) {\n    // in the event that the first step before this is a style step we need\n    // to ensure the styles are applied before the children are animated\n    const /** @type {?} */ startTime = context.currentTimeline.currentTime;\n\n    if (context.previousNode instanceof AnimationStyleAst ||\n        (startTime == 0 && context.currentTimeline.getCurrentStyleProperties().length)) {\n      context.currentTimeline.forwardFrame();\n      context.currentTimeline.snapshotCurrentStyles();\n      context.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n    }\n\n    let /** @type {?} */ furthestTime = startTime;\n    const /** @type {?} */ elms = invokeQuery(context.element, ast.selector, ast.multi, ast.includeSelf);\n\n    context.currentQueryTotal = elms.length;\n    let /** @type {?} */ sameElementTimeline: TimelineBuilder = null;\n    elms.forEach((element, i) => {\n\n      context.currentQueryIndex = i;\n      const /** @type {?} */ innerContext = context.createSubContext(element);\n\n      let /** @type {?} */ tl = innerContext.currentTimeline;\n      if (element === context.element) {\n        sameElementTimeline = tl;\n      }\n\n      const /** @type {?} */ startTime = tl.currentTime;\n\n      ast.animation.visit(this, innerContext);\n\n      tl = innerContext.currentTimeline;\n      let /** @type {?} */ endTime = tl.currentTime;\n\n      // this means that the query itself ONLY took on styling calls. When this\n      // happens we need to gaurantee that the styles are applied on screen.\n      if (innerContext.previousNode instanceof AnimationStyleAst && startTime == endTime) {\n        tl.forwardFrame();\n        tl.snapshotCurrentStyles();\n        endTime = tl.currentTime;\n        innerContext.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n      }\n\n      furthestTime = Math.max(furthestTime, endTime);\n    });\n\n    context.currentQueryIndex = 0;\n    context.currentQueryTotal = 0;\n    context.transformIntoNewTimeline(furthestTime);\n\n    if (sameElementTimeline) {\n      context.currentTimeline.mergeTimelineCollectedStyles(sameElementTimeline);\n      context.currentTimeline.snapshotCurrentStyles();\n    }\n\n    context.previousNode = ast;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitStagger(ast: AnimationStaggerAst, context: AnimationTimelineContext) {\n    const /** @type {?} */ parentContext = context.parentContext;\n    const /** @type {?} */ tl = context.currentTimeline;\n    const /** @type {?} */ timings = ast.timings;\n    const /** @type {?} */ duration = Math.abs(timings.duration);\n    const /** @type {?} */ maxTime = duration * (context.currentQueryTotal - 1);\n    let /** @type {?} */ delay = duration * context.currentQueryIndex;\n\n    let /** @type {?} */ staggerTransformer = timings.duration < 0 ? 'reverse' : timings.easing;\n    switch (staggerTransformer) {\n      case 'reverse':\n        delay = maxTime - delay;\n        break;\n      case 'full':\n        delay = parentContext.currentStaggerTime;\n        break;\n    }\n\n    if (delay) {\n      context.currentTimeline.delayNextStep(delay);\n    }\n\n    const /** @type {?} */ startingTime = context.currentTimeline.currentTime;\n    ast.animation.visit(this, context);\n    context.previousNode = ast;\n\n    // time = duration + delay\n    // the reason why this computation is so complex is because\n    // the inner timeline may either have a delay value or a stretched\n    // keyframe depending on if a subtimeline is not used or is used.\n    parentContext.currentStaggerTime =\n        (tl.currentTime - startingTime) + (tl.startTime - parentContext.currentTimeline.startTime);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitWait(ast: AnimationWaitAst, context: AnimationTimelineContext) {\n    if (ast.delay) {\n      if (context.previousNode instanceof AnimationStyleAst) {\n        context.currentTimeline.forwardFrame();\n        context.currentTimeline.snapshotCurrentStyles();\n        context.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n      }\n\n      context.currentTimeline.delayNextStep(ast.delay);\n      context.currentTimeline.snapshotCurrentStyles();\n    }\n    if (ast.animation) {\n      ast.animation.visit(this, context);\n    }\n    context.previousNode = ast;\n  }\n}\nexport class TimelineBuilder {\npublic duration: number = 0;\npublic easing: string = '';\nprivate _previousKeyframe: ɵStyleData = {};\nprivate _currentKeyframe: ɵStyleData;\nprivate _keyframes = new Map<number, ɵStyleData>();\nprivate _styleSummary: {[prop: string]: StyleAtTime} = {};\nprivate _localTimelineStyles: ɵStyleData;\nprivate _globalTimelineStyles: ɵStyleData;\nprivate _backFill: ɵStyleData = {};\nprivate _currentEmptyStepKeyframe: ɵStyleData = null;\n/**\n * @param {?} element\n * @param {?} startTime\n * @param {?=} _elementTimelineStylesLookup\n */\nconstructor(\npublic element: any,\npublic startTime: number,\nprivate _elementTimelineStylesLookup?: Map<any, ɵStyleData>) {\n    if (!this._elementTimelineStylesLookup) {\n      this._elementTimelineStylesLookup = new Map<any, ɵStyleData>();\n    }\n    this._localTimelineStyles = Object.create(this._backFill, {});\n    this._globalTimelineStyles = this._elementTimelineStylesLookup.get(element);\n    if (!this._globalTimelineStyles) {\n      this._globalTimelineStyles = this._localTimelineStyles;\n      this._elementTimelineStylesLookup.set(element, this._localTimelineStyles);\n    }\n    this._loadKeyframe();\n  }\n/**\n * @return {?}\n */\ncontainsAnimation(): boolean { return this._keyframes.size > 1; }\n/**\n * @return {?}\n */\ngetCurrentStyleProperties(): string[] { return Object.keys(this._currentKeyframe); }\n/**\n * @return {?}\n */\nget currentTime() { return this.startTime + this.duration; }\n/**\n * @param {?} delay\n * @return {?}\n */\ndelayNextStep(delay: number) {\n    if (this.duration == 0) {\n      this.startTime += delay;\n    } else {\n      this.forwardTime(this.currentTime + delay);\n    }\n  }\n/**\n * @param {?} duration\n * @return {?}\n */\nwarpTiming(duration: number) { this.duration = duration; }\n/**\n * @param {?} element\n * @param {?=} currentTime\n * @return {?}\n */\nfork(element: any, currentTime = 0): TimelineBuilder {\n    return new TimelineBuilder(\n        element, currentTime || this.currentTime, this._elementTimelineStylesLookup);\n  }\n/**\n * @return {?}\n */\nprivate _loadKeyframe() {\n    if (this._currentKeyframe) {\n      this._previousKeyframe = this._currentKeyframe;\n    }\n    this._currentKeyframe = this._keyframes.get(this.duration);\n    if (!this._currentKeyframe) {\n      this._currentKeyframe = Object.create(this._backFill, {});\n      this._keyframes.set(this.duration, this._currentKeyframe);\n    }\n  }\n/**\n * @return {?}\n */\nforwardFrame() {\n    this.duration++;\n    this._loadKeyframe();\n  }\n/**\n * @param {?} time\n * @return {?}\n */\nforwardTime(time: number) {\n    this.duration = time;\n    this._loadKeyframe();\n  }\n/**\n * @param {?} prop\n * @param {?} value\n * @return {?}\n */\nprivate _updateStyle(prop: string, value: string|number) {\n    if (prop != 'easing') {\n      this._localTimelineStyles[prop] = value;\n      this._globalTimelineStyles[prop] = value;\n      this._styleSummary[prop] = {time: this.currentTime, value};\n    }\n  }\n/**\n * @return {?}\n */\nallowOnlyTimelineStyles() { return this._currentEmptyStepKeyframe !== this._currentKeyframe; }\n/**\n * @param {?} input\n * @param {?} easing\n * @param {?} treatAsEmptyStep\n * @param {?} errors\n * @param {?=} locals\n * @return {?}\n */\nsetStyles(\n      input: (ɵStyleData|string)[], easing: string, treatAsEmptyStep: boolean, errors: any[],\n      locals: {[varName: string]: string | number | boolean} = null) {\n    if (easing) {\n      this._previousKeyframe['easing'] = easing;\n    }\n\n    if (treatAsEmptyStep) {\n      // special case for animate(duration):\n      // all missing styles are filled with a `*` value then\n      // if any destination styles are filled in later on the same\n      // keyframe then they will override the overridden styles\n      // We use `_globalTimelineStyles` here because there may be\n      // styles in previous keyframes that are not present in this timeline\n      Object.keys(this._globalTimelineStyles).forEach(prop => {\n        this._backFill[prop] = this._globalTimelineStyles[prop] || AUTO_STYLE;\n        this._currentKeyframe[prop] = AUTO_STYLE;\n      });\n      this._currentEmptyStepKeyframe = this._currentKeyframe;\n    } else {\n      const /** @type {?} */ styles = flattenStyles(input, this._globalTimelineStyles);\n      Object.keys(styles).forEach(prop => {\n        let /** @type {?} */ val = styles[prop];\n        if (locals) {\n          val = interpolateStyleLocals(val, locals, errors);\n        }\n\n        this._currentKeyframe[prop] = val;\n        if (!this._localTimelineStyles[prop]) {\n          this._backFill[prop] = this._globalTimelineStyles.hasOwnProperty(prop) ?\n              this._globalTimelineStyles[prop] :\n              AUTO_STYLE;\n        }\n        this._updateStyle(prop, val);\n      });\n\n      Object.keys(this._localTimelineStyles).forEach(prop => {\n        if (!this._currentKeyframe.hasOwnProperty(prop)) {\n          this._currentKeyframe[prop] = this._localTimelineStyles[prop];\n        }\n      });\n    }\n  }\n/**\n * @return {?}\n */\nsnapshotCurrentStyles() { copyStyles(this._localTimelineStyles, false, this._currentKeyframe); }\n/**\n * @return {?}\n */\ngetFinalKeyframe() { return this._keyframes.get(this.duration); }\n/**\n * @return {?}\n */\nget properties() {\n    const /** @type {?} */ properties: string[] = [];\n    for (let /** @type {?} */ prop in this._currentKeyframe) {\n      properties.push(prop);\n    }\n    return properties;\n  }\n/**\n * @param {?} timeline\n * @return {?}\n */\nmergeTimelineCollectedStyles(timeline: TimelineBuilder) {\n    Object.keys(timeline._styleSummary).forEach(prop => {\n      const /** @type {?} */ details0 = this._styleSummary[prop];\n      const /** @type {?} */ details1 = timeline._styleSummary[prop];\n      if (!details0 || details1.time > details0.time) {\n        this._updateStyle(prop, details1.value);\n      }\n    });\n  }\n/**\n * @return {?}\n */\nbuildKeyframes(): AnimationTimelineInstruction {\n    const /** @type {?} */ preStyleProps = new Set<string>();\n    const /** @type {?} */ postStyleProps = new Set<string>();\n    const /** @type {?} */ finalKeyframes: ɵStyleData[] = [];\n    this._keyframes.forEach((keyframe, time) => {\n      const /** @type {?} */ finalKeyframe = copyStyles(keyframe, true);\n      Object.keys(finalKeyframe).forEach(prop => {\n        const /** @type {?} */ value = finalKeyframe[prop];\n        if (value == PRE_STYLE) {\n          preStyleProps.add(prop);\n        } else if (value == AUTO_STYLE) {\n          postStyleProps.add(prop);\n        }\n      });\n      finalKeyframe['offset'] = time / this.duration;\n      finalKeyframes.push(finalKeyframe);\n    });\n\n    const /** @type {?} */ preProps: string[] = preStyleProps.size ? iteratorToArray(preStyleProps.values()) : [];\n    const /** @type {?} */ postProps: string[] = postStyleProps.size ? iteratorToArray(postStyleProps.values()) : [];\n\n    return createTimelineInstruction(\n        this.element, finalKeyframes, preProps, postProps, this.duration, this.startTime,\n        this.easing, false);\n  }\n}\n\nfunction TimelineBuilder_tsickle_Closure_declarations() {\n/** @type {?} */\nTimelineBuilder.prototype.duration;\n/** @type {?} */\nTimelineBuilder.prototype.easing;\n/** @type {?} */\nTimelineBuilder.prototype._previousKeyframe;\n/** @type {?} */\nTimelineBuilder.prototype._currentKeyframe;\n/** @type {?} */\nTimelineBuilder.prototype._keyframes;\n/** @type {?} */\nTimelineBuilder.prototype._styleSummary;\n/** @type {?} */\nTimelineBuilder.prototype._localTimelineStyles;\n/** @type {?} */\nTimelineBuilder.prototype._globalTimelineStyles;\n/** @type {?} */\nTimelineBuilder.prototype._backFill;\n/** @type {?} */\nTimelineBuilder.prototype._currentEmptyStepKeyframe;\n/** @type {?} */\nTimelineBuilder.prototype.element;\n/** @type {?} */\nTimelineBuilder.prototype.startTime;\n/** @type {?} */\nTimelineBuilder.prototype._elementTimelineStylesLookup;\n}\n\nclass SubTimelineBuilder extends TimelineBuilder {\npublic timings: AnimateTimings;\n/**\n * @param {?} element\n * @param {?} keyframes\n * @param {?} preStyleProps\n * @param {?} postStyleProps\n * @param {?} timings\n * @param {?=} _stretchStartingKeyframe\n */\nconstructor(\npublic element: any,\npublic keyframes: ɵStyleData[],\npublic preStyleProps: string[],\npublic postStyleProps: string[], timings: AnimateTimings,\nprivate _stretchStartingKeyframe: boolean = false) {\n    super(element, timings.delay);\n    this.timings = {duration: timings.duration, delay: timings.delay, easing: timings.easing};\n  }\n/**\n * @return {?}\n */\ncontainsAnimation(): boolean { return this.keyframes.length > 1; }\n/**\n * @return {?}\n */\nbuildKeyframes(): AnimationTimelineInstruction {\n    let /** @type {?} */ keyframes = this.keyframes;\n    let {delay, duration, easing} = this.timings;\n    if (this._stretchStartingKeyframe && delay) {\n      const /** @type {?} */ newKeyframes: ɵStyleData[] = [];\n      const /** @type {?} */ totalTime = duration + delay;\n      const /** @type {?} */ startingGap = delay / totalTime;\n\n      // the original starting keyframe now starts once the delay is done\n      const /** @type {?} */ newFirstKeyframe = copyStyles(keyframes[0], false);\n      newFirstKeyframe['offset'] = 0;\n      newKeyframes.push(newFirstKeyframe);\n\n      const /** @type {?} */ oldFirstKeyframe = copyStyles(keyframes[0], false);\n      oldFirstKeyframe['offset'] = roundOffset(startingGap);\n      newKeyframes.push(oldFirstKeyframe);\n\n      /*\n        When the keyframe is stretched then it means that the delay before the animation\n        starts is gone. Instead the first keyframe is placed at the start of the animation\n        and it is then copied to where it starts when the original delay is over. This basically\n        means nothing animates during that delay, but the styles are still renderered. For this\n        to work the original offset values that exist in the original keyframes must be \"warped\"\n        so that they can take the new keyframe + delay into account.\n\n        delay=1000, duration=1000, keyframes = 0 .5 1\n\n        turns into\n\n        delay=0, duration=2000, keyframes = 0 .33 .66 1\n       */\n\n      // offsets between 1 ... n -1 are all warped by the keyframe stretch\n      const /** @type {?} */ limit = keyframes.length - 1;\n      for (let /** @type {?} */ i = 1; i <= limit; i++) {\n        let /** @type {?} */ kf = copyStyles(keyframes[i], false);\n        const /** @type {?} */ oldOffset = /** @type {?} */(( kf['offset'] as number));\n        const /** @type {?} */ timeAtKeyframe = delay + oldOffset * duration;\n        kf['offset'] = roundOffset(timeAtKeyframe / totalTime);\n        newKeyframes.push(kf);\n      }\n\n      // the new starting keyframe should be added at the start\n      duration = totalTime;\n      delay = 0;\n      easing = '';\n\n      keyframes = newKeyframes;\n    }\n\n    return createTimelineInstruction(\n        this.element, keyframes, this.preStyleProps, this.postStyleProps, duration, delay, easing,\n        true);\n  }\n}\n\nfunction SubTimelineBuilder_tsickle_Closure_declarations() {\n/** @type {?} */\nSubTimelineBuilder.prototype.timings;\n/** @type {?} */\nSubTimelineBuilder.prototype.element;\n/** @type {?} */\nSubTimelineBuilder.prototype.keyframes;\n/** @type {?} */\nSubTimelineBuilder.prototype.preStyleProps;\n/** @type {?} */\nSubTimelineBuilder.prototype.postStyleProps;\n/** @type {?} */\nSubTimelineBuilder.prototype._stretchStartingKeyframe;\n}\n\n/**\n * @param {?} rootElement\n * @param {?} selector\n * @param {?} multi\n * @param {?} includeSelf\n * @return {?}\n */\nfunction invokeQuery(\n    rootElement: any, selector: string, multi: boolean, includeSelf: boolean): any[] {\n  let /** @type {?} */ results: any[] = [];\n  if (includeSelf) {\n    results.push(rootElement);\n  }\n  if (multi) {\n    results.push(...rootElement.querySelectorAll(selector));\n  } else if (results.length == 0) {\n    const /** @type {?} */ elm = rootElement.querySelector(selector);\n    if (elm) {\n      results.push(elm);\n    }\n  }\n  return results;\n}\n/**\n * @param {?} offset\n * @param {?=} decimalPoints\n * @return {?}\n */\nfunction roundOffset(offset: number, decimalPoints = 3): number {\n  const /** @type {?} */ mult = Math.pow(10, decimalPoints - 1);\n  return Math.round(offset * mult) / mult;\n}\n/**\n * @param {?} input\n * @param {?} allStyles\n * @return {?}\n */\nfunction flattenStyles(input: (ɵStyleData | string)[], allStyles: ɵStyleData) {\n  const /** @type {?} */ styles: ɵStyleData = {};\n  let /** @type {?} */ allProperties: string[];\n  input.forEach(token => {\n    if (token === '*') {\n      allProperties = allProperties || Object.keys(allStyles);\n      allProperties.forEach(prop => { styles[prop] = AUTO_STYLE; });\n    } else {\n      copyStyles( /** @type {?} */((token as ɵStyleData)), false, styles);\n    }\n  });\n  return styles;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AnimationTimelineInstruction} from './animation_timeline_instruction';\nexport class ElementInstructionMap {\nprivate _map = new Map<any, AnimationTimelineInstruction[]>();\n/**\n * @param {?} element\n * @return {?}\n */\nconsume(element: any): AnimationTimelineInstruction[] {\n    let /** @type {?} */ instructions = this._map.get(element);\n    if (instructions) {\n      this._map.delete(element);\n    } else {\n      instructions = [];\n    }\n    return instructions;\n  }\n/**\n * @param {?} element\n * @param {?} instructions\n * @return {?}\n */\nappend(element: any, instructions: AnimationTimelineInstruction[]) {\n    let /** @type {?} */ existingInstructions = this._map.get(element);\n    if (!existingInstructions) {\n      this._map.set(element, existingInstructions = []);\n    }\n    existingInstructions.push(...instructions);\n  }\n/**\n * @param {?} element\n * @return {?}\n */\nhas(element: any): boolean { return this._map.has(element); }\n/**\n * @return {?}\n */\nclear() { this._map.clear(); }\n}\n\nfunction ElementInstructionMap_tsickle_Closure_declarations() {\n/** @type {?} */\nElementInstructionMap.prototype._map;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵStyleData} from '@angular/animations';\nimport {AnimationEngineInstruction, AnimationTransitionInstructionType} from '../render/animation_engine_instruction';\n\nexport interface AnimationTimelineInstruction extends AnimationEngineInstruction {\n  element: any;\n  keyframes: ɵStyleData[];\n  preStyleProps: string[];\n  postStyleProps: string[];\n  duration: number;\n  delay: number;\n  totalTime: number;\n  easing: string;\n  stretchStartingKeyframe?: boolean;\n  subTimeline: boolean;\n}\n/**\n * @param {?} element\n * @param {?} keyframes\n * @param {?} preStyleProps\n * @param {?} postStyleProps\n * @param {?} duration\n * @param {?} delay\n * @param {?} easing\n * @param {?=} subTimeline\n * @return {?}\n */\nexport function createTimelineInstruction(\n    element: any, keyframes: ɵStyleData[], preStyleProps: string[], postStyleProps: string[],\n    duration: number, delay: number, easing: string,\n    subTimeline: boolean = false): AnimationTimelineInstruction {\n  return {\n    type: AnimationTransitionInstructionType.TimelineAnimation,\n    element,\n    keyframes,\n    preStyleProps,\n    postStyleProps,\n    duration,\n    delay,\n    totalTime: duration + delay, easing, subTimeline\n  };\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AUTO_STYLE, AnimateTimings, AnimationAnimateChildMetadata, AnimationAnimateMetadata, AnimationGroupMetadata, AnimationKeyframesSequenceMetadata, AnimationMetadata, AnimationMetadataType, AnimationQueryMetadata, AnimationReferenceMetadata, AnimationSequenceMetadata, AnimationStaggerMetadata, AnimationStateMetadata, AnimationStyleMetadata, AnimationTransitionMetadata, AnimationTriggerMetadata, AnimationWaitMetadata, style, ɵStyleData} from '@angular/animations';\n\nimport {getOrSetAsInMap} from '../render/shared';\nimport {ENTER_SELECTOR, LEAVE_SELECTOR, NG_ANIMATING_SELECTOR, NG_TRIGGER_SELECTOR, copyObj, copyStyles, normalizeAnimationEntry, resolveTimingValue, validateStyleLocals} from '../util';\n\nimport {AnimationAnimateAst, AnimationAnimateChildAst, AnimationAst, AnimationGroupAst, AnimationKeyframesSequenceAst, AnimationQueryAst, AnimationReferenceAst, AnimationSequenceAst, AnimationStaggerAst, AnimationStateAst, AnimationStyleAst, AnimationTimingAst, AnimationTransitionAst, AnimationTriggerAst, AnimationWaitAst, DynamicAnimationTimingAst} from './animation_ast';\nimport {AnimationDslVisitor, visitAnimationNode} from './animation_dsl_visitor';\nimport {parseTransitionExpr} from './animation_transition_expr';\n/**\n * @param {?} metadata\n * @param {?} errors\n * @return {?}\n */\nexport function buildAnimationAst(\n    metadata: AnimationMetadata | AnimationMetadata[], errors: any[]): AnimationAst {\n  return new AnimationAstBuilderVisitor().build(metadata, errors);\n}\n\nconst /** @type {?} */ LEAVE_TOKEN = ':leave';\nconst /** @type {?} */ LEAVE_TOKEN_REGEX = new RegExp(LEAVE_TOKEN, 'g');\nconst /** @type {?} */ ENTER_TOKEN = ':enter';\nconst /** @type {?} */ ENTER_TOKEN_REGEX = new RegExp(ENTER_TOKEN, 'g');\nexport class AnimationAstBuilderVisitor implements AnimationDslVisitor {\n/**\n * @param {?} metadata\n * @param {?} errors\n * @return {?}\n */\nbuild(metadata: AnimationMetadata|AnimationMetadata[], errors: any[]): AnimationAst {\n    const /** @type {?} */ context = new AnimationAstBuilderContext(errors);\n    return /** @type {?} */(( visitAnimationNode(this, normalizeAnimationEntry(metadata), context) as AnimationAst));\n  }\n/**\n * @param {?} metadata\n * @param {?} context\n * @return {?}\n */\nvisitTrigger(metadata: AnimationTriggerMetadata, context: AnimationAstBuilderContext):\n      AnimationTriggerAst {\n    let /** @type {?} */ queryCount = context.queryCount = 0;\n    let /** @type {?} */ depCount = context.depCount = 0;\n    const /** @type {?} */ states: AnimationStateAst[] = [];\n    const /** @type {?} */ transitions: AnimationTransitionAst[] = [];\n    metadata.definitions.forEach(def => {\n      if (def.type == AnimationMetadataType.State) {\n        const /** @type {?} */ stateDef = /** @type {?} */(( def as AnimationStateMetadata));\n        const /** @type {?} */ name = stateDef.name;\n        name.split(/\\s*,\\s*/).forEach(n => {\n          stateDef.name = n;\n          states.push(this.visitState(stateDef, context));\n        });\n        stateDef.name = name;\n      } else if (def.type == AnimationMetadataType.Transition) {\n        const /** @type {?} */ transition = this.visitTransition( /** @type {?} */((def as AnimationTransitionMetadata)), context);\n        queryCount += transition.queryCount;\n        depCount += transition.depCount;\n        transitions.push(transition);\n      } else {\n        context.errors.push(\n            'only state() and transition() definitions can sit inside of a trigger()');\n      }\n    });\n    const /** @type {?} */ ast = new AnimationTriggerAst(metadata.name, states, transitions);\n    ast.queryCount = queryCount;\n    ast.depCount = depCount;\n    return ast;\n  }\n/**\n * @param {?} metadata\n * @param {?} context\n * @return {?}\n */\nvisitState(metadata: AnimationStateMetadata, context: AnimationAstBuilderContext):\n      AnimationStateAst {\n    return new AnimationStateAst(metadata.name, this.visitStyle(metadata.styles, context));\n  }\n/**\n * @param {?} metadata\n * @param {?} context\n * @return {?}\n */\nvisitTransition(metadata: AnimationTransitionMetadata, context: AnimationAstBuilderContext):\n      AnimationTransitionAst {\n    context.queryCount = 0;\n    context.depCount = 0;\n    const /** @type {?} */ entry = visitAnimationNode(this, normalizeAnimationEntry(metadata.animation), context);\n    const /** @type {?} */ matchers = parseTransitionExpr(metadata.expr, context.errors);\n    const /** @type {?} */ ast = new AnimationTransitionAst(matchers, entry, normalizeLocals(metadata.locals));\n    ast.queryCount = context.queryCount;\n    ast.depCount = context.depCount;\n    return ast;\n  }\n/**\n * @param {?} metadata\n * @param {?} context\n * @return {?}\n */\nvisitSequence(metadata: AnimationSequenceMetadata, context: AnimationAstBuilderContext):\n      AnimationSequenceAst {\n    return new AnimationSequenceAst(metadata.steps.map(s => visitAnimationNode(this, s, context)));\n  }\n/**\n * @param {?} metadata\n * @param {?} context\n * @return {?}\n */\nvisitGroup(metadata: AnimationGroupMetadata, context: AnimationAstBuilderContext):\n      AnimationGroupAst {\n    const /** @type {?} */ currentTime = context.currentTime;\n    let /** @type {?} */ furthestTime = 0;\n    const /** @type {?} */ steps = metadata.steps.map(step => {\n      context.currentTime = currentTime;\n      const /** @type {?} */ ast = visitAnimationNode(this, step, context);\n      furthestTime = Math.max(furthestTime, context.currentTime);\n      return ast;\n    });\n    context.currentTime = furthestTime;\n    return new AnimationGroupAst(steps);\n  }\n/**\n * @param {?} metadata\n * @param {?} context\n * @return {?}\n */\nvisitAnimate(metadata: AnimationAnimateMetadata, context: AnimationAstBuilderContext):\n      AnimationAnimateAst {\n    const /** @type {?} */ timingAst = constructTimingAst(metadata.timings, context.errors);\n    context.currentAnimateTimings = timingAst;\n\n    let /** @type {?} */ styles: AnimationStyleAst|AnimationKeyframesSequenceAst = null;\n    let /** @type {?} */ styleMetadata: AnimationMetadata = metadata.styles ? metadata.styles : style({});\n    if (styleMetadata.type == AnimationMetadataType.KeyframeSequence) {\n      styles =\n          this.visitKeyframeSequence( /** @type {?} */((styleMetadata as AnimationKeyframesSequenceMetadata)), context);\n    } else {\n      let /** @type {?} */ styleMetadata = /** @type {?} */(( metadata.styles as AnimationStyleMetadata));\n      let /** @type {?} */ isEmpty = false;\n      if (!styleMetadata) {\n        isEmpty = true;\n        const /** @type {?} */ newStyleData: {[prop: string]: string | number} = {};\n        if (timingAst.easing) {\n          newStyleData['easing'] = timingAst.easing;\n        }\n        styleMetadata = style(newStyleData);\n      }\n      context.currentTime += timingAst.duration + timingAst.delay;\n      const /** @type {?} */ styleAst = this.visitStyle(styleMetadata, context);\n      styleAst.isEmptyStep = isEmpty;\n      styles = styleAst;\n    }\n\n    context.currentAnimateTimings = null;\n    return new AnimationAnimateAst(timingAst, styles);\n  }\n/**\n * @param {?} metadata\n * @param {?} context\n * @return {?}\n */\nvisitStyle(metadata: AnimationStyleMetadata, context: AnimationAstBuilderContext):\n      AnimationStyleAst {\n    const /** @type {?} */ ast = this._makeStyleAst(metadata, context);\n    this._validateStyleAst(ast, context);\n    return ast;\n  }\n/**\n * @param {?} metadata\n * @param {?} context\n * @return {?}\n */\nprivate _makeStyleAst(metadata: AnimationStyleMetadata, context: AnimationAstBuilderContext):\n      AnimationStyleAst {\n    const /** @type {?} */ styles: (ɵStyleData | string)[] = [];\n    if (Array.isArray(metadata.styles)) {\n      ( /** @type {?} */((metadata.styles as(ɵStyleData | string)[]))).forEach(styleTuple => {\n        if (typeof styleTuple == 'string') {\n          if (styleTuple == AUTO_STYLE) {\n            styles.push( /** @type {?} */((styleTuple as string)));\n          } else {\n            context.errors.push(`The provided style string value ${styleTuple} is not allowed.`);\n          }\n        } else {\n          styles.push( /** @type {?} */((styleTuple as ɵStyleData)));\n        }\n      })\n    } else {\n      styles.push(metadata.styles);\n    }\n\n    let /** @type {?} */ collectedEasing: string = null;\n    styles.forEach(styleData => {\n      if (isObject(styleData)) {\n        const /** @type {?} */ styleMap = /** @type {?} */(( styleData as ɵStyleData));\n        const /** @type {?} */ easing = styleMap['easing'];\n        if (easing) {\n          collectedEasing = /** @type {?} */(( easing as string));\n          delete styleMap['easing'];\n        }\n      }\n    });\n    return new AnimationStyleAst(styles, collectedEasing, metadata.offset);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nprivate _validateStyleAst(ast: AnimationStyleAst, context: AnimationAstBuilderContext): void {\n    const /** @type {?} */ timings = context.currentAnimateTimings;\n    let /** @type {?} */ endTime = context.currentTime;\n    let /** @type {?} */ startTime = context.currentTime;\n    if (timings && startTime > 0) {\n      startTime -= timings.duration + timings.delay;\n    }\n\n    ast.styles.forEach(tuple => {\n      if (typeof tuple == 'string') return;\n\n      Object.keys(tuple).forEach(prop => {\n        const /** @type {?} */ collectedStyles = context.collectedStyles[context.currentQuerySelector];\n        const /** @type {?} */ collectedEntry = collectedStyles[prop];\n        let /** @type {?} */ updateCollectedStyle = true;\n        if (collectedEntry) {\n          if (startTime != endTime && startTime >= collectedEntry.startTime &&\n              endTime <= collectedEntry.endTime) {\n            context.errors.push(\n                `The CSS property \"${prop}\" that exists between the times of \"${collectedEntry.startTime}ms\" and \"${collectedEntry.endTime}ms\" is also being animated in a parallel animation between the times of \"${startTime}ms\" and \"${endTime}ms\"`);\n            updateCollectedStyle = false;\n          }\n\n          // we always choose the smaller start time value since we\n          // want to have a record of the entire animation window where\n          // the style property is being animated in between\n          startTime = collectedEntry.startTime;\n        }\n\n        if (updateCollectedStyle) {\n          collectedStyles[prop] = {startTime, endTime};\n        }\n\n        if (context.locals) {\n          validateStyleLocals(tuple[prop], context.locals, context.errors);\n        }\n      });\n    });\n  }\n/**\n * @param {?} metadata\n * @param {?} context\n * @return {?}\n */\nvisitKeyframeSequence(\n      metadata: AnimationKeyframesSequenceMetadata,\n      context: AnimationAstBuilderContext): AnimationKeyframesSequenceAst {\n    if (!context.currentAnimateTimings) {\n      context.errors.push(`keyframes() must be placed inside of a call to animate()`);\n      return;\n    }\n\n    const /** @type {?} */ MAX_KEYFRAME_OFFSET = 1;\n\n    let /** @type {?} */ totalKeyframesWithOffsets = 0;\n    const /** @type {?} */ offsets: number[] = [];\n    let /** @type {?} */ offsetsOutOfOrder = false;\n    let /** @type {?} */ keyframesOutOfRange = false;\n    let /** @type {?} */ previousOffset: number = 0;\n\n    const /** @type {?} */ keyframes: AnimationStyleAst[] = metadata.steps.map(styles => {\n      const /** @type {?} */ style = this._makeStyleAst(styles, context);\n      let /** @type {?} */ offsetVal: number = style.offset != null ? style.offset : consumeOffset(style.styles);\n      let /** @type {?} */ offset: number = 0;\n      if (offsetVal != null) {\n        totalKeyframesWithOffsets++;\n        offset = style.offset = offsetVal;\n      }\n      keyframesOutOfRange = keyframesOutOfRange || offset < 0 || offset > 1;\n      offsetsOutOfOrder = offsetsOutOfOrder || offset < previousOffset;\n      previousOffset = offset;\n      offsets.push(offset);\n      return style;\n    });\n\n    if (keyframesOutOfRange) {\n      context.errors.push(`Please ensure that all keyframe offsets are between 0 and 1`);\n    }\n\n    if (offsetsOutOfOrder) {\n      context.errors.push(`Please ensure that all keyframe offsets are in order`);\n    }\n\n    const /** @type {?} */ length = metadata.steps.length;\n    let /** @type {?} */ generatedOffset = 0;\n    if (totalKeyframesWithOffsets > 0 && totalKeyframesWithOffsets < length) {\n      context.errors.push(`Not all style() steps within the declared keyframes() contain offsets`);\n    } else if (totalKeyframesWithOffsets == 0) {\n      generatedOffset = MAX_KEYFRAME_OFFSET / (length - 1);\n    }\n\n    const /** @type {?} */ limit = length - 1;\n    const /** @type {?} */ currentTime = context.currentTime;\n    const /** @type {?} */ animateDuration = context.currentAnimateTimings.duration;\n    keyframes.forEach((kf, i) => {\n      const /** @type {?} */ offset = generatedOffset > 0 ? (i == limit ? 1 : (generatedOffset * i)) : offsets[i];\n      const /** @type {?} */ durationUpToThisFrame = offset * animateDuration;\n      context.currentTime =\n          currentTime + context.currentAnimateTimings.delay + durationUpToThisFrame;\n      context.currentAnimateTimings.duration = durationUpToThisFrame;\n      this._validateStyleAst(kf, context);\n      kf.offset = offset;\n    });\n\n    return new AnimationKeyframesSequenceAst(keyframes);\n  }\n/**\n * @param {?} metadata\n * @param {?} context\n * @return {?}\n */\nvisitReference(metadata: AnimationReferenceMetadata, context: AnimationAstBuilderContext):\n      AnimationReferenceAst {\n    const /** @type {?} */ entry = visitAnimationNode(this, normalizeAnimationEntry(metadata.animation), context);\n    return new AnimationReferenceAst(entry, normalizeLocals(metadata.locals));\n  }\n/**\n * @param {?} metadata\n * @param {?} context\n * @return {?}\n */\nvisitAnimateChild(metadata: AnimationAnimateChildMetadata, context: AnimationAstBuilderContext):\n      AnimationAnimateChildAst {\n    let /** @type {?} */ animationArg: AnimationReferenceMetadata = null;\n    let /** @type {?} */ timings: AnimateTimings = null;\n    let /** @type {?} */ locals: {[key: string]: any} = null;\n    const /** @type {?} */ args = metadata.args;\n    switch (countArgs(args)) {\n      case 0:\n        // animateChild()\n        context.depCount++;\n        break;\n      case 1:\n        // animateChild(string|definition|number)\n        const /** @type {?} */ arg = args[0];\n        if (typeof arg == 'string' || arg >= 0) {\n          // animateChild(string|number)\n          context.depCount++;\n          timings = resolveTimingValue( /** @type {?} */((arg as string | number)), context.errors);\n        } else if (( /** @type {?} */((arg as AnimationMetadata))).type == AnimationMetadataType.Definition) {\n          // animateChild(definition)\n          animationArg = /** @type {?} */(( arg as AnimationReferenceMetadata));\n        }\n        break;\n      case 2:\n        animationArg = /** @type {?} */(( args[0] as any));\n        if (animationArg['type']) {\n          // animateChild(definition, locals)\n          animationArg = /** @type {?} */(( args[0] as AnimationReferenceMetadata));\n          locals = normalizeLocals( /** @type {?} */((args[1] as{[key: string]: any})));\n        } else {\n          // animateChild(string|number, definition)\n          timings = resolveTimingValue( /** @type {?} */((args[0] as string | number)), context.errors);\n          animationArg = /** @type {?} */(( args[1] as AnimationReferenceMetadata));\n        }\n        break;\n      default:\n        // animateChild(string|number, definition, locals)\n        timings = resolveTimingValue( /** @type {?} */((args[0] as string | number)), context.errors);\n        animationArg = /** @type {?} */(( args[1] as AnimationReferenceMetadata));\n        locals = normalizeLocals( /** @type {?} */((args[2] as{[key: string]: any})));\n        break;\n    }\n    const /** @type {?} */ animation = animationArg ? this.visitReference(animationArg, context) : null;\n    return new AnimationAnimateChildAst(timings, animation, locals);\n  }\n/**\n * @param {?} metadata\n * @param {?} context\n * @return {?}\n */\nvisitQuery(metadata: AnimationQueryMetadata, context: AnimationAstBuilderContext):\n      AnimationQueryAst {\n    const /** @type {?} */ parentSelector = context.currentQuerySelector;\n\n    context.queryCount++;\n    context.currentQuery = metadata;\n    const [selector, includeSelf] = normalizeSelector(metadata.selector);\n    context.currentQuerySelector =\n        parentSelector.length ? (parentSelector + ' ' + selector) : selector;\n    getOrSetAsInMap(context.collectedStyles, context.currentQuerySelector, {});\n\n    const /** @type {?} */ entry = visitAnimationNode(this, normalizeAnimationEntry(metadata.animation), context);\n    context.currentQuery = null;\n    context.currentQuerySelector = parentSelector;\n    return new AnimationQueryAst(selector, metadata.multi, includeSelf, entry);\n  }\n/**\n * @param {?} metadata\n * @param {?} context\n * @return {?}\n */\nvisitStagger(metadata: AnimationStaggerMetadata, context: AnimationAstBuilderContext):\n      AnimationStaggerAst {\n    if (!context.currentQuery || !context.currentQuery.multi) {\n      context.errors.push(`stagger() can only be used inside of queryAll()`);\n    }\n    let /** @type {?} */ timings: AnimateTimings;\n    let /** @type {?} */ animation: AnimationAst;\n    switch (countArgs(metadata.args)) {\n      case 1:\n        // stagger(animation)\n        timings = /** @type {?} */(( { duration: 0, delay: 0, easing: 'full' } as AnimateTimings));\n        animation = visitAnimationNode(this, normalizeAnimationEntry(metadata.args[0]), context);\n        break;\n      default:\n        // stagger(timing, animation)\n        timings = resolveTimingValue( /** @type {?} */((metadata.args[0] as string)), context.errors, true);\n        animation = visitAnimationNode(this, normalizeAnimationEntry(metadata.args[1]), context);\n        break;\n    }\n    return new AnimationStaggerAst(timings, animation);\n  }\n/**\n * @param {?} metadata\n * @param {?} context\n * @return {?}\n */\nvisitWait(metadata: AnimationWaitMetadata, context: AnimationAstBuilderContext):\n      AnimationWaitAst {\n    const /** @type {?} */ timings = resolveTimingValue(metadata.delay, context.errors);\n    if (timings.duration < 0) {\n      context.errors.push('Negative wait delays are not supported');\n    }\n    if (timings.duration && timings.delay) {\n      context.errors.push('Wait delays can only support a single timing value');\n    }\n    if (timings.easing) {\n      context.errors.push('Wait delays cannot support easing values');\n    }\n\n    const /** @type {?} */ animation = metadata.animation ?\n        visitAnimationNode(this, normalizeAnimationEntry(metadata.animation), context) :\n        null;\n    return new AnimationWaitAst(timings.duration, animation);\n  }\n}\n/**\n * @param {?} selector\n * @return {?}\n */\nfunction normalizeSelector(selector: string): [string, boolean] {\n  const /** @type {?} */ hasAmpersand = selector.split(/\\s*,\\s*/).find(token => token == '&') ? true : false;\n  if (hasAmpersand) {\n    selector = selector.replace(/\\s*&\\s*,?/g, '');\n  }\n\n  selector = selector.replace(ENTER_TOKEN_REGEX, ENTER_SELECTOR)\n                 .replace(LEAVE_TOKEN_REGEX, LEAVE_SELECTOR)\n                 .replace(/@\\*/g, NG_TRIGGER_SELECTOR)\n                 .replace(/@\\w+/g, match => NG_TRIGGER_SELECTOR + '-' + match.substr(1))\n                 .replace(/:animating/g, NG_ANIMATING_SELECTOR);\n\n  return [selector, hasAmpersand];\n}\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction normalizeLocals(obj: {[key: string]: any}): {[key: string]: any} {\n  return obj ? copyObj(obj) : null;\n}\n/**\n * @param {?} args\n * @return {?}\n */\nfunction countArgs(args: any[]): number {\n  return args.reduce((count, arg) => (arg != null ? 1 : 0) + count, 0);\n}\n\nexport type StyleTimeTuple = {\n  startTime: number; endTime: number;\n};\nexport class AnimationAstBuilderContext {\npublic queryCount: number = 0;\npublic depCount: number = 0;\npublic currentTransition: AnimationTransitionMetadata;\npublic currentQuery: AnimationQueryMetadata;\npublic currentQuerySelector: string;\npublic currentAnimateTimings: AnimationTimingAst;\npublic currentTime: number = 0;\npublic collectedStyles: {[selectorName: string]: {[propName: string]: StyleTimeTuple}} = {};\npublic locals: {[varName: string]: string | number | boolean} = null;\n/**\n * @param {?} errors\n */\nconstructor(public errors: any[]) {\n    // this is for the rootElement's selector\n    const ROOT_SELECTOR = '';\n    this.currentQuerySelector = ROOT_SELECTOR;\n    this.collectedStyles[ROOT_SELECTOR] = {};\n  }\n}\n\nfunction AnimationAstBuilderContext_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationAstBuilderContext.prototype.queryCount;\n/** @type {?} */\nAnimationAstBuilderContext.prototype.depCount;\n/** @type {?} */\nAnimationAstBuilderContext.prototype.currentTransition;\n/** @type {?} */\nAnimationAstBuilderContext.prototype.currentQuery;\n/** @type {?} */\nAnimationAstBuilderContext.prototype.currentQuerySelector;\n/** @type {?} */\nAnimationAstBuilderContext.prototype.currentAnimateTimings;\n/** @type {?} */\nAnimationAstBuilderContext.prototype.currentTime;\n/** @type {?} */\nAnimationAstBuilderContext.prototype.collectedStyles;\n/** @type {?} */\nAnimationAstBuilderContext.prototype.locals;\n/** @type {?} */\nAnimationAstBuilderContext.prototype.errors;\n}\n\n/**\n * @param {?} styles\n * @return {?}\n */\nfunction consumeOffset(styles: ɵStyleData | string | (ɵStyleData | string)[]): number {\n  let /** @type {?} */ offset: number = null;\n  if (typeof styles == 'string') return offset;\n\n  if (Array.isArray(styles)) {\n    styles.forEach(styleTuple => {\n      if (isObject(styleTuple) && styleTuple.hasOwnProperty('offset')) {\n        const /** @type {?} */ obj = /** @type {?} */(( styleTuple as ɵStyleData));\n        offset = parseFloat( /** @type {?} */((obj['offset'] as string)));\n        delete obj['offset'];\n      }\n    });\n  } else if (isObject(styles) && styles.hasOwnProperty('offset')) {\n    const /** @type {?} */ obj = /** @type {?} */(( styles as ɵStyleData));\n    offset = parseFloat( /** @type {?} */((obj['offset'] as string)));\n    delete obj['offset'];\n  }\n  return offset;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isObject(value: any): boolean {\n  return !Array.isArray(value) && typeof value == 'object';\n}\n/**\n * @param {?} value\n * @param {?} errors\n * @return {?}\n */\nfunction constructTimingAst(value: string | number | AnimateTimings, errors: any[]) {\n  let /** @type {?} */ timings: AnimateTimings = null;\n  if (value.hasOwnProperty('duration')) {\n    timings = /** @type {?} */(( value as AnimateTimings));\n  } else if (typeof value == 'number') {\n    const /** @type {?} */ duration = resolveTimingValue( /** @type {?} */((value as number)), errors).duration;\n    return new AnimationTimingAst( /** @type {?} */((value as number)), 0, '');\n  }\n\n  const /** @type {?} */ strValue = /** @type {?} */(( value as string));\n  const /** @type {?} */ isDynamic = strValue.split(/\\s+/).some(v => v.charAt(0) == '$');\n  if (isDynamic) {\n    return new DynamicAnimationTimingAst(strValue);\n  }\n\n  timings = timings || resolveTimingValue(strValue, errors);\n  return new AnimationTimingAst(timings.duration, timings.delay, timings.easing);\n}\n","\n/**\n * @license \n * Copyright Google Inc. All Rights Reserved.\n * \n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const ANY_STATE = '*';\nexport declare type TransitionMatcherFn = (fromState: any, toState: any) => boolean;\n/**\n * @param {?} transitionValue\n * @param {?} errors\n * @return {?}\n */\nexport function parseTransitionExpr(\n    transitionValue: string | TransitionMatcherFn, errors: string[]): TransitionMatcherFn[] {\n  const /** @type {?} */ expressions: TransitionMatcherFn[] = [];\n  if (typeof transitionValue == 'string') {\n    ( /** @type {?} */((<string>transitionValue)))\n        .split(/\\s*,\\s*/)\n        .forEach(str => parseInnerTransitionStr(str, expressions, errors));\n  } else {\n    expressions.push( /** @type {?} */((<TransitionMatcherFn>transitionValue)));\n  }\n  return expressions;\n}\n/**\n * @param {?} eventStr\n * @param {?} expressions\n * @param {?} errors\n * @return {?}\n */\nfunction parseInnerTransitionStr(\n    eventStr: string, expressions: TransitionMatcherFn[], errors: string[]) {\n  if (eventStr[0] == ':') {\n    eventStr = parseAnimationAlias(eventStr, errors);\n  }\n  const /** @type {?} */ match = eventStr.match(/^(\\*|[-\\w]+)\\s*(<?[=-]>)\\s*(\\*|[-\\w]+)$/);\n  if (match == null || match.length < 4) {\n    errors.push(`The provided transition expression \"${eventStr}\" is not supported`);\n    return expressions;\n  }\n\n  const /** @type {?} */ fromState = match[1];\n  const /** @type {?} */ separator = match[2];\n  const /** @type {?} */ toState = match[3];\n  expressions.push(makeLambdaFromStates(fromState, toState));\n\n  const /** @type {?} */ isFullAnyStateExpr = fromState == ANY_STATE && toState == ANY_STATE;\n  if (separator[0] == '<' && !isFullAnyStateExpr) {\n    expressions.push(makeLambdaFromStates(toState, fromState));\n  }\n}\n/**\n * @param {?} alias\n * @param {?} errors\n * @return {?}\n */\nfunction parseAnimationAlias(alias: string, errors: string[]): string {\n  switch (alias) {\n    case ':enter':\n      return 'void => *';\n    case ':leave':\n      return '* => void';\n    default:\n      errors.push(`The transition alias value \"${alias}\" is not supported`);\n      return '* => *';\n  }\n}\n/**\n * @param {?} lhs\n * @param {?} rhs\n * @return {?}\n */\nfunction makeLambdaFromStates(lhs: string, rhs: string): TransitionMatcherFn {\n  return (fromState: any, toState: any): boolean => {\n    const /** @type {?} */ lhsMatch = lhs == ANY_STATE || lhs == fromState;\n    const /** @type {?} */ rhsMatch = rhs == ANY_STATE || rhs == toState;\n    return lhsMatch && rhsMatch;\n  };\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AnimationAnimateChildMetadata, AnimationAnimateMetadata, AnimationGroupMetadata, AnimationKeyframesSequenceMetadata, AnimationMetadata, AnimationMetadataType, AnimationQueryMetadata, AnimationReferenceMetadata, AnimationSequenceMetadata, AnimationStaggerMetadata, AnimationStateMetadata, AnimationStyleMetadata, AnimationTransitionMetadata, AnimationTriggerMetadata, AnimationWaitMetadata} from '@angular/animations';\n\nexport interface AnimationDslVisitor {\n  visitTrigger(ast: AnimationTriggerMetadata, context: any): any;\n  visitState(ast: AnimationStateMetadata, context: any): any;\n  visitTransition(ast: AnimationTransitionMetadata, context: any): any;\n  visitSequence(ast: AnimationSequenceMetadata, context: any): any;\n  visitGroup(ast: AnimationGroupMetadata, context: any): any;\n  visitAnimate(ast: AnimationAnimateMetadata, context: any): any;\n  visitStyle(ast: AnimationStyleMetadata, context: any): any;\n  visitKeyframeSequence(ast: AnimationKeyframesSequenceMetadata, context: any): any;\n  visitReference(ast: AnimationReferenceMetadata, context: any): any;\n  visitAnimateChild(ast: AnimationAnimateChildMetadata, context: any): any;\n  visitQuery(ast: AnimationQueryMetadata, context: any): any;\n  visitStagger(ast: AnimationStaggerMetadata, context: any): any;\n  visitWait(ast: AnimationWaitMetadata, context: any): any;\n}\n/**\n * @param {?} visitor\n * @param {?} node\n * @param {?} context\n * @return {?}\n */\nexport function visitAnimationNode(\n    visitor: AnimationDslVisitor, node: AnimationMetadata, context: any) {\n  switch (node.type) {\n    case AnimationMetadataType.Trigger:\n      return visitor.visitTrigger( /** @type {?} */((node as AnimationTriggerMetadata)), context);\n    case AnimationMetadataType.State:\n      return visitor.visitState( /** @type {?} */((node as AnimationStateMetadata)), context);\n    case AnimationMetadataType.Transition:\n      return visitor.visitTransition( /** @type {?} */((node as AnimationTransitionMetadata)), context);\n    case AnimationMetadataType.Sequence:\n      return visitor.visitSequence( /** @type {?} */((node as AnimationSequenceMetadata)), context);\n    case AnimationMetadataType.Group:\n      return visitor.visitGroup( /** @type {?} */((node as AnimationGroupMetadata)), context);\n    case AnimationMetadataType.Animate:\n      return visitor.visitAnimate( /** @type {?} */((node as AnimationAnimateMetadata)), context);\n    case AnimationMetadataType.KeyframeSequence:\n      return visitor.visitKeyframeSequence( /** @type {?} */((node as AnimationKeyframesSequenceMetadata)), context);\n    case AnimationMetadataType.Style:\n      return visitor.visitStyle( /** @type {?} */((node as AnimationStyleMetadata)), context);\n    case AnimationMetadataType.Definition:\n      return visitor.visitReference( /** @type {?} */((node as AnimationReferenceMetadata)), context);\n    case AnimationMetadataType.AnimateChild:\n      return visitor.visitAnimateChild( /** @type {?} */((node as AnimationAnimateChildMetadata)), context);\n    case AnimationMetadataType.Query:\n      return visitor.visitQuery( /** @type {?} */((node as AnimationQueryMetadata)), context);\n    case AnimationMetadataType.Stagger:\n      return visitor.visitStagger( /** @type {?} */((node as AnimationStaggerMetadata)), context);\n    case AnimationMetadataType.Wait:\n      return visitor.visitWait( /** @type {?} */((node as AnimationWaitMetadata)), context);\n    default:\n      throw new Error(`Unable to resolve animation metadata node #${node.type}`);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AnimateTimings, ɵStyleData} from '@angular/animations';\n\nexport interface AnimationAstVisitor {\n  visitTrigger(ast: AnimationTriggerAst, context: any): any;\n  visitState(ast: AnimationStateAst, context: any): any;\n  visitTransition(ast: AnimationTransitionAst, context: any): any;\n  visitSequence(ast: AnimationSequenceAst, context: any): any;\n  visitGroup(ast: AnimationGroupAst, context: any): any;\n  visitAnimate(ast: AnimationAnimateAst, context: any): any;\n  visitStyle(ast: AnimationStyleAst, context: any): any;\n  visitKeyframeSequence(ast: AnimationKeyframesSequenceAst, context: any): any;\n  visitReference(ast: AnimationReferenceAst, context: any): any;\n  visitAnimateChild(ast: AnimationAnimateChildAst, context: any): any;\n  visitQuery(ast: AnimationQueryAst, context: any): any;\n  visitStagger(ast: AnimationStaggerAst, context: any): any;\n  visitWait(ast: AnimationWaitAst, context: any): any;\n  visitTiming(ast: AnimationTimingAst, context: any): any;\n}\n/**\n * @abstract\n */\nexport abstract class AnimationAst {\n/**\n * @abstract\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisit(ast: AnimationAstVisitor, context: any) {} }\nexport class AnimationTriggerAst extends AnimationAst {\npublic queryCount: number = 0;\npublic depCount: number = 0;\n/**\n * @param {?} name\n * @param {?} states\n * @param {?} transitions\n */\nconstructor(\npublic name: string,\npublic states: AnimationStateAst[],\npublic transitions: AnimationTransitionAst[]) {\n    super();\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: AnimationAstVisitor, context: any): any {\n    return visitor.visitTrigger(this, context);\n  }\n}\n\nfunction AnimationTriggerAst_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationTriggerAst.prototype.queryCount;\n/** @type {?} */\nAnimationTriggerAst.prototype.depCount;\n/** @type {?} */\nAnimationTriggerAst.prototype.name;\n/** @type {?} */\nAnimationTriggerAst.prototype.states;\n/** @type {?} */\nAnimationTriggerAst.prototype.transitions;\n}\n\nexport class AnimationStateAst extends AnimationAst {\n/**\n * @param {?} name\n * @param {?} style\n */\nconstructor(public name: string,\npublic style: AnimationStyleAst) { super(); }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: AnimationAstVisitor, context: any): any {\n    return visitor.visitState(this, context);\n  }\n}\n\nfunction AnimationStateAst_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationStateAst.prototype.name;\n/** @type {?} */\nAnimationStateAst.prototype.style;\n}\n\nexport class AnimationTransitionAst extends AnimationAst {\npublic queryCount: number = 0;\npublic depCount: number = 0;\n/**\n * @param {?} matchers\n * @param {?} animation\n * @param {?} locals\n */\nconstructor(\npublic matchers: ((fromState: string, toState: string) => boolean)[],\npublic animation: AnimationAst,\npublic locals: {[varName: string]: string | number | boolean}) {\n    super();\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: AnimationAstVisitor, context: any): any {\n    return visitor.visitTransition(this, context);\n  }\n}\n\nfunction AnimationTransitionAst_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationTransitionAst.prototype.queryCount;\n/** @type {?} */\nAnimationTransitionAst.prototype.depCount;\n/** @type {?} */\nAnimationTransitionAst.prototype.matchers;\n/** @type {?} */\nAnimationTransitionAst.prototype.animation;\n/** @type {?} */\nAnimationTransitionAst.prototype.locals;\n}\n\nexport class AnimationSequenceAst extends AnimationAst {\n/**\n * @param {?} steps\n */\nconstructor(public steps: AnimationAst[]) { super(); }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: AnimationAstVisitor, context: any): any {\n    return visitor.visitSequence(this, context);\n  }\n}\n\nfunction AnimationSequenceAst_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationSequenceAst.prototype.steps;\n}\n\nexport class AnimationGroupAst extends AnimationAst {\n/**\n * @param {?} steps\n */\nconstructor(public steps: AnimationAst[]) { super(); }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: AnimationAstVisitor, context: any): any {\n    return visitor.visitGroup(this, context);\n  }\n}\n\nfunction AnimationGroupAst_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationGroupAst.prototype.steps;\n}\n\nexport class AnimationAnimateAst extends AnimationAst {\n/**\n * @param {?} timings\n * @param {?} style\n */\nconstructor(\npublic timings: AnimationTimingAst,\npublic style: AnimationStyleAst|AnimationKeyframesSequenceAst) {\n    super();\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: AnimationAstVisitor, context: any): any {\n    return visitor.visitAnimate(this, context);\n  }\n}\n\nfunction AnimationAnimateAst_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationAnimateAst.prototype.timings;\n/** @type {?} */\nAnimationAnimateAst.prototype.style;\n}\n\nexport class AnimationStyleAst extends AnimationAst {\npublic isEmptyStep = false;\n/**\n * @param {?} styles\n * @param {?} easing\n * @param {?} offset\n */\nconstructor(public styles: (ɵStyleData|string)[],\npublic easing: string,\npublic offset: number) {\n    super();\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: AnimationAstVisitor, context: any): any {\n    return visitor.visitStyle(this, context);\n  }\n}\n\nfunction AnimationStyleAst_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationStyleAst.prototype.isEmptyStep;\n/** @type {?} */\nAnimationStyleAst.prototype.styles;\n/** @type {?} */\nAnimationStyleAst.prototype.easing;\n/** @type {?} */\nAnimationStyleAst.prototype.offset;\n}\n\nexport class AnimationKeyframesSequenceAst extends AnimationAst {\n/**\n * @param {?} styles\n */\nconstructor(public styles: AnimationStyleAst[]) { super(); }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: AnimationAstVisitor, context: any): any {\n    return visitor.visitKeyframeSequence(this, context);\n  }\n}\n\nfunction AnimationKeyframesSequenceAst_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationKeyframesSequenceAst.prototype.styles;\n}\n\nexport class AnimationReferenceAst extends AnimationAst {\n/**\n * @param {?} animation\n * @param {?} locals\n */\nconstructor(\npublic animation: AnimationAst,\npublic locals: {[varName: string]: string | number | boolean}) {\n    super();\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: AnimationAstVisitor, context: any): any {\n    return visitor.visitReference(this, context);\n  }\n}\n\nfunction AnimationReferenceAst_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationReferenceAst.prototype.animation;\n/** @type {?} */\nAnimationReferenceAst.prototype.locals;\n}\n\nexport class AnimationAnimateChildAst extends AnimationAst {\n/**\n * @param {?} timings\n * @param {?} animation\n * @param {?} locals\n */\nconstructor(\npublic timings: AnimateTimings,\npublic animation: AnimationReferenceAst,\npublic locals: {[varName: string]: string | number | boolean}) {\n    super();\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: AnimationAstVisitor, context: any): any {\n    return visitor.visitAnimateChild(this, context);\n  }\n}\n\nfunction AnimationAnimateChildAst_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationAnimateChildAst.prototype.timings;\n/** @type {?} */\nAnimationAnimateChildAst.prototype.animation;\n/** @type {?} */\nAnimationAnimateChildAst.prototype.locals;\n}\n\nexport class AnimationQueryAst extends AnimationAst {\n/**\n * @param {?} selector\n * @param {?} multi\n * @param {?} includeSelf\n * @param {?} animation\n */\nconstructor(\npublic selector: string,\npublic multi: boolean,\npublic includeSelf: boolean,\npublic animation: AnimationAst) {\n    super();\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: AnimationAstVisitor, context: any): any {\n    return visitor.visitQuery(this, context);\n  }\n}\n\nfunction AnimationQueryAst_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationQueryAst.prototype.selector;\n/** @type {?} */\nAnimationQueryAst.prototype.multi;\n/** @type {?} */\nAnimationQueryAst.prototype.includeSelf;\n/** @type {?} */\nAnimationQueryAst.prototype.animation;\n}\n\nexport class AnimationStaggerAst extends AnimationAst {\n/**\n * @param {?} timings\n * @param {?} animation\n */\nconstructor(public timings: AnimateTimings,\npublic animation: AnimationAst) { super(); }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: AnimationAstVisitor, context: any): any {\n    return visitor.visitStagger(this, context);\n  }\n}\n\nfunction AnimationStaggerAst_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationStaggerAst.prototype.timings;\n/** @type {?} */\nAnimationStaggerAst.prototype.animation;\n}\n\nexport class AnimationWaitAst extends AnimationAst {\n/**\n * @param {?} delay\n * @param {?=} animation\n */\nconstructor(public delay: number,\npublic animation?: AnimationAst) { super(); }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: AnimationAstVisitor, context: any): any {\n    return visitor.visitWait(this, context);\n  }\n}\n\nfunction AnimationWaitAst_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationWaitAst.prototype.delay;\n/** @type {?} */\nAnimationWaitAst.prototype.animation;\n}\n\nexport class AnimationTimingAst extends AnimationAst {\n/**\n * @param {?} duration\n * @param {?} delay\n * @param {?} easing\n */\nconstructor(public duration: number,\npublic delay: number,\npublic easing: string) { super(); }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: AnimationAstVisitor, context: any): any {\n    return visitor.visitTiming(this, context);\n  }\n}\n\nfunction AnimationTimingAst_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationTimingAst.prototype.duration;\n/** @type {?} */\nAnimationTimingAst.prototype.delay;\n/** @type {?} */\nAnimationTimingAst.prototype.easing;\n}\n\nexport class DynamicAnimationTimingAst extends AnimationTimingAst {\n/**\n * @param {?} value\n */\nconstructor(public value: string) { super(0, 0, ''); }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: AnimationAstVisitor, context: any): any {\n    return visitor.visitTiming(this, context);\n  }\n}\n\nfunction DynamicAnimationTimingAst_tsickle_Closure_declarations() {\n/** @type {?} */\nDynamicAnimationTimingAst.prototype.value;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AUTO_STYLE, AnimationEvent, AnimationPlayer, NoopAnimationPlayer, PRE_STYLE, ɵAnimationGroupPlayer, ɵStyleData} from '@angular/animations';\n\nimport {AnimationStyleNormalizer} from '../../src/dsl/style_normalization/animation_style_normalizer';\nimport {AnimationDriver} from '../../src/render/animation_driver';\n/**\n * @param {?} players\n * @return {?}\n */\nexport function optimizeGroupPlayer(players: AnimationPlayer[]): AnimationPlayer {\n  switch (players.length) {\n    case 0:\n      return new NoopAnimationPlayer();\n    case 1:\n      return players[0];\n    default:\n      return new ɵAnimationGroupPlayer(players);\n  }\n}\n/**\n * @param {?} driver\n * @param {?} normalizer\n * @param {?} element\n * @param {?} keyframes\n * @param {?} preStyles\n * @param {?} postStyles\n * @return {?}\n */\nexport function normalizeKeyframes(\n    driver: AnimationDriver, normalizer: AnimationStyleNormalizer, element: any,\n    keyframes: ɵStyleData[], preStyles: ɵStyleData, postStyles: ɵStyleData): ɵStyleData[] {\n  const /** @type {?} */ errors: string[] = [];\n  const /** @type {?} */ normalizedKeyframes: ɵStyleData[] = [];\n  let /** @type {?} */ previousOffset = -1;\n  let /** @type {?} */ previousKeyframe: ɵStyleData = null;\n  keyframes.forEach(kf => {\n    const /** @type {?} */ offset = /** @type {?} */(( kf['offset'] as number));\n    const /** @type {?} */ isSameOffset = offset == previousOffset;\n    const /** @type {?} */ normalizedKeyframe: ɵStyleData = isSameOffset ? previousKeyframe : {};\n    Object.keys(kf).forEach(prop => {\n      let /** @type {?} */ normalizedProp = prop;\n      let /** @type {?} */ normalizedValue = kf[prop];\n      if (normalizedValue == PRE_STYLE) {\n        normalizedValue = preStyles[prop];\n      } else if (normalizedValue == AUTO_STYLE) {\n        normalizedValue = postStyles[prop];\n      } else if (prop != 'offset') {\n        normalizedProp = normalizer.normalizePropertyName(prop, errors);\n        normalizedValue = normalizer.normalizeStyleValue(prop, normalizedProp, kf[prop], errors);\n      }\n      normalizedKeyframe[normalizedProp] = normalizedValue;\n    });\n    if (!isSameOffset) {\n      normalizedKeyframes.push(normalizedKeyframe);\n    }\n    previousKeyframe = normalizedKeyframe;\n    previousOffset = offset;\n  });\n  if (errors.length) {\n    const /** @type {?} */ LINE_START = '\\n - ';\n    throw new Error(\n        `Unable to animate due to the following errors:${LINE_START}${errors.join(LINE_START)}`);\n  }\n\n  return normalizedKeyframes;\n}\n/**\n * @param {?} player\n * @param {?} eventName\n * @param {?} event\n * @param {?} callback\n * @return {?}\n */\nexport function listenOnPlayer(\n    player: AnimationPlayer, eventName: string, event: AnimationEvent,\n    callback: (event: any) => any) {\n  switch (eventName) {\n    case 'start':\n      player.onStart(\n          () => { callback(event && copyAnimationEvent(event, 'start', player.totalTime)); });\n      break;\n    case 'done':\n      player.onDone(\n          () => { callback(event && copyAnimationEvent(event, 'done', player.totalTime)); });\n      break;\n    case 'destroy':\n      player.onDestroy(\n          () => { callback(event && copyAnimationEvent(event, 'destroy', player.totalTime)); });\n      break;\n  }\n}\n/**\n * @param {?} e\n * @param {?=} phaseName\n * @param {?=} totalTime\n * @return {?}\n */\nexport function copyAnimationEvent(\n    e: AnimationEvent, phaseName?: string, totalTime?: number): AnimationEvent {\n  return makeAnimationEvent(\n      e.element, e.triggerName, e.fromState, e.toState, phaseName || e.phaseName,\n      totalTime == undefined ? e.totalTime : totalTime);\n}\n/**\n * @param {?} element\n * @param {?} triggerName\n * @param {?} fromState\n * @param {?} toState\n * @param {?=} phaseName\n * @param {?=} totalTime\n * @return {?}\n */\nexport function makeAnimationEvent(\n    element: any, triggerName: string, fromState: string, toState: string, phaseName: string = null,\n    totalTime: number = null): AnimationEvent {\n  return {element, triggerName, fromState, toState, phaseName, totalTime};\n}\n/**\n * @param {?} map\n * @param {?} key\n * @param {?} defaultValue\n * @return {?}\n */\nexport function getOrSetAsInMap(\n    map: Map<any, any>| {[key: string]: any}, key: any, defaultValue: any) {\n  let /** @type {?} */ value: any;\n  if (map instanceof Map) {\n    value = map.get(key);\n    if (!value) {\n      map.set(key, value = defaultValue);\n    }\n  } else {\n    value = map[key];\n    if (!value) {\n      value = map[key] = defaultValue;\n    }\n  }\n  return value;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AnimateTimings, AnimationMetadata, sequence, ɵStyleData} from '@angular/animations';\n\nexport const /** @type {?} */ ONE_SECOND = 1000;\n\nexport const /** @type {?} */ ENTER_CLASSNAME = 'ng-enter';\nexport const /** @type {?} */ LEAVE_CLASSNAME = 'ng-leave';\nexport const /** @type {?} */ ENTER_SELECTOR = '.ng-enter';\nexport const /** @type {?} */ LEAVE_SELECTOR = '.ng-leave';\nexport const /** @type {?} */ NG_TRIGGER_CLASSNAME = 'ng-trigger';\nexport const /** @type {?} */ NG_TRIGGER_SELECTOR = '.ng-trigger';\nexport const /** @type {?} */ NG_ANIMATING_CLASSNAME = 'ng-animating';\nexport const /** @type {?} */ NG_ANIMATING_SELECTOR = '.ng-animating';\n/**\n * @param {?} timings\n * @param {?} errors\n * @param {?=} allowNegativeValues\n * @return {?}\n */\nexport function resolveTimingValue(\n    timings: string | number | AnimateTimings, errors: any[], allowNegativeValues?: boolean) {\n  return timings.hasOwnProperty('duration') ? /** @type {?} */((\n      <AnimateTimings>timings)) :\n      parseTimeExpression( /** @type {?} */((<string|number>timings)), errors, allowNegativeValues);\n}\n/**\n * @param {?} exp\n * @param {?} errors\n * @param {?=} allowNegativeValues\n * @return {?}\n */\nfunction parseTimeExpression(\n    exp: string | number, errors: string[], allowNegativeValues?: boolean): AnimateTimings {\n  const /** @type {?} */ regex = /^(-?[\\.\\d]+)(m?s)(?:\\s+(-?[\\.\\d]+)(m?s))?(?:\\s+([-a-z]+(?:\\(.+?\\))?))?$/i;\n  let /** @type {?} */ duration: number;\n  let /** @type {?} */ delay: number = 0;\n  let /** @type {?} */ easing: string = null;\n  if (typeof exp === 'string') {\n    const /** @type {?} */ matches = exp.match(regex);\n    if (matches === null) {\n      errors.push(`The provided timing value \"${exp}\" is invalid.`);\n      return {duration: 0, delay: 0, easing: null};\n    }\n\n    let /** @type {?} */ durationMatch = parseFloat(matches[1]);\n    const /** @type {?} */ durationUnit = matches[2];\n    if (durationUnit == 's') {\n      durationMatch *= ONE_SECOND;\n    }\n    duration = Math.floor(durationMatch);\n\n    const /** @type {?} */ delayMatch = matches[3];\n    const /** @type {?} */ delayUnit = matches[4];\n    if (delayMatch != null) {\n      let /** @type {?} */ delayVal: number = parseFloat(delayMatch);\n      if (delayUnit != null && delayUnit == 's') {\n        delayVal *= ONE_SECOND;\n      }\n      delay = Math.floor(delayVal);\n    }\n\n    const /** @type {?} */ easingVal = matches[5];\n    if (easingVal) {\n      easing = easingVal;\n    }\n  } else {\n    duration = /** @type {?} */(( <number>exp));\n  }\n\n  if (!allowNegativeValues) {\n    let /** @type {?} */ containsErrors = false;\n    let /** @type {?} */ startIndex = errors.length;\n    if (duration < 0) {\n      errors.push(`Duration values below 0 are not allowed for this animation step.`);\n      containsErrors = true;\n    }\n    if (delay < 0) {\n      errors.push(`Delay values below 0 are not allowed for this animation step.`);\n      containsErrors = true;\n    }\n    if (containsErrors) {\n      errors.splice(startIndex, 0, `The provided timing value \"${exp}\" is invalid.`);\n    }\n  }\n\n  return {duration, delay, easing};\n}\n/**\n * @param {?} obj\n * @param {?=} destination\n * @return {?}\n */\nexport function copyObj(\n    obj: {[key: string]: any}, destination: {[key: string]: any} = {}): {[key: string]: any} {\n  Object.keys(obj).forEach(prop => { destination[prop] = obj[prop]; });\n  return destination;\n}\n/**\n * @param {?} styles\n * @return {?}\n */\nexport function normalizeStyles(styles: ɵStyleData | ɵStyleData[]): ɵStyleData {\n  const /** @type {?} */ normalizedStyles: ɵStyleData = {};\n  if (Array.isArray(styles)) {\n    styles.forEach(data => copyStyles(data, false, normalizedStyles));\n  } else {\n    copyStyles(styles, false, normalizedStyles);\n  }\n  return normalizedStyles;\n}\n/**\n * @param {?} styles\n * @param {?} readPrototype\n * @param {?=} destination\n * @return {?}\n */\nexport function copyStyles(\n    styles: ɵStyleData, readPrototype: boolean, destination: ɵStyleData = {}): ɵStyleData {\n  if (readPrototype) {\n    // we make use of a for-in loop so that the\n    // prototypically inherited properties are\n    // revealed from the backFill map\n    for (let /** @type {?} */ prop in styles) {\n      destination[prop] = styles[prop];\n    }\n  } else {\n    copyObj(styles, destination);\n  }\n  return destination;\n}\n/**\n * @param {?} element\n * @param {?} styles\n * @return {?}\n */\nexport function setStyles(element: any, styles: ɵStyleData) {\n  if (element['style']) {\n    Object.keys(styles).forEach(prop => element.style[prop] = styles[prop]);\n  }\n}\n/**\n * @param {?} element\n * @param {?} styles\n * @return {?}\n */\nexport function eraseStyles(element: any, styles: ɵStyleData) {\n  if (element['style']) {\n    Object.keys(styles).forEach(prop => {\n      // IE requires '' instead of null\n      // see https://github.com/angular/angular/issues/7916\n      element.style[prop] = '';\n    });\n  }\n}\n/**\n * @param {?} steps\n * @return {?}\n */\nexport function normalizeAnimationEntry(steps: AnimationMetadata | AnimationMetadata[]):\n    AnimationMetadata {\n  if (Array.isArray(steps)) {\n    if (steps.length == 1) return steps[0];\n    return sequence(steps);\n  }\n  return /** @type {?} */(( steps as AnimationMetadata));\n}\n\n// this is a naive approach to search/replace\n// TODO: check to see that transforms are not effected\nconst /** @type {?} */ SIMPLE_STYLE_INTERPOLATION_REGEX = /\\$\\w+/g;\nconst /** @type {?} */ ADVANCED_STYLE_INTERPOLATION_REGEX = /\\$\\{([-\\w\\s]+)\\}/g;\n/**\n * @param {?} value\n * @param {?} locals\n * @param {?} errors\n * @return {?}\n */\nexport function validateStyleLocals(\n    value: string | number, locals: {[varName: string]: string | number | boolean}, errors: any[]) {\n  if (typeof value == 'string') {\n    matchAndValidate(SIMPLE_STYLE_INTERPOLATION_REGEX, 1, 0, /** @type {?} */(( value as string)), locals, errors);\n    matchAndValidate(ADVANCED_STYLE_INTERPOLATION_REGEX, 2, 1, /** @type {?} */(( value as string)), locals, errors);\n  }\n}\n/**\n * @param {?} regex\n * @param {?} prefixLength\n * @param {?} suffixLength\n * @param {?} str\n * @param {?} locals\n * @param {?} errors\n * @return {?}\n */\nfunction matchAndValidate(\n    regex: RegExp, prefixLength: number, suffixLength: number, str: string,\n    locals: {[varName: string]: string | number | boolean}, errors: any[]) {\n  const /** @type {?} */ matches = str.toString().match(regex);\n  if (matches) {\n    matches.forEach(varName => {\n      varName =\n          varName.substring(prefixLength, varName.length - suffixLength);  // drop the $ or ${}\n      if (!locals.hasOwnProperty(varName)) {\n        errors.push(\n            `Unable to resolve the local animation variable $${varName} in the given list of values`);\n      }\n    });\n  }\n}\n/**\n * @param {?} value\n * @param {?} locals\n * @param {?} errors\n * @return {?}\n */\nexport function interpolateStyleLocals(\n    value: string | number, locals: {[varName: string]: string | number | boolean},\n    errors: any[]): string {\n  let /** @type {?} */ str = value.toString();\n  str = matchAndReplace(SIMPLE_STYLE_INTERPOLATION_REGEX, 1, 0, str, locals, errors);\n  str = matchAndReplace(ADVANCED_STYLE_INTERPOLATION_REGEX, 2, 1, str, locals, errors);\n  return str;\n}\n/**\n * @param {?} regex\n * @param {?} prefixLength\n * @param {?} suffixLength\n * @param {?} str\n * @param {?} locals\n * @param {?} errors\n * @return {?}\n */\nfunction matchAndReplace(\n    regex: RegExp, prefixLength: number, suffixLength: number, str: string,\n    locals: {[varName: string]: string | number | boolean}, errors: any[]) {\n  return str.replace(regex, varName => {\n    varName = varName.substring(prefixLength, varName.length - suffixLength);  // drop the $ or ${}\n    let /** @type {?} */ localVal = locals[varName];\n    // this means that the value was never overidden by the data passed in by the user\n    if (localVal === true) {\n      errors.push(`Please provide a value for the animation variable $${varName}`);\n      localVal = '';\n    }\n    return localVal.toString();\n  });\n}\n/**\n * @param {?} iterator\n * @return {?}\n */\nexport function iteratorToArray(iterator: any): any[] {\n  const /** @type {?} */ arr: any[] = [];\n  let /** @type {?} */ item = iterator.next();\n  while (!item.done) {\n    arr.push(item.value);\n    item = iterator.next();\n  }\n  return arr;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AnimationPlayer, AnimationTriggerMetadata} from '@angular/animations';\n/**\n * @abstract\n */\nexport abstract class AnimationEngine {\n/**\n * @abstract\n * @param {?} componentId\n * @param {?} namespaceId\n * @param {?} hostElement\n * @param {?} name\n * @param {?} metadata\n * @return {?}\n */\nregisterTrigger(\n      componentId: string, namespaceId: string, hostElement: any, name: string,\n      metadata: AnimationTriggerMetadata) {}\n/**\n * @abstract\n * @param {?} namespaceId\n * @param {?} element\n * @param {?} parent\n * @param {?} insertBefore\n * @return {?}\n */\nonInsert(namespaceId: string, element: any, parent: any, insertBefore: boolean) {}\n/**\n * @abstract\n * @param {?} namespaceId\n * @param {?} element\n * @param {?} context\n * @return {?}\n */\nonRemove(namespaceId: string, element: any, context: any) {}\n/**\n * @abstract\n * @param {?} namespaceId\n * @param {?} element\n * @param {?} property\n * @param {?} value\n * @return {?}\n */\nsetProperty(namespaceId: string, element: any, property: string, value: any) {}\n/**\n * @abstract\n * @param {?} namespaceId\n * @param {?} element\n * @param {?} eventName\n * @param {?} eventPhase\n * @param {?} callback\n * @return {?}\n */\nlisten(\n      namespaceId: string, element: any, eventName: string, eventPhase: string,\n      callback: (event: any) => any) {}\n/**\n * @abstract\n * @return {?}\n */\nflush() {}\n/**\n * @abstract\n * @param {?} namespaceId\n * @param {?} context\n * @return {?}\n */\ndestroy(namespaceId: string, context: any) {}\n\n  onRemovalComplete: (delegate: any, element: any) => void;\npublic players: AnimationPlayer[];\n}\n\nfunction AnimationEngine_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationEngine.prototype.onRemovalComplete;\n/** @type {?} */\nAnimationEngine.prototype.players;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵStyleData} from '@angular/animations';\nimport {AnimationPlayer, NoopAnimationPlayer} from '@angular/animations';\n\n\n\n/**\n * @experimental\n */\nexport class NoopAnimationDriver implements AnimationDriver {\n  computeStyle(element: any, prop: string, defaultValue?: string): string {\n    return defaultValue || '';\n  }\n\n  animate(\n      element: any, keyframes: {[key: string]: string | number}[], duration: number, delay: number,\n      easing: string, previousPlayers: any[] = []): AnimationPlayer {\n    return new NoopAnimationPlayer();\n  }\n}\n\n/**\n * @experimental\n */\nexport abstract class AnimationDriver {\n  static NOOP: AnimationDriver = new NoopAnimationDriver();\n\n  abstract computeStyle(element: any, prop: string, defaultValue?: string): string;\n\n  abstract animate(\n      element: any, keyframes: {[key: string]: string | number}[], duration: number, delay: number,\n      easing: string, previousPlayers?: any[]): any;\n}\n"],"names":["DEFAULT_STATE_VALUE","NoopAnimationPlayer","PRE_STYLE","AUTO_STYLE","style"],"mappings":"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"}