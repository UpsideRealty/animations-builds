{"version":3,"file":"animations.umd.min.js","sources":["../../../../packages/animations/src/players/animation_player.ts","../../../../packages/animations/src/players/animation_group_player.ts","../../../../packages/animations/src/animation_builder.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {scheduleMicroTask} from '../util';\n/**\n * \\@experimental Animation support is experimental.\n * @abstract\n */\nexport abstract class AnimationPlayer {\n/**\n * @abstract\n * @param {?} fn\n * @return {?}\n */\nonDone(fn: () => void) {}\n/**\n * @abstract\n * @param {?} fn\n * @return {?}\n */\nonStart(fn: () => void) {}\n/**\n * @abstract\n * @param {?} fn\n * @return {?}\n */\nonDestroy(fn: () => void) {}\n/**\n * @abstract\n * @return {?}\n */\ninit() {}\n/**\n * @abstract\n * @return {?}\n */\nhasStarted() {}\n/**\n * @abstract\n * @return {?}\n */\nplay() {}\n/**\n * @abstract\n * @return {?}\n */\npause() {}\n/**\n * @abstract\n * @return {?}\n */\nrestart() {}\n/**\n * @abstract\n * @return {?}\n */\nfinish() {}\n/**\n * @abstract\n * @return {?}\n */\ndestroy() {}\n/**\n * @abstract\n * @return {?}\n */\nreset() {}\n/**\n * @abstract\n * @param {?} p\n * @return {?}\n */\nsetPosition(p: any) {}\n/**\n * @abstract\n * @return {?}\n */\ngetPosition() {}\n/**\n * @return {?}\n */\nget parentPlayer(): AnimationPlayer|null { throw new Error('NOT IMPLEMENTED: Base Class'); }\n/**\n * @param {?} player\n * @return {?}\n */\nset parentPlayer(player: AnimationPlayer|null) { throw new Error('NOT IMPLEMENTED: Base Class'); }\n/**\n * @return {?}\n */\nget totalTime(): number { throw new Error('NOT IMPLEMENTED: Base Class'); }\n  beforeDestroy?: () => any;\n}\n\nfunction AnimationPlayer_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationPlayer.prototype.beforeDestroy;\n}\n\n/**\n * \\@experimental Animation support is experimental.\n */\nexport class NoopAnimationPlayer implements AnimationPlayer {\nprivate _onDoneFns: Function[] = [];\nprivate _onStartFns: Function[] = [];\nprivate _onDestroyFns: Function[] = [];\nprivate _started = false;\nprivate _destroyed = false;\nprivate _finished = false;\npublic parentPlayer: AnimationPlayer|null = null;\npublic totalTime = 0;\nconstructor() {}\n/**\n * @return {?}\n */\nprivate _onFinish() {\n    if (!this._finished) {\n      this._finished = true;\n      this._onDoneFns.forEach(fn => fn());\n      this._onDoneFns = [];\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nonStart(fn: () => void): void { this._onStartFns.push(fn); }\n/**\n * @param {?} fn\n * @return {?}\n */\nonDone(fn: () => void): void { this._onDoneFns.push(fn); }\n/**\n * @param {?} fn\n * @return {?}\n */\nonDestroy(fn: () => void): void { this._onDestroyFns.push(fn); }\n/**\n * @return {?}\n */\nhasStarted(): boolean { return this._started; }\n/**\n * @return {?}\n */\ninit(): void {}\n/**\n * @return {?}\n */\nplay(): void {\n    if (!this.hasStarted()) {\n      this.triggerMicrotask();\n      this._onStart();\n    }\n    this._started = true;\n  }\n/**\n * @return {?}\n */\ntriggerMicrotask() { scheduleMicroTask(() => this._onFinish()); }\n/**\n * @return {?}\n */\nprivate _onStart() {\n    this._onStartFns.forEach(fn => fn());\n    this._onStartFns = [];\n  }\n/**\n * @return {?}\n */\npause(): void {}\n/**\n * @return {?}\n */\nrestart(): void {}\n/**\n * @return {?}\n */\nfinish(): void { this._onFinish(); }\n/**\n * @return {?}\n */\ndestroy(): void {\n    if (!this._destroyed) {\n      this._destroyed = true;\n      if (!this.hasStarted()) {\n        this._onStart();\n      }\n      this.finish();\n      this._onDestroyFns.forEach(fn => fn());\n      this._onDestroyFns = [];\n    }\n  }\n/**\n * @return {?}\n */\nreset(): void {}\n/**\n * @param {?} p\n * @return {?}\n */\nsetPosition(p: number): void {}\n/**\n * @return {?}\n */\ngetPosition(): number { return 0; }\n}\n\nfunction NoopAnimationPlayer_tsickle_Closure_declarations() {\n/** @type {?} */\nNoopAnimationPlayer.prototype._onDoneFns;\n/** @type {?} */\nNoopAnimationPlayer.prototype._onStartFns;\n/** @type {?} */\nNoopAnimationPlayer.prototype._onDestroyFns;\n/** @type {?} */\nNoopAnimationPlayer.prototype._started;\n/** @type {?} */\nNoopAnimationPlayer.prototype._destroyed;\n/** @type {?} */\nNoopAnimationPlayer.prototype._finished;\n/** @type {?} */\nNoopAnimationPlayer.prototype.parentPlayer;\n/** @type {?} */\nNoopAnimationPlayer.prototype.totalTime;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {scheduleMicroTask} from '../util';\nimport {AnimationPlayer} from './animation_player';\nexport class AnimationGroupPlayer implements AnimationPlayer {\nprivate _onDoneFns: Function[] = [];\nprivate _onStartFns: Function[] = [];\nprivate _finished = false;\nprivate _started = false;\nprivate _destroyed = false;\nprivate _onDestroyFns: Function[] = [];\npublic parentPlayer: AnimationPlayer|null = null;\npublic totalTime: number = 0;\n/**\n * @param {?} _players\n */\nconstructor(private _players: AnimationPlayer[]) {\n    let doneCount = 0;\n    let destroyCount = 0;\n    let startCount = 0;\n    const total = this._players.length;\n\n    if (total == 0) {\n      scheduleMicroTask(() => this._onFinish());\n    } else {\n      this._players.forEach(player => {\n        player.parentPlayer = this;\n        player.onDone(() => {\n          if (++doneCount >= total) {\n            this._onFinish();\n          }\n        });\n        player.onDestroy(() => {\n          if (++destroyCount >= total) {\n            this._onDestroy();\n          }\n        });\n        player.onStart(() => {\n          if (++startCount >= total) {\n            this._onStart();\n          }\n        });\n      });\n    }\n\n    this.totalTime = this._players.reduce((time, player) => Math.max(time, player.totalTime), 0);\n  }\n/**\n * @return {?}\n */\nprivate _onFinish() {\n    if (!this._finished) {\n      this._finished = true;\n      this._onDoneFns.forEach(fn => fn());\n      this._onDoneFns = [];\n    }\n  }\n/**\n * @return {?}\n */\ninit(): void { this._players.forEach(player => player.init()); }\n/**\n * @param {?} fn\n * @return {?}\n */\nonStart(fn: () => void): void { this._onStartFns.push(fn); }\n/**\n * @return {?}\n */\nprivate _onStart() {\n    if (!this.hasStarted()) {\n      this._onStartFns.forEach(fn => fn());\n      this._onStartFns = [];\n      this._started = true;\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nonDone(fn: () => void): void { this._onDoneFns.push(fn); }\n/**\n * @param {?} fn\n * @return {?}\n */\nonDestroy(fn: () => void): void { this._onDestroyFns.push(fn); }\n/**\n * @return {?}\n */\nhasStarted() { return this._started; }\n/**\n * @return {?}\n */\nplay() {\n    if (!this.parentPlayer) {\n      this.init();\n    }\n    this._onStart();\n    this._players.forEach(player => player.play());\n  }\n/**\n * @return {?}\n */\npause(): void { this._players.forEach(player => player.pause()); }\n/**\n * @return {?}\n */\nrestart(): void { this._players.forEach(player => player.restart()); }\n/**\n * @return {?}\n */\nfinish(): void {\n    this._onFinish();\n    this._players.forEach(player => player.finish());\n  }\n/**\n * @return {?}\n */\ndestroy(): void { this._onDestroy(); }\n/**\n * @return {?}\n */\nprivate _onDestroy() {\n    if (!this._destroyed) {\n      this._destroyed = true;\n      this._onFinish();\n      this._players.forEach(player => player.destroy());\n      this._onDestroyFns.forEach(fn => fn());\n      this._onDestroyFns = [];\n    }\n  }\n/**\n * @return {?}\n */\nreset(): void {\n    this._players.forEach(player => player.reset());\n    this._destroyed = false;\n    this._finished = false;\n    this._started = false;\n  }\n/**\n * @param {?} p\n * @return {?}\n */\nsetPosition(p: number): void {\n    const /** @type {?} */ timeAtPosition = p * this.totalTime;\n    this._players.forEach(player => {\n      const /** @type {?} */ position = player.totalTime ? Math.min(1, timeAtPosition / player.totalTime) : 1;\n      player.setPosition(position);\n    });\n  }\n/**\n * @return {?}\n */\ngetPosition(): number {\n    let /** @type {?} */ min = 0;\n    this._players.forEach(player => {\n      const /** @type {?} */ p = player.getPosition();\n      min = Math.min(p, min);\n    });\n    return min;\n  }\n/**\n * @return {?}\n */\nget players(): AnimationPlayer[] { return this._players; }\n}\n\nfunction AnimationGroupPlayer_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationGroupPlayer.prototype._onDoneFns;\n/** @type {?} */\nAnimationGroupPlayer.prototype._onStartFns;\n/** @type {?} */\nAnimationGroupPlayer.prototype._finished;\n/** @type {?} */\nAnimationGroupPlayer.prototype._started;\n/** @type {?} */\nAnimationGroupPlayer.prototype._destroyed;\n/** @type {?} */\nAnimationGroupPlayer.prototype._onDestroyFns;\n/** @type {?} */\nAnimationGroupPlayer.prototype.parentPlayer;\n/** @type {?} */\nAnimationGroupPlayer.prototype.totalTime;\n/** @type {?} */\nAnimationGroupPlayer.prototype._players;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AnimationMetadata, AnimationOptions} from './animation_metadata';\nimport {AnimationPlayer} from './players/animation_player';\n/**\n * \\@experimental Animation support is experimental.\n * @abstract\n */\nexport abstract class AnimationBuilder {\n/**\n * @abstract\n * @param {?} animation\n * @return {?}\n */\nbuild(animation: AnimationMetadata|AnimationMetadata[]) {}\n}\n/**\n * \\@experimental Animation support is experimental.\n * @abstract\n */\nexport abstract class Animation {\n/**\n * @abstract\n * @param {?} element\n * @param {?=} options\n * @return {?}\n */\ncreate(element: any, options?: AnimationOptions) {}\n}\n"],"names":["AnimationPlayer","prototype","onDestroy","fn","init","hasStarted","play","pause","restart","finish","getPosition","get","Error","NoopAnimationPlayer","this","_onDestroyFns","_started","totalTime","_finished","onStart","_onStartFns","push","_onFinish","destroy","_onStart","reset","AnimationGroupPlayer","_players","_this","_onDoneFns","_destroyed","parentPlayer","doneCount","destroyCount","startCount","total","length","scheduleMicroTask","forEach","player","onDone","_onDestroy","reduce","time","Math","max","setPosition","p","timeAtPosition","min","exports","module","factory"],"mappings":";;;;;0BEAA,gBAAAkD,UAAA,mBAAAC,QAAAC,QAAAF;;;;;;;;;;;;;;;;;;;;;2UFuCA,wGAEAlD,gBAAAC,UAAAC,UAAA,SAxBYC,MA6BZH,gBAAAC,UAAAG,KAAA,aAKAJ,gBAAAC,UAAAI,WAAA,aAKAL,gBAAAC,UAAAK,KAAA,aAKAN,gBAAAC,UAAAM,MAAA,aAKAP,gBAAAC,UAAAO,QAAA,aAKAR,gBAAAC,UAAAQ,OAAA,6JAoBAT,gBAAAC,UAAAS,YAAA,6EAMAC,IAAA,WAAA,KAAA,IAAAC,OAAA,kMAmBAD,IAAA,WAAA,KAAA,IAAAC,OAAA,gEA7EAZ,mBAKAa,oBAAA,iFACAC,KAAGC,iBA4EHD,KAAAE,UAAA,8DAIAF,KAAAG,UAAA,4DAMAH,KAAAI,sGAUAL,oBAAAZ,UAAAkB,QAAA,SAAAhB,IAAAW,KAAAM,YAAAC,KAAAlB,6OAkBAU,oBAAAZ,UAAAG,KAAA,aAIAS,oBAAAZ,UAAAK,KAAA,wEAKAQ,KAAAE,UAAA,oWAwBAH,oBAAAZ,UAAAQ,OAAA,WAAAK,KAAAQ,aAIAT,oBAAAZ,UAAAsB,QAAA,mEA7GAT,KAAAU,uGA2HAX,oBAAAZ,UAAAwB,MAAA,2JCnMAC,qBAAA,WAKA,QAAAA,sBAAAC,UAII,GAAIC,OAARd,IACIA,MAAJa,SAAAA,SACIb,KAAJe,cACIf,KAAJM,eAEIN,KAAJI,WAAA,EACAJ,KAAAE,UAAA,EACAF,KAAAgB,YAAA,EAAAhB,KAAAC,iBACAD,KAAAiB,aAAA,KACAjB,KAAAG,UAAA,CACA,IAAAe,WAAA,EACAC,aAAA,EACAC,WAAA,EACAC,MAAArB,KAAAa,SAAAS,MACA,IAAAD,MACAE,kBAAA,WAAA,MAAAT,OAAAN,cAGAR,KAAAa,SAAAW,QAAA,SAAAC,QACAA,OAAAR,aAAAH,MACQW,OAAOC,OAAf,aACgBR,WAAhBG,OACYP,MAAKN,cAGjBiB,OAAArC,UAAA,aACA+B,cAAAE,OAEAP,MAAyBa,8DAEzBb,MAAAJ,eAQAV,KAAAG,UAAAH,KAAAa,SAAAe,OAAA,SAAAC,KAAAJ,QAAA,MAAAK,MAAAC,IAAAF,KAAAJ,OAAAtB,YAAA,SAKAS,sBAAAzB,UAAAqB,UAAA,sHAUAI,qBAAAzB,UAAAG,KAAA,WAAAU,KAVca,SAUdW,QAAA,SAAAC,QAAA,MAAAA,QAAAnC,UAKAsB,qBAAAzB,UAAAkB,QAAA,SAAAhB,IAAAW,KAAAM,YAAAC,KAAAlB,wDAKAW,KAAAT,0QAmBAqB,qBAAAzB,UAAAI,WAAA,WAAA,MAAAS,MAAAE,UAIAU,qBAAAzB,UAAAK,KAAA,+ZAoBAQ,KAAAa,SAAAW,QAAA,SAAAC,QAAA,MAAAA,QAAA9B,YAKAiB,qBAAAzB,UAAAsB,QAAA,WAAAT,KAAA2B,qFA1BA3B,KAAAgB,YAAA,EAiCAhB,KAAAQ,2JASAI,qBAAAzB,UAAAwB,MAAA,iIAUAC,qBAAAzB,UAAA6C,YAAA,SAAAC,GACA,GAAAC,gBAAAD,EAAAjC,KAAAG,mNA7BG,GAAHgC,KAAA,QAwCAnC,MAAAa,SAAAW,QAAA,SAAAC,8HAvJA5B,IAAA,WAAA,MAAAG,MAAAa"}